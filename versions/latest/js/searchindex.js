Search.setIndex({"alltitles": {"A preview of future Ax API": [[13, "a-preview-of-future-ax-api"]], "API Reference": [[8, null]], "Analysis": [[0, "module-ax.analysis.analysis"]], "Arm": [[3, "module-ax.core.arm"]], "AuxiliaryExperiment": [[3, "auxiliaryexperiment"]], "Ax Client": [[15, "module-ax.service.ax_client"]], "Ax Experiment Health Checks": [[7, "ax-experiment-health-checks"]], "AxClient": [[17, "module-ax.telemetry.ax_client"]], "Backend Scheduler": [[18, "backend-scheduler"]], "Backend Simulator": [[18, "module-ax.utils.testing.backend_simulator"]], "Backend Simulator Map": [[18, "module-ax.utils.testing.metrics.backend_simulator_map"]], "Bandit Rollout": [[12, "module-ax.plot.bandit_rollout"]], "Base": [[12, "module-ax.plot.base"], [18, "module-ax.utils.common.base"]], "Base Model Bridge": [[10, "module-ax.modelbridge.base"]], "Base Models & Utilities": [[11, "base-models-utilities"]], "Base Strategies": [[4, "module-ax.early_stopping.strategies.base"], [6, "module-ax.global_stopping.strategies.base"]], "BaseTrial": [[3, "module-ax.core.base_trial"]], "BatchTrial": [[3, "module-ax.core.batch_trial"]], "Benchmark": [[2, "benchmark"], [2, "id9"]], "Benchmark Method": [[2, "module-ax.benchmark.benchmark_method"]], "Benchmark Methods Modular BoTorch": [[2, "module-ax.benchmark.methods.modular_botorch"]], "Benchmark Methods Sobol": [[2, "module-ax.benchmark.methods.sobol"]], "Benchmark Metric": [[2, "module-ax.benchmark.benchmark_metric"]], "Benchmark Problem": [[2, "module-ax.benchmark.benchmark_problem"]], "Benchmark Problems High Dimensional Embedding": [[2, "module-ax.benchmark.problems.hd_embedding"]], "Benchmark Problems Jenatton": [[2, "module-ax.benchmark.problems.synthetic.hss.jenatton"]], "Benchmark Problems Mixed Integer Synthetic": [[2, "module-ax.benchmark.problems.synthetic.discretized.mixed_integer"]], "Benchmark Problems PyTorchCNN": [[2, "benchmark-problems-pytorchcnn"]], "Benchmark Problems PyTorchCNN TorchVision": [[2, "module-ax.benchmark.problems.hpo.torchvision"]], "Benchmark Problems Registry": [[2, "module-ax.benchmark.problems.registry"]], "Benchmark Result": [[2, "module-ax.benchmark.benchmark_result"]], "Benchmark Runner": [[2, "module-ax.benchmark.benchmark_runner"]], "Benchmark Stubs": [[18, "module-ax.utils.testing.benchmark_stubs"]], "Benchmark Test Function": [[2, "module-ax.benchmark.benchmark_test_function"]], "Benchmark Test Functions: BoTorch Test": [[2, "module-ax.benchmark.benchmark_test_functions.botorch_test"]], "Benchmark Test Functions: Surrogate": [[2, "module-ax.benchmark.benchmark_test_functions.surrogate"]], "Best Point Identification": [[15, "module-ax.service.utils.best_point_mixin"]], "BoTorch Test Problem": [[14, "botorch-test-problem"]], "Branin": [[9, "module-ax.metrics.branin"]], "Branin Backend Map": [[18, "module-ax.utils.testing.metrics.branin_backend_map"]], "Branin Map": [[9, "module-ax.metrics.branin_map"]], "Can Generate Candidates Healthcheck Analysis": [[0, "can-generate-candidates-healthcheck-analysis"]], "Chemistry": [[9, "module-ax.metrics.chemistry"]], "Common": [[17, "module-ax.telemetry.common"], [18, "common"]], "Configs": [[13, "module-ax.preview.api.configs"]], "Constants": [[5, "module-ax.exceptions.constants"], [18, "module-ax.utils.common.constants"]], "Contour Plot": [[12, "module-ax.plot.contour"]], "Core": [[5, "module-ax.exceptions.core"]], "Core Classes": [[3, "core-classes"]], "Core Stubs": [[18, "module-ax.utils.testing.core_stubs"]], "Core Types": [[3, "module-ax.core.types"]], "Core Utils": [[3, "module-ax.core.utils"]], "Cross Validation": [[10, "module-ax.modelbridge.cross_validation"]], "Cross Validation Analysis": [[0, "module-ax.analysis.plotly.cross_validation"]], "Curve": [[9, "module-ax.metrics.curve"]], "Data": [[3, "data"], [5, "module-ax.exceptions.data_provider"]], "Decorator": [[18, "module-ax.utils.common.decorator"]], "Deprecation": [[18, "module-ax.utils.common.deprecation"]], "Derivative GP": [[18, "module-ax.utils.sensitivity.derivative_gp"]], "Derivative Measures": [[18, "module-ax.utils.sensitivity.derivative_measures"]], "Discrete Model Bridge": [[10, "module-ax.modelbridge.discrete"]], "Discrete Models": [[11, "discrete-models"]], "Dispatch Utilities": [[10, "module-ax.modelbridge.dispatch_utils"]], "Docstring Checker": [[18, "module-ax.utils.flake8_plugins.docstring_checker"]], "Docutils": [[18, "module-ax.utils.common.docutils"]], "EarlyStopping": [[15, "module-ax.service.utils.early_stopping"]], "Equality": [[18, "module-ax.utils.common.equality"]], "Executils": [[18, "module-ax.utils.common.executils"]], "Experiment": [[3, "module-ax.core.experiment"], [17, "module-ax.telemetry.experiment"]], "External Generation Node": [[10, "external-generation-node"]], "Factorial": [[9, "module-ax.metrics.factorial"]], "Factory": [[10, "module-ax.modelbridge.factory"]], "Feature Importances": [[12, "module-ax.plot.feature_importances"]], "Flake8 Plugins": [[18, "flake8-plugins"]], "Formatting Utils": [[3, "module-ax.core.formatting_utils"]], "FuncEnum": [[18, "module-ax.utils.common.func_enum"]], "General Utilities": [[10, "module-ax.modelbridge.modelbridge_utils"]], "Generation Node": [[10, "module-ax.modelbridge.generation_node"]], "Generation Strategy": [[5, "module-ax.exceptions.generation_strategy"], [10, "module-ax.modelbridge.generation_strategy"], [17, "module-ax.telemetry.generation_strategy"]], "Generation Strategy, Registry, and Factory": [[10, "generation-strategy-registry-and-factory"]], "GenerationStrategyInterface": [[3, "module-ax.core.generation_strategy_interface"]], "GeneratorRun": [[3, "module-ax.core.generator_run"]], "Hartmann6": [[9, "module-ax.metrics.hartmann6"]], "Healthcheck Analysis": [[0, "module-ax.analysis.healthcheck.healthcheck_analysis"]], "ImprovementGlobalStoppingStrategy": [[6, "module-ax.global_stopping.strategies.improvement"]], "InSample Effects Analysis": [[0, "insample-effects-analysis"]], "Indices and tables": [[8, "indices-and-tables"]], "Instantiation": [[15, "module-ax.service.utils.instantiation"]], "Interactive Loop": [[15, "module-ax.service.interactive_loop"]], "JSON": [[16, "json"]], "Kwargs": [[18, "module-ax.utils.common.kwargs"]], "L2 Norm": [[9, "module-ax.metrics.l2norm"]], "Logger": [[18, "module-ax.utils.common.logger"]], "Logical Strategies": [[4, "module-ax.early_stopping.strategies.logical"]], "Managed Loop": [[15, "module-ax.service.managed_loop"]], "Map Torch Model Bridge": [[10, "module-ax.modelbridge.map_torch"]], "MapData": [[3, "mapdata"]], "MapMetric": [[3, "mapmetric"]], "Marginal Effects": [[12, "module-ax.plot.marginal_effects"]], "Markdown Analysis": [[0, "module-ax.analysis.markdown.markdown_analysis"]], "Measurement": [[18, "measurement"]], "Metric": [[3, "metric"]], "Mock Torch": [[18, "module-ax.utils.common.mock"]], "Mocking": [[18, "module-ax.utils.testing.mock"]], "Model": [[5, "module-ax.exceptions.model"]], "Model Bridges": [[10, "model-bridges"]], "Model Diagnostics": [[12, "module-ax.plot.diagnostic"]], "Model Fit Metrics": [[18, "module-ax.utils.stats.model_fit_stats"]], "Model Selection": [[10, "module-ax.modelbridge.best_model_selector"]], "ModelSpec": [[10, "module-ax.modelbridge.model_spec"]], "Modeling Stubs": [[18, "module-ax.utils.testing.modeling_stubs"]], "MultiTypeExperiment": [[3, "module-ax.core.multi_type_experiment"]], "Neural Net": [[18, "module-ax.utils.tutorials.cnn_utils"]], "Noisy Function Map": [[9, "module-ax.metrics.noisy_function_map"]], "Noisy Functions": [[9, "module-ax.metrics.noisy_function"]], "Notebook": [[18, "notebook"]], "Objective": [[3, "objective"]], "Observation": [[3, "module-ax.core.observation"]], "Optimization": [[17, "module-ax.telemetry.optimization"]], "OptimizationConfig": [[3, "module-ax.core.optimization_config"]], "OutcomeConstraint": [[3, "outcomeconstraint"]], "Pairwise Model Bridge": [[10, "module-ax.modelbridge.pairwise"]], "Parallel Coordinates": [[12, "parallel-coordinates"]], "Parallel Coordinates Analysis": [[0, "module-ax.analysis.plotly.parallel_coordinates"]], "Parameter": [[3, "module-ax.core.parameter"]], "ParameterConstraint": [[3, "module-ax.core.parameter_constraint"]], "ParameterDistribution": [[3, "module-ax.core.parameter_distribution"]], "Pareto Plots": [[12, "module-ax.plot.pareto_frontier"]], "PercentileEarlyStoppingStrategy": [[4, "module-ax.early_stopping.strategies.percentile"]], "Plotly Analysis": [[0, "module-ax.analysis.plotly.plotly_analysis"]], "Plotly Analysis Utils": [[0, "plotly-analysis-utils"]], "Plotly Arm Effects Utils": [[0, "plotly-arm-effects-utils"]], "Plots": [[12, "plots"]], "Plotting": [[18, "module-ax.utils.notebook.plotting"]], "Plotting Utilities": [[12, "module-ax.plot.color"]], "Predicted Effects Analysis": [[0, "module-ax.analysis.plotly.arm_effects.predicted_effects"]], "Prediction Utilities": [[10, "module-ax.modelbridge.prediction_utils"]], "Preference Stubs": [[18, "preference-stubs"]], "Random": [[18, "module-ax.utils.common.random"]], "Random Model Bridge": [[10, "random-model-bridge"]], "Random Models": [[11, "random-models"]], "Registries": [[16, "module-ax.storage.botorch_modular_registry"]], "Registry": [[10, "module-ax.modelbridge.registry"]], "Render": [[18, "module-ax.utils.report.render"]], "Rendering": [[12, "module-ax.plot.render"]], "Report": [[18, "report"]], "Reporting": [[15, "module-ax.service.utils.report_utils"]], "Result": [[18, "module-ax.utils.common.result"]], "RiskMeasure": [[3, "module-ax.core.risk_measures"]], "Runner": [[3, "module-ax.core.runner"]], "SQLAlchemy (MySQL / SQLite)": [[16, "sqlalchemy-mysql-sqlite"]], "Scatter Plot Analysis": [[0, "module-ax.analysis.plotly.scatter"]], "Scatter Plots": [[12, "module-ax.plot.scatter"]], "Scheduler": [[15, "module-ax.service.scheduler"], [17, "module-ax.telemetry.scheduler"]], "Search Space": [[7, "module-ax.health_check.search_space"]], "SearchSpace": [[3, "searchspace"]], "Sensitivity": [[18, "sensitivity"]], "Serialization": [[18, "module-ax.utils.common.serialization"]], "Should Generate Candidates Healthcheck Analysis": [[0, "should-generate-candidates-healthcheck-analysis"]], "Simulated Backend Runner": [[14, "module-ax.runners.simulated_backend"]], "SingleRunningTrialMixin": [[14, "module-ax.runners.single_running_trial_mixin"]], "Sklearn": [[9, "module-ax.metrics.sklearn"]], "Slice Plot": [[12, "module-ax.plot.slice"]], "Sobol Measures": [[18, "module-ax.utils.sensitivity.sobol_measures"]], "Stats": [[18, "stats"]], "Statstools": [[18, "module-ax.utils.stats.statstools"]], "Storage": [[5, "module-ax.exceptions.storage"]], "Strategies": [[4, "strategies"], [6, "strategies"]], "Summary": [[0, "module-ax.analysis.summary"]], "Synthetic Functions": [[18, "module-ax.utils.measurement.synthetic_functions"]], "Synthetic Runner": [[14, "module-ax.runners.synthetic"]], "Table": [[12, "module-ax.plot.table_view"]], "Tensorboard": [[9, "module-ax.metrics.tensorboard"]], "Test Init Files": [[18, "module-ax.utils.testing.test_init_files"]], "Test Metrics": [[18, "test-metrics"]], "Testing": [[18, "testing"]], "Testutils": [[18, "module-ax.utils.common.testutils"]], "ThresholdEarlyStoppingStrategy": [[4, "module-ax.early_stopping.strategies.threshold"]], "Timeutils": [[18, "module-ax.utils.common.timeutils"]], "Torch Model Bridge": [[10, "module-ax.modelbridge.torch"]], "Torch Models & Utilities": [[11, "torch-models-utilities"]], "Torch Stubs": [[18, "module-ax.utils.testing.torch_stubs"]], "TorchX": [[9, "module-ax.metrics.torchx"]], "TorchX Runner": [[14, "module-ax.runners.torchx"]], "Trace Plots": [[12, "module-ax.plot.trace"]], "Transforms": [[10, "transforms"]], "Trial": [[3, "module-ax.core.trial"]], "Tutorials": [[18, "tutorials"]], "Typeutils": [[18, "module-ax.utils.common.typeutils"]], "Typeutils Non-Native": [[18, "typeutils-non-native"]], "Typeutils Torch": [[18, "module-ax.utils.common.typeutils_torch"]], "Utilities": [[10, "utilities"], [16, "module-ax.storage.utils"]], "Utils": [[4, "module-ax.early_stopping.utils"], [15, "utils"], [18, "module-ax.utils.testing.utils"]], "WithDBSettingsBase": [[15, "module-ax.service.utils.with_db_settings_base"]], "ax": [[1, null]], "ax.analysis": [[0, null]], "ax.benchmark": [[2, null]], "ax.core": [[3, null]], "ax.early_stopping": [[4, null]], "ax.exceptions": [[5, null]], "ax.global_stopping": [[6, null]], "ax.health_check": [[7, null]], "ax.metrics": [[9, null]], "ax.modelbridge": [[10, null]], "ax.modelbridge.transforms.base": [[10, "module-ax.modelbridge.transforms.base"]], "ax.modelbridge.transforms.cast": [[10, "module-ax.modelbridge.transforms.cast"]], "ax.modelbridge.transforms.choice_encode": [[10, "module-ax.modelbridge.transforms.choice_encode"]], "ax.modelbridge.transforms.convert_metric_names": [[10, "module-ax.modelbridge.transforms.convert_metric_names"]], "ax.modelbridge.transforms.deprecated_transform_mixin": [[10, "module-ax.modelbridge.transforms.deprecated_transform_mixin"]], "ax.modelbridge.transforms.derelativize": [[10, "module-ax.modelbridge.transforms.derelativize"]], "ax.modelbridge.transforms.fill_missing_parameters": [[10, "ax-modelbridge-transforms-fill-missing-parameters"]], "ax.modelbridge.transforms.int_range_to_choice": [[10, "module-ax.modelbridge.transforms.int_range_to_choice"]], "ax.modelbridge.transforms.int_to_float": [[10, "module-ax.modelbridge.transforms.int_to_float"]], "ax.modelbridge.transforms.ivw": [[10, "module-ax.modelbridge.transforms.ivw"]], "ax.modelbridge.transforms.log": [[10, "module-ax.modelbridge.transforms.log"]], "ax.modelbridge.transforms.log_y": [[10, "module-ax.modelbridge.transforms.log_y"]], "ax.modelbridge.transforms.logit": [[10, "module-ax.modelbridge.transforms.logit"]], "ax.modelbridge.transforms.map_unit_x": [[10, "module-ax.modelbridge.transforms.map_unit_x"]], "ax.modelbridge.transforms.merge_repeated_measurements": [[10, "module-ax.modelbridge.transforms.merge_repeated_measurements"]], "ax.modelbridge.transforms.metrics_as_task": [[10, "module-ax.modelbridge.transforms.metrics_as_task"]], "ax.modelbridge.transforms.one_hot": [[10, "module-ax.modelbridge.transforms.one_hot"]], "ax.modelbridge.transforms.power_transform_y": [[10, "module-ax.modelbridge.transforms.power_transform_y"]], "ax.modelbridge.transforms.relativize": [[10, "module-ax.modelbridge.transforms.relativize"]], "ax.modelbridge.transforms.remove_fixed": [[10, "module-ax.modelbridge.transforms.remove_fixed"]], "ax.modelbridge.transforms.rounding": [[10, "module-ax.modelbridge.transforms.rounding"]], "ax.modelbridge.transforms.search_space_to_choice": [[10, "module-ax.modelbridge.transforms.search_space_to_choice"]], "ax.modelbridge.transforms.search_space_to_float": [[10, "ax-modelbridge-transforms-search-space-to-float"]], "ax.modelbridge.transforms.stratified_standardize_y": [[10, "module-ax.modelbridge.transforms.stratified_standardize_y"]], "ax.modelbridge.transforms.task_encode": [[10, "module-ax.modelbridge.transforms.task_encode"]], "ax.modelbridge.transforms.time_as_feature": [[10, "ax-modelbridge-transforms-time-as-feature"]], "ax.modelbridge.transforms.transform_to_new_sq": [[10, "ax-modelbridge-transforms-transform-to-new-sq"]], "ax.modelbridge.transforms.trial_as_task": [[10, "module-ax.modelbridge.transforms.trial_as_task"]], "ax.modelbridge.transforms.unit_x": [[10, "module-ax.modelbridge.transforms.unit_x"]], "ax.modelbridge.transforms.utils": [[10, "module-ax.modelbridge.transforms.utils"]], "ax.modelbridge.winsorize": [[10, "module-ax.modelbridge.transforms.winsorize"]], "ax.models": [[11, null]], "ax.models.base": [[11, "module-ax.models.base"]], "ax.models.discrete.eb_thompson module": [[11, "module-ax.models.discrete.eb_thompson"]], "ax.models.discrete.full_factorial module": [[11, "module-ax.models.discrete.full_factorial"]], "ax.models.discrete.thompson module": [[11, "module-ax.models.discrete.thompson"]], "ax.models.discrete_base module": [[11, "module-ax.models.discrete_base"]], "ax.models.model_utils module": [[11, "module-ax.models.model_utils"]], "ax.models.random.base module": [[11, "module-ax.models.random.base"]], "ax.models.random.sobol module": [[11, "module-ax.models.random.sobol"]], "ax.models.random.uniform module": [[11, "module-ax.models.random.uniform"]], "ax.models.torch.botorch module": [[11, "module-ax.models.torch.botorch"]], "ax.models.torch.botorch_defaults module": [[11, "module-ax.models.torch.botorch_defaults"]], "ax.models.torch.botorch_modular.acquisition module": [[11, "module-ax.models.torch.botorch_modular.acquisition"]], "ax.models.torch.botorch_modular.input_constructors.covar_modules module": [[11, "module-ax.models.torch.botorch_modular.input_constructors.covar_modules"]], "ax.models.torch.botorch_modular.input_constructors.input_transforms module": [[11, "module-ax.models.torch.botorch_modular.input_constructors.input_transforms"]], "ax.models.torch.botorch_modular.input_constructors.outcome_transform module": [[11, "module-ax.models.torch.botorch_modular.input_constructors.outcome_transform"]], "ax.models.torch.botorch_modular.kernels module": [[11, "module-ax.models.torch.botorch_modular.kernels"]], "ax.models.torch.botorch_modular.model module": [[11, "module-ax.models.torch.botorch_modular.model"]], "ax.models.torch.botorch_modular.multi_fidelity module": [[11, "ax-models-torch-botorch-modular-multi-fidelity-module"]], "ax.models.torch.botorch_modular.optimizer_argparse module": [[11, "module-ax.models.torch.botorch_modular.optimizer_argparse"]], "ax.models.torch.botorch_modular.sebo module": [[11, "module-ax.models.torch.botorch_modular.sebo"]], "ax.models.torch.botorch_modular.surrogate module": [[11, "module-ax.models.torch.botorch_modular.surrogate"]], "ax.models.torch.botorch_modular.utils module": [[11, "module-ax.models.torch.botorch_modular.utils"]], "ax.models.torch.botorch_moo module": [[11, "module-ax.models.torch.botorch_moo"]], "ax.models.torch.botorch_moo_defaults module": [[11, "module-ax.models.torch.botorch_moo_defaults"]], "ax.models.torch.cbo_lcea module": [[11, "module-ax.models.torch.cbo_lcea"]], "ax.models.torch.cbo_lcem module": [[11, "module-ax.models.torch.cbo_lcem"]], "ax.models.torch.cbo_sac module": [[11, "module-ax.models.torch.cbo_sac"]], "ax.models.torch.fully_bayesian module": [[11, "ax-models-torch-fully-bayesian-module"]], "ax.models.torch.fully_bayesian_model_utils module": [[11, "ax-models-torch-fully-bayesian-model-utils-module"]], "ax.models.torch.randomforest module": [[11, "module-ax.models.torch.randomforest"]], "ax.models.torch.utils module": [[11, "module-ax.models.torch.utils"]], "ax.models.torch_base module": [[11, "module-ax.models.torch_base"]], "ax.models.types": [[11, "module-ax.models.types"]], "ax.models.winsorization_config module": [[11, "module-ax.models.winsorization_config"]], "ax.plot": [[12, null]], "ax.preview": [[13, null]], "ax.runners": [[14, null]], "ax.service": [[15, null]], "ax.storage": [[16, null]], "ax.storage.json_store.decoder module": [[16, "module-ax.storage.json_store.decoder"]], "ax.storage.json_store.decoders module": [[16, "module-ax.storage.json_store.decoders"]], "ax.storage.json_store.encoder module": [[16, "module-ax.storage.json_store.encoder"]], "ax.storage.json_store.encoders module": [[16, "module-ax.storage.json_store.encoders"]], "ax.storage.json_store.load module": [[16, "module-ax.storage.json_store.load"]], "ax.storage.json_store.registry module": [[16, "module-ax.storage.json_store.registry"]], "ax.storage.json_store.save module": [[16, "module-ax.storage.json_store.save"]], "ax.storage.sqa_store.base_decoder module": [[16, "module-ax.storage.sqa_store.decoder"]], "ax.storage.sqa_store.base_encoder module": [[16, "module-ax.storage.sqa_store.encoder"]], "ax.storage.sqa_store.db module": [[16, "module-ax.storage.sqa_store.db"]], "ax.storage.sqa_store.delete module": [[16, "module-ax.storage.sqa_store.delete"]], "ax.storage.sqa_store.json module": [[16, "module-ax.storage.sqa_store.json"]], "ax.storage.sqa_store.load module": [[16, "module-ax.storage.sqa_store.load"]], "ax.storage.sqa_store.reduced_state module": [[16, "module-ax.storage.sqa_store.reduced_state"]], "ax.storage.sqa_store.save module": [[16, "module-ax.storage.sqa_store.save"]], "ax.storage.sqa_store.sqa_classes module": [[16, "module-ax.storage.sqa_store.sqa_classes"]], "ax.storage.sqa_store.sqa_config module": [[16, "ax-storage-sqa-store-sqa-config-module"]], "ax.storage.sqa_store.sqa_enum module": [[16, "module-ax.storage.sqa_store.sqa_enum"]], "ax.storage.sqa_store.structs module": [[16, "module-ax.storage.sqa_store.structs"]], "ax.storage.sqa_store.timestamp module": [[16, "module-ax.storage.sqa_store.timestamp"]], "ax.storage.sqa_store.utils module": [[16, "module-ax.storage.sqa_store.utils"]], "ax.storage.sqa_store.validation module": [[16, "module-ax.storage.sqa_store.validation"]], "ax.telemetry": [[17, null]], "ax.utils": [[18, null]], "}": [[10, "id11"], [14, "id1"]]}, "docnames": ["analysis", "ax", "benchmark", "core", "early_stopping", "exceptions", "global_stopping", "health_check", "index", "metrics", "modelbridge", "models", "plot", "preview", "runners", "service", "storage", "telemetry", "utils"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["analysis.rst", "ax.rst", "benchmark.rst", "core.rst", "early_stopping.rst", "exceptions.rst", "global_stopping.rst", "health_check.rst", "index.rst", "metrics.rst", "modelbridge.rst", "models.rst", "plot.rst", "preview.rst", "runners.rst", "service.rst", "storage.rst", "telemetry.rst", "utils.rst"], "indexentries": {"_skip_experiment_save (ax.service.scheduler.scheduler attribute)": [[15, "ax.service.scheduler.Scheduler._skip_experiment_save", false]], "a000() (in module ax.utils.flake8_plugins.docstring_checker)": [[18, "ax.utils.flake8_plugins.docstring_checker.A000", false]], "abandon_trial() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.abandon_trial", false]], "abandoned (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.ABANDONED", false]], "abandoned_arm_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.abandoned_arm_from_sqa", false]], "abandoned_arm_names (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.abandoned_arm_names", false]], "abandoned_arm_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.abandoned_arm_to_sqa", false]], "abandoned_arms (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.abandoned_arms", false]], "abandoned_arms (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.abandoned_arms", false]], "abandoned_arms (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.abandoned_arms", false]], "abandoned_arms (ax.storage.sqa_store.sqa_classes.sqatrial attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQATrial.abandoned_arms", false]], "abandoned_arms() (ax.utils.testing.core_stubs.testtrial method)": [[18, "ax.utils.testing.core_stubs.TestTrial.abandoned_arms", false]], "abandoned_arms_metadata (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.abandoned_arms_metadata", false]], "abandoned_reason (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.abandoned_reason", false]], "abandonedarm (class in ax.core.batch_trial)": [[3, "ax.core.batch_trial.AbandonedArm", false]], "absolute_metrics (ax.plot.pareto_utils.paretofrontierresults attribute)": [[12, "ax.plot.pareto_utils.ParetoFrontierResults.absolute_metrics", false]], "acqf (ax.models.torch.botorch_modular.acquisition.acquisition attribute)": [[11, "ax.models.torch.botorch_modular.acquisition.Acquisition.acqf", false]], "acqf_kwargs (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.ACQF_KWARGS", false]], "acquisition (class in ax.models.torch.botorch_modular.acquisition)": [[11, "ax.models.torch.botorch_modular.acquisition.Acquisition", false]], "acquisition_class (ax.models.torch.botorch_modular.model.botorchmodel attribute)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.acquisition_class", false]], "acquisition_function_registry (in module ax.storage.botorch_modular_registry)": [[16, "ax.storage.botorch_modular_registry.ACQUISITION_FUNCTION_REGISTRY", false]], "acquisition_options (ax.models.torch.botorch_modular.model.botorchmodel attribute)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.acquisition_options", false]], "acquisition_registry (in module ax.storage.botorch_modular_registry)": [[16, "ax.storage.botorch_modular_registry.ACQUISITION_REGISTRY", false]], "add_arm() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.add_arm", false]], "add_arm() (ax.core.generator_run.generatorrun method)": [[3, "ax.core.generator_run.GeneratorRun.add_arm", false]], "add_arm() (ax.core.trial.trial method)": [[3, "ax.core.trial.Trial.add_arm", false]], "add_arm_and_prevent_naming_collision() (in module ax.core.experiment)": [[3, "ax.core.experiment.add_arm_and_prevent_naming_collision", false]], "add_arms_and_weights() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.add_arms_and_weights", false]], "add_fixed_features() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.add_fixed_features", false]], "add_generator_run() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.add_generator_run", false]], "add_generator_run() (ax.core.trial.trial method)": [[3, "ax.core.trial.Trial.add_generator_run", false]], "add_tracking_metric() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.add_tracking_metric", false]], "add_tracking_metric() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.add_tracking_metric", false]], "add_tracking_metrics() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.add_tracking_metrics", false]], "add_tracking_metrics() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.add_tracking_metrics", false]], "add_tracking_metrics() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.add_tracking_metrics", false]], "add_trial_type() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.add_trial_type", false]], "add_values() (ax.core.parameter.choiceparameter method)": [[3, "ax.core.parameter.ChoiceParameter.add_values", false]], "additional_objective (ax.storage.utils.metricintent attribute)": [[16, "ax.storage.utils.MetricIntent.ADDITIONAL_OBJECTIVE", false]], "aggregatedbenchmarkresult (class in ax.benchmark.benchmark_result)": [[2, "ax.benchmark.benchmark_result.AggregatedBenchmarkResult", false]], "aggregation() (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean method)": [[18, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.aggregation", false]], "aggregation() (ax.utils.sensitivity.derivative_measures.gpdgsmgpsampling method)": [[18, "ax.utils.sensitivity.derivative_measures.GpDGSMGpSampling.aggregation", false]], "agresti_coull_sem() (in module ax.utils.stats.statstools)": [[18, "ax.utils.stats.statstools.agresti_coull_sem", false]], "align_partial_results() (in module ax.early_stopping.utils)": [[4, "ax.early_stopping.utils.align_partial_results", false]], "all_constraints (ax.core.optimization_config.multiobjectiveoptimizationconfig property)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig.all_constraints", false]], "all_constraints (ax.core.optimization_config.optimizationconfig property)": [[3, "ax.core.optimization_config.OptimizationConfig.all_constraints", false]], "all_ordinal_features_are_integer_valued() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.all_ordinal_features_are_integer_valued", false]], "all_trials (ax.utils.testing.backend_simulator.backendsimulator property)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.all_trials", false]], "allow_batched_models (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.allow_batched_models", false]], "analysis (ax.analysis.analysis.analysise attribute)": [[0, "ax.analysis.analysis.AnalysisE.analysis", false]], "analysis (class in ax.analysis.analysis)": [[0, "ax.analysis.analysis.Analysis", false]], "analysis_card_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.analysis_card_from_sqa", false]], "analysis_card_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.analysis_card_to_sqa", false]], "analysis_cards (ax.storage.sqa_store.sqa_classes.sqaexperiment attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAExperiment.analysis_cards", false]], "analysiscard (class in ax.analysis.analysis)": [[0, "ax.analysis.analysis.AnalysisCard", false]], "analysiscardlevel (class in ax.analysis.analysis)": [[0, "ax.analysis.analysis.AnalysisCardLevel", false]], "analysise (class in ax.analysis.analysis)": [[0, "ax.analysis.analysis.AnalysisE", false]], "andearlystoppingstrategy (class in ax.early_stopping.strategies.logical)": [[4, "ax.early_stopping.strategies.logical.AndEarlyStoppingStrategy", false]], "arm (ax.core.generator_run.armweight attribute)": [[3, "ax.core.generator_run.ArmWeight.arm", false]], "arm (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.arm", false]], "arm (class in ax.core.arm)": [[3, "ax.core.arm.Arm", false]], "arm_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.arm_from_sqa", false]], "arm_name (ax.core.observation.observation attribute)": [[3, "ax.core.observation.Observation.arm_name", false]], "arm_name_to_sort_key() (in module ax.plot.helper)": [[12, "ax.plot.helper.arm_name_to_sort_key", false]], "arm_name_to_tuple() (in module ax.plot.helper)": [[12, "ax.plot.helper.arm_name_to_tuple", false]], "arm_names (ax.early_stopping.strategies.base.earlystoppingtrainingdata attribute)": [[4, "ax.early_stopping.strategies.base.EarlyStoppingTrainingData.arm_names", false]], "arm_names (ax.plot.pareto_utils.paretofrontierresults attribute)": [[12, "ax.plot.pareto_utils.ParetoFrontierResults.arm_names", false]], "arm_signatures (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.arm_signatures", false]], "arm_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.arm_to_dict", false]], "arm_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.arm_to_sqa", false]], "arm_weights (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.arm_weights", false]], "arm_weights (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.arm_weights", false]], "arms (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.arms", false]], "arms (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.arms", false]], "arms (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.arms", false]], "arms (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.arms", false]], "arms (ax.storage.sqa_store.sqa_classes.sqageneratorrun attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAGeneratorRun.arms", false]], "arms (ax.utils.testing.core_stubs.testtrial property)": [[18, "ax.utils.testing.core_stubs.TestTrial.arms", false]], "arms_by_name (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.arms_by_name", false]], "arms_by_name (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.arms_by_name", false]], "arms_by_name (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.arms_by_name", false]], "arms_by_name (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.arms_by_name", false]], "arms_by_name() (ax.utils.testing.core_stubs.testtrial method)": [[18, "ax.utils.testing.core_stubs.TestTrial.arms_by_name", false]], "arms_by_signature (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.arms_by_signature", false]], "arms_by_signature_for_deduplication (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.arms_by_signature_for_deduplication", false]], "arms_per_trial (ax.telemetry.ax_client.axclientcreatedrecord attribute)": [[17, "ax.telemetry.ax_client.AxClientCreatedRecord.arms_per_trial", false]], "arms_per_trial (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.arms_per_trial", false]], "arms_per_trial (ax.telemetry.scheduler.schedulercreatedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCreatedRecord.arms_per_trial", false]], "armweight (class in ax.core.generator_run)": [[3, "ax.core.generator_run.ArmWeight", false]], "array_to_observation_data() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.array_to_observation_data", false]], "array_with_string_indices_to_dict() (in module ax.utils.sensitivity.sobol_measures)": [[18, "ax.utils.sensitivity.sobol_measures.array_with_string_indices_to_dict", false]], "as_array() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.as_array", false]], "assertaxbaseequal() (ax.utils.common.testutils.testcase method)": [[18, "ax.utils.common.testutils.TestCase.assertAxBaseEqual", false]], "assertdictsalmostequal() (ax.utils.common.testutils.testcase method)": [[18, "ax.utils.common.testutils.TestCase.assertDictsAlmostEqual", false]], "assertequal() (ax.utils.common.testutils.testcase method)": [[18, "ax.utils.common.testutils.TestCase.assertEqual", false]], "assertraiseson() (ax.utils.common.testutils.testcase method)": [[18, "ax.utils.common.testutils.TestCase.assertRaisesOn", false]], "assess_model_fit() (in module ax.modelbridge.cross_validation)": [[10, "ax.modelbridge.cross_validation.assess_model_fit", false]], "assessmodelfitresult (class in ax.modelbridge.cross_validation)": [[10, "ax.modelbridge.cross_validation.AssessModelFitResult", false]], "assign_runner() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.assign_runner", false]], "attach_batch_trial_data() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.attach_batch_trial_data", false]], "attach_data() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.attach_data", false]], "attach_fetch_results() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.attach_fetch_results", false]], "attach_trial() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.attach_trial", false]], "attach_trial() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.attach_trial", false]], "attributes (ax.analysis.analysis.analysis property)": [[0, "ax.analysis.analysis.Analysis.attributes", false]], "attributes (ax.analysis.analysis.analysiscard attribute)": [[0, "ax.analysis.analysis.AnalysisCard.attributes", false]], "aug_branin (class in ax.utils.measurement.synthetic_functions)": [[18, "ax.utils.measurement.synthetic_functions.Aug_Branin", false]], "aug_hartmann6 (class in ax.utils.measurement.synthetic_functions)": [[18, "ax.utils.measurement.synthetic_functions.Aug_Hartmann6", false]], "augmentedbraninmetric (class in ax.metrics.branin)": [[9, "ax.metrics.branin.AugmentedBraninMetric", false]], "augmentedhartmann6metric (class in ax.metrics.hartmann6)": [[9, "ax.metrics.hartmann6.AugmentedHartmann6Metric", false]], "auxiliary_experiment_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.auxiliary_experiment_to_dict", false]], "auxiliaryexperiment (class in ax.core.auxiliary)": [[3, "ax.core.auxiliary.AuxiliaryExperiment", false]], "auxiliaryexperimentpurpose (class in ax.core.auxiliary)": [[3, "ax.core.auxiliary.AuxiliaryExperimentPurpose", false]], "available_flags (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.available_flags", false]], "available_flags (ax.core.parameter.fixedparameter property)": [[3, "ax.core.parameter.FixedParameter.available_flags", false]], "available_flags (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.available_flags", false]], "available_flags (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.available_flags", false]], "ax.analysis": [[0, "module-ax.analysis", false]], "ax.analysis.analysis": [[0, "module-ax.analysis.analysis", false]], "ax.analysis.healthcheck.can_generate_candidates": [[0, "module-ax.analysis.healthcheck.can_generate_candidates", false]], "ax.analysis.healthcheck.healthcheck_analysis": [[0, "module-ax.analysis.healthcheck.healthcheck_analysis", false]], "ax.analysis.healthcheck.should_generate_candidates": [[0, "module-ax.analysis.healthcheck.should_generate_candidates", false]], "ax.analysis.markdown.markdown_analysis": [[0, "module-ax.analysis.markdown.markdown_analysis", false]], "ax.analysis.plotly.arm_effects.insample_effects": [[0, "module-ax.analysis.plotly.arm_effects.insample_effects", false]], "ax.analysis.plotly.arm_effects.predicted_effects": [[0, "module-ax.analysis.plotly.arm_effects.predicted_effects", false]], "ax.analysis.plotly.arm_effects.utils": [[0, "module-ax.analysis.plotly.arm_effects.utils", false]], "ax.analysis.plotly.cross_validation": [[0, "module-ax.analysis.plotly.cross_validation", false]], "ax.analysis.plotly.parallel_coordinates": [[0, "module-ax.analysis.plotly.parallel_coordinates", false]], "ax.analysis.plotly.plotly_analysis": [[0, "module-ax.analysis.plotly.plotly_analysis", false]], "ax.analysis.plotly.scatter": [[0, "module-ax.analysis.plotly.scatter", false]], "ax.analysis.plotly.utils": [[0, "module-ax.analysis.plotly.utils", false]], "ax.analysis.summary": [[0, "module-ax.analysis.summary", false]], "ax.benchmark": [[2, "module-ax.benchmark", false]], "ax.benchmark.benchmark": [[2, "module-ax.benchmark.benchmark", false]], "ax.benchmark.benchmark_method": [[2, "module-ax.benchmark.benchmark_method", false]], "ax.benchmark.benchmark_metric": [[2, "module-ax.benchmark.benchmark_metric", false]], "ax.benchmark.benchmark_problem": [[2, "module-ax.benchmark.benchmark_problem", false]], "ax.benchmark.benchmark_result": [[2, "module-ax.benchmark.benchmark_result", false]], "ax.benchmark.benchmark_runner": [[2, "module-ax.benchmark.benchmark_runner", false]], "ax.benchmark.benchmark_test_function": [[2, "module-ax.benchmark.benchmark_test_function", false]], "ax.benchmark.benchmark_test_functions.botorch_test": [[2, "module-ax.benchmark.benchmark_test_functions.botorch_test", false]], "ax.benchmark.benchmark_test_functions.surrogate": [[2, "module-ax.benchmark.benchmark_test_functions.surrogate", false]], "ax.benchmark.methods.modular_botorch": [[2, "module-ax.benchmark.methods.modular_botorch", false]], "ax.benchmark.methods.sobol": [[2, "module-ax.benchmark.methods.sobol", false]], "ax.benchmark.problems.hd_embedding": [[2, "module-ax.benchmark.problems.hd_embedding", false]], "ax.benchmark.problems.hpo.torchvision": [[2, "module-ax.benchmark.problems.hpo.torchvision", false]], "ax.benchmark.problems.registry": [[2, "module-ax.benchmark.problems.registry", false]], "ax.benchmark.problems.synthetic.discretized.mixed_integer": [[2, "module-ax.benchmark.problems.synthetic.discretized.mixed_integer", false]], "ax.benchmark.problems.synthetic.hss.jenatton": [[2, "module-ax.benchmark.problems.synthetic.hss.jenatton", false]], "ax.core": [[3, "module-ax.core", false]], "ax.core.arm": [[3, "module-ax.core.arm", false]], "ax.core.auxiliary": [[3, "module-ax.core.auxiliary", false]], "ax.core.base_trial": [[3, "module-ax.core.base_trial", false]], "ax.core.batch_trial": [[3, "module-ax.core.batch_trial", false]], "ax.core.experiment": [[3, "module-ax.core.experiment", false]], "ax.core.formatting_utils": [[3, "module-ax.core.formatting_utils", false]], "ax.core.generation_strategy_interface": [[3, "module-ax.core.generation_strategy_interface", false]], "ax.core.generator_run": [[3, "module-ax.core.generator_run", false]], "ax.core.multi_type_experiment": [[3, "module-ax.core.multi_type_experiment", false]], "ax.core.observation": [[3, "module-ax.core.observation", false]], "ax.core.optimization_config": [[3, "module-ax.core.optimization_config", false]], "ax.core.parameter": [[3, "module-ax.core.parameter", false]], "ax.core.parameter_constraint": [[3, "module-ax.core.parameter_constraint", false]], "ax.core.parameter_distribution": [[3, "module-ax.core.parameter_distribution", false]], "ax.core.risk_measures": [[3, "module-ax.core.risk_measures", false]], "ax.core.runner": [[3, "module-ax.core.runner", false]], "ax.core.trial": [[3, "module-ax.core.trial", false]], "ax.core.types": [[3, "module-ax.core.types", false]], "ax.core.utils": [[3, "module-ax.core.utils", false]], "ax.early_stopping": [[4, "module-ax.early_stopping", false]], "ax.early_stopping.strategies.base": [[4, "module-ax.early_stopping.strategies.base", false]], "ax.early_stopping.strategies.logical": [[4, "module-ax.early_stopping.strategies.logical", false]], "ax.early_stopping.strategies.percentile": [[4, "module-ax.early_stopping.strategies.percentile", false]], "ax.early_stopping.strategies.threshold": [[4, "module-ax.early_stopping.strategies.threshold", false]], "ax.early_stopping.utils": [[4, "module-ax.early_stopping.utils", false]], "ax.exceptions": [[5, "module-ax.exceptions", false]], "ax.exceptions.constants": [[5, "module-ax.exceptions.constants", false]], "ax.exceptions.core": [[5, "module-ax.exceptions.core", false]], "ax.exceptions.data_provider": [[5, "module-ax.exceptions.data_provider", false]], "ax.exceptions.generation_strategy": [[5, "module-ax.exceptions.generation_strategy", false]], "ax.exceptions.model": [[5, "module-ax.exceptions.model", false]], "ax.exceptions.storage": [[5, "module-ax.exceptions.storage", false]], "ax.global_stopping": [[6, "module-ax.global_stopping", false]], "ax.global_stopping.strategies.base": [[6, "module-ax.global_stopping.strategies.base", false]], "ax.global_stopping.strategies.improvement": [[6, "module-ax.global_stopping.strategies.improvement", false]], "ax.health_check": [[7, "module-ax.health_check", false]], "ax.health_check.search_space": [[7, "module-ax.health_check.search_space", false]], "ax.metrics": [[9, "module-ax.metrics", false]], "ax.metrics.branin": [[9, "module-ax.metrics.branin", false]], "ax.metrics.branin_map": [[9, "module-ax.metrics.branin_map", false]], "ax.metrics.chemistry": [[9, "module-ax.metrics.chemistry", false]], "ax.metrics.curve": [[9, "module-ax.metrics.curve", false]], "ax.metrics.factorial": [[9, "module-ax.metrics.factorial", false]], "ax.metrics.hartmann6": [[9, "module-ax.metrics.hartmann6", false]], "ax.metrics.l2norm": [[9, "module-ax.metrics.l2norm", false]], "ax.metrics.noisy_function": [[9, "module-ax.metrics.noisy_function", false]], "ax.metrics.noisy_function_map": [[9, "module-ax.metrics.noisy_function_map", false]], "ax.metrics.sklearn": [[9, "module-ax.metrics.sklearn", false]], "ax.metrics.tensorboard": [[9, "module-ax.metrics.tensorboard", false]], "ax.metrics.torchx": [[9, "module-ax.metrics.torchx", false]], "ax.modelbridge": [[10, "module-ax.modelbridge", false]], "ax.modelbridge.base": [[10, "module-ax.modelbridge.base", false]], "ax.modelbridge.best_model_selector": [[10, "module-ax.modelbridge.best_model_selector", false]], "ax.modelbridge.cross_validation": [[10, "module-ax.modelbridge.cross_validation", false]], "ax.modelbridge.discrete": [[10, "module-ax.modelbridge.discrete", false]], "ax.modelbridge.dispatch_utils": [[10, "module-ax.modelbridge.dispatch_utils", false]], "ax.modelbridge.external_generation_node": [[10, "module-ax.modelbridge.external_generation_node", false]], "ax.modelbridge.factory": [[10, "module-ax.modelbridge.factory", false]], "ax.modelbridge.generation_node": [[10, "module-ax.modelbridge.generation_node", false]], "ax.modelbridge.generation_strategy": [[10, "module-ax.modelbridge.generation_strategy", false]], "ax.modelbridge.map_torch": [[10, "module-ax.modelbridge.map_torch", false]], "ax.modelbridge.model_spec": [[10, "module-ax.modelbridge.model_spec", false]], "ax.modelbridge.modelbridge_utils": [[10, "module-ax.modelbridge.modelbridge_utils", false]], "ax.modelbridge.pairwise": [[10, "module-ax.modelbridge.pairwise", false]], "ax.modelbridge.prediction_utils": [[10, "module-ax.modelbridge.prediction_utils", false]], "ax.modelbridge.registry": [[10, "module-ax.modelbridge.registry", false]], "ax.modelbridge.torch": [[10, "module-ax.modelbridge.torch", false]], "ax.modelbridge.transforms.base": [[10, "module-ax.modelbridge.transforms.base", false]], "ax.modelbridge.transforms.cast": [[10, "module-ax.modelbridge.transforms.cast", false]], "ax.modelbridge.transforms.choice_encode": [[10, "module-ax.modelbridge.transforms.choice_encode", false]], "ax.modelbridge.transforms.convert_metric_names": [[10, "module-ax.modelbridge.transforms.convert_metric_names", false]], "ax.modelbridge.transforms.deprecated_transform_mixin": [[10, "module-ax.modelbridge.transforms.deprecated_transform_mixin", false]], "ax.modelbridge.transforms.derelativize": [[10, "module-ax.modelbridge.transforms.derelativize", false]], "ax.modelbridge.transforms.fill_missing_parameters": [[10, "module-ax.modelbridge.transforms.fill_missing_parameters", false]], "ax.modelbridge.transforms.int_range_to_choice": [[10, "module-ax.modelbridge.transforms.int_range_to_choice", false]], "ax.modelbridge.transforms.int_to_float": [[10, "module-ax.modelbridge.transforms.int_to_float", false]], "ax.modelbridge.transforms.ivw": [[10, "module-ax.modelbridge.transforms.ivw", false]], "ax.modelbridge.transforms.log": [[10, "module-ax.modelbridge.transforms.log", false]], "ax.modelbridge.transforms.log_y": [[10, "module-ax.modelbridge.transforms.log_y", false]], "ax.modelbridge.transforms.logit": [[10, "module-ax.modelbridge.transforms.logit", false]], "ax.modelbridge.transforms.map_unit_x": [[10, "module-ax.modelbridge.transforms.map_unit_x", false]], "ax.modelbridge.transforms.merge_repeated_measurements": [[10, "module-ax.modelbridge.transforms.merge_repeated_measurements", false]], "ax.modelbridge.transforms.metrics_as_task": [[10, "module-ax.modelbridge.transforms.metrics_as_task", false]], "ax.modelbridge.transforms.one_hot": [[10, "module-ax.modelbridge.transforms.one_hot", false]], "ax.modelbridge.transforms.power_transform_y": [[10, "module-ax.modelbridge.transforms.power_transform_y", false]], "ax.modelbridge.transforms.relativize": [[10, "module-ax.modelbridge.transforms.relativize", false]], "ax.modelbridge.transforms.remove_fixed": [[10, "module-ax.modelbridge.transforms.remove_fixed", false]], "ax.modelbridge.transforms.rounding": [[10, "module-ax.modelbridge.transforms.rounding", false]], "ax.modelbridge.transforms.search_space_to_choice": [[10, "module-ax.modelbridge.transforms.search_space_to_choice", false]], "ax.modelbridge.transforms.standardize_y": [[10, "module-ax.modelbridge.transforms.standardize_y", false]], "ax.modelbridge.transforms.stratified_standardize_y": [[10, "module-ax.modelbridge.transforms.stratified_standardize_y", false]], "ax.modelbridge.transforms.task_encode": [[10, "module-ax.modelbridge.transforms.task_encode", false]], "ax.modelbridge.transforms.time_as_feature": [[10, "module-ax.modelbridge.transforms.time_as_feature", false]], "ax.modelbridge.transforms.transform_to_new_sq": [[10, "module-ax.modelbridge.transforms.transform_to_new_sq", false]], "ax.modelbridge.transforms.trial_as_task": [[10, "module-ax.modelbridge.transforms.trial_as_task", false]], "ax.modelbridge.transforms.unit_x": [[10, "module-ax.modelbridge.transforms.unit_x", false]], "ax.modelbridge.transforms.utils": [[10, "module-ax.modelbridge.transforms.utils", false]], "ax.modelbridge.transforms.winsorize": [[10, "module-ax.modelbridge.transforms.winsorize", false]], "ax.models": [[11, "module-ax.models", false]], "ax.models.base": [[11, "module-ax.models.base", false]], "ax.models.discrete.eb_thompson": [[11, "module-ax.models.discrete.eb_thompson", false]], "ax.models.discrete.full_factorial": [[11, "module-ax.models.discrete.full_factorial", false]], "ax.models.discrete.thompson": [[11, "module-ax.models.discrete.thompson", false]], "ax.models.discrete_base": [[11, "module-ax.models.discrete_base", false]], "ax.models.model_utils": [[11, "module-ax.models.model_utils", false]], "ax.models.random.base": [[11, "module-ax.models.random.base", false]], "ax.models.random.sobol": [[11, "module-ax.models.random.sobol", false]], "ax.models.random.uniform": [[11, "module-ax.models.random.uniform", false]], "ax.models.torch.botorch": [[11, "module-ax.models.torch.botorch", false]], "ax.models.torch.botorch_defaults": [[11, "module-ax.models.torch.botorch_defaults", false]], "ax.models.torch.botorch_modular.acquisition": [[11, "module-ax.models.torch.botorch_modular.acquisition", false]], "ax.models.torch.botorch_modular.input_constructors.covar_modules": [[11, "module-ax.models.torch.botorch_modular.input_constructors.covar_modules", false]], "ax.models.torch.botorch_modular.input_constructors.input_transforms": [[11, "module-ax.models.torch.botorch_modular.input_constructors.input_transforms", false]], "ax.models.torch.botorch_modular.input_constructors.outcome_transform": [[11, "module-ax.models.torch.botorch_modular.input_constructors.outcome_transform", false]], "ax.models.torch.botorch_modular.kernels": [[11, "module-ax.models.torch.botorch_modular.kernels", false]], "ax.models.torch.botorch_modular.model": [[11, "module-ax.models.torch.botorch_modular.model", false]], "ax.models.torch.botorch_modular.optimizer_argparse": [[11, "module-ax.models.torch.botorch_modular.optimizer_argparse", false]], "ax.models.torch.botorch_modular.sebo": [[11, "module-ax.models.torch.botorch_modular.sebo", false]], "ax.models.torch.botorch_modular.surrogate": [[11, "module-ax.models.torch.botorch_modular.surrogate", false]], "ax.models.torch.botorch_modular.utils": [[11, "module-ax.models.torch.botorch_modular.utils", false]], "ax.models.torch.botorch_moo": [[11, "module-ax.models.torch.botorch_moo", false]], "ax.models.torch.botorch_moo_defaults": [[11, "module-ax.models.torch.botorch_moo_defaults", false]], "ax.models.torch.cbo_lcea": [[11, "module-ax.models.torch.cbo_lcea", false]], "ax.models.torch.cbo_lcem": [[11, "module-ax.models.torch.cbo_lcem", false]], "ax.models.torch.cbo_sac": [[11, "module-ax.models.torch.cbo_sac", false]], "ax.models.torch.randomforest": [[11, "module-ax.models.torch.randomforest", false]], "ax.models.torch.utils": [[11, "module-ax.models.torch.utils", false]], "ax.models.torch_base": [[11, "module-ax.models.torch_base", false]], "ax.models.types": [[11, "module-ax.models.types", false]], "ax.models.winsorization_config": [[11, "module-ax.models.winsorization_config", false]], "ax.plot": [[12, "module-ax.plot", false]], "ax.plot.bandit_rollout": [[12, "module-ax.plot.bandit_rollout", false]], "ax.plot.base": [[12, "module-ax.plot.base", false]], "ax.plot.color": [[12, "module-ax.plot.color", false]], "ax.plot.contour": [[12, "module-ax.plot.contour", false]], "ax.plot.diagnostic": [[12, "module-ax.plot.diagnostic", false]], "ax.plot.feature_importances": [[12, "module-ax.plot.feature_importances", false]], "ax.plot.helper": [[12, "module-ax.plot.helper", false]], "ax.plot.marginal_effects": [[12, "module-ax.plot.marginal_effects", false]], "ax.plot.parallel_coordinates": [[12, "module-ax.plot.parallel_coordinates", false]], "ax.plot.pareto_frontier": [[12, "module-ax.plot.pareto_frontier", false]], "ax.plot.pareto_utils": [[12, "module-ax.plot.pareto_utils", false]], "ax.plot.render": [[12, "module-ax.plot.render", false]], "ax.plot.scatter": [[12, "module-ax.plot.scatter", false]], "ax.plot.slice": [[12, "module-ax.plot.slice", false]], "ax.plot.table_view": [[12, "module-ax.plot.table_view", false]], "ax.plot.trace": [[12, "module-ax.plot.trace", false]], "ax.preview": [[13, "module-ax.preview", false]], "ax.preview.api.configs": [[13, "module-ax.preview.api.configs", false]], "ax.runners": [[14, "module-ax.runners", false]], "ax.runners.simulated_backend": [[14, "module-ax.runners.simulated_backend", false]], "ax.runners.single_running_trial_mixin": [[14, "module-ax.runners.single_running_trial_mixin", false]], "ax.runners.synthetic": [[14, "module-ax.runners.synthetic", false]], "ax.runners.torchx": [[14, "module-ax.runners.torchx", false]], "ax.service": [[15, "module-ax.service", false]], "ax.service.ax_client": [[15, "module-ax.service.ax_client", false]], "ax.service.interactive_loop": [[15, "module-ax.service.interactive_loop", false]], "ax.service.managed_loop": [[15, "module-ax.service.managed_loop", false]], "ax.service.scheduler": [[15, "module-ax.service.scheduler", false]], "ax.service.utils.best_point": [[15, "module-ax.service.utils.best_point", false]], "ax.service.utils.best_point_mixin": [[15, "module-ax.service.utils.best_point_mixin", false]], "ax.service.utils.early_stopping": [[15, "module-ax.service.utils.early_stopping", false]], "ax.service.utils.instantiation": [[15, "module-ax.service.utils.instantiation", false]], "ax.service.utils.report_utils": [[15, "module-ax.service.utils.report_utils", false]], "ax.service.utils.scheduler_options": [[15, "module-ax.service.utils.scheduler_options", false]], "ax.service.utils.with_db_settings_base": [[15, "module-ax.service.utils.with_db_settings_base", false]], "ax.storage": [[16, "module-ax.storage", false]], "ax.storage.botorch_modular_registry": [[16, "module-ax.storage.botorch_modular_registry", false]], "ax.storage.json_store.decoder": [[16, "module-ax.storage.json_store.decoder", false]], "ax.storage.json_store.decoders": [[16, "module-ax.storage.json_store.decoders", false]], "ax.storage.json_store.encoder": [[16, "module-ax.storage.json_store.encoder", false]], "ax.storage.json_store.encoders": [[16, "module-ax.storage.json_store.encoders", false]], "ax.storage.json_store.load": [[16, "module-ax.storage.json_store.load", false]], "ax.storage.json_store.registry": [[16, "module-ax.storage.json_store.registry", false]], "ax.storage.json_store.save": [[16, "module-ax.storage.json_store.save", false]], "ax.storage.metric_registry": [[16, "module-ax.storage.metric_registry", false]], "ax.storage.registry_bundle": [[16, "module-ax.storage.registry_bundle", false]], "ax.storage.runner_registry": [[16, "module-ax.storage.runner_registry", false]], "ax.storage.sqa_store.db": [[16, "module-ax.storage.sqa_store.db", false]], "ax.storage.sqa_store.decoder": [[16, "module-ax.storage.sqa_store.decoder", false]], "ax.storage.sqa_store.delete": [[16, "module-ax.storage.sqa_store.delete", false]], "ax.storage.sqa_store.encoder": [[16, "module-ax.storage.sqa_store.encoder", false]], "ax.storage.sqa_store.json": [[16, "module-ax.storage.sqa_store.json", false]], "ax.storage.sqa_store.load": [[16, "module-ax.storage.sqa_store.load", false]], "ax.storage.sqa_store.reduced_state": [[16, "module-ax.storage.sqa_store.reduced_state", false]], "ax.storage.sqa_store.save": [[16, "module-ax.storage.sqa_store.save", false]], "ax.storage.sqa_store.sqa_classes": [[16, "module-ax.storage.sqa_store.sqa_classes", false]], "ax.storage.sqa_store.sqa_enum": [[16, "module-ax.storage.sqa_store.sqa_enum", false]], "ax.storage.sqa_store.structs": [[16, "module-ax.storage.sqa_store.structs", false]], "ax.storage.sqa_store.timestamp": [[16, "module-ax.storage.sqa_store.timestamp", false]], "ax.storage.sqa_store.utils": [[16, "module-ax.storage.sqa_store.utils", false]], "ax.storage.sqa_store.validation": [[16, "module-ax.storage.sqa_store.validation", false]], "ax.storage.transform_registry": [[16, "module-ax.storage.transform_registry", false]], "ax.storage.utils": [[16, "module-ax.storage.utils", false]], "ax.telemetry": [[17, "module-ax.telemetry", false]], "ax.telemetry.ax_client": [[17, "module-ax.telemetry.ax_client", false]], "ax.telemetry.common": [[17, "module-ax.telemetry.common", false]], "ax.telemetry.experiment": [[17, "module-ax.telemetry.experiment", false]], "ax.telemetry.generation_strategy": [[17, "module-ax.telemetry.generation_strategy", false]], "ax.telemetry.optimization": [[17, "module-ax.telemetry.optimization", false]], "ax.telemetry.scheduler": [[17, "module-ax.telemetry.scheduler", false]], "ax.utils": [[18, "module-ax.utils", false]], "ax.utils.common.base": [[18, "module-ax.utils.common.base", false]], "ax.utils.common.constants": [[18, "module-ax.utils.common.constants", false]], "ax.utils.common.decorator": [[18, "module-ax.utils.common.decorator", false]], "ax.utils.common.deprecation": [[18, "module-ax.utils.common.deprecation", false]], "ax.utils.common.docutils": [[18, "module-ax.utils.common.docutils", false]], "ax.utils.common.equality": [[18, "module-ax.utils.common.equality", false]], "ax.utils.common.executils": [[18, "module-ax.utils.common.executils", false]], "ax.utils.common.func_enum": [[18, "module-ax.utils.common.func_enum", false]], "ax.utils.common.kwargs": [[18, "module-ax.utils.common.kwargs", false]], "ax.utils.common.logger": [[18, "module-ax.utils.common.logger", false]], "ax.utils.common.mock": [[18, "module-ax.utils.common.mock", false]], "ax.utils.common.random": [[18, "module-ax.utils.common.random", false]], "ax.utils.common.result": [[18, "module-ax.utils.common.result", false]], "ax.utils.common.serialization": [[18, "module-ax.utils.common.serialization", false]], "ax.utils.common.testutils": [[18, "module-ax.utils.common.testutils", false]], "ax.utils.common.timeutils": [[18, "module-ax.utils.common.timeutils", false]], "ax.utils.common.typeutils": [[18, "module-ax.utils.common.typeutils", false]], "ax.utils.common.typeutils_nonnative": [[18, "module-ax.utils.common.typeutils_nonnative", false]], "ax.utils.common.typeutils_torch": [[18, "module-ax.utils.common.typeutils_torch", false]], "ax.utils.flake8_plugins.docstring_checker": [[18, "module-ax.utils.flake8_plugins.docstring_checker", false]], "ax.utils.measurement.synthetic_functions": [[18, "module-ax.utils.measurement.synthetic_functions", false]], "ax.utils.notebook.plotting": [[18, "module-ax.utils.notebook.plotting", false]], "ax.utils.report.render": [[18, "module-ax.utils.report.render", false]], "ax.utils.sensitivity.derivative_gp": [[18, "module-ax.utils.sensitivity.derivative_gp", false]], "ax.utils.sensitivity.derivative_measures": [[18, "module-ax.utils.sensitivity.derivative_measures", false]], "ax.utils.sensitivity.sobol_measures": [[18, "module-ax.utils.sensitivity.sobol_measures", false]], "ax.utils.stats.model_fit_stats": [[18, "module-ax.utils.stats.model_fit_stats", false]], "ax.utils.stats.statstools": [[18, "module-ax.utils.stats.statstools", false]], "ax.utils.testing.backend_simulator": [[18, "module-ax.utils.testing.backend_simulator", false]], "ax.utils.testing.benchmark_stubs": [[18, "module-ax.utils.testing.benchmark_stubs", false]], "ax.utils.testing.core_stubs": [[18, "module-ax.utils.testing.core_stubs", false]], "ax.utils.testing.metrics.backend_simulator_map": [[18, "module-ax.utils.testing.metrics.backend_simulator_map", false]], "ax.utils.testing.metrics.branin_backend_map": [[18, "module-ax.utils.testing.metrics.branin_backend_map", false]], "ax.utils.testing.mock": [[18, "module-ax.utils.testing.mock", false]], "ax.utils.testing.modeling_stubs": [[18, "module-ax.utils.testing.modeling_stubs", false]], "ax.utils.testing.preference_stubs": [[18, "module-ax.utils.testing.preference_stubs", false]], "ax.utils.testing.test_init_files": [[18, "module-ax.utils.testing.test_init_files", false]], "ax.utils.testing.torch_stubs": [[18, "module-ax.utils.testing.torch_stubs", false]], "ax.utils.testing.utils": [[18, "module-ax.utils.testing.utils", false]], "ax.utils.tutorials.cnn_utils": [[18, "module-ax.utils.tutorials.cnn_utils", false]], "ax_class_from_json_dict() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.ax_class_from_json_dict", false]], "ax_client_candidate_generator() (in module ax.service.interactive_loop)": [[15, "ax.service.interactive_loop.ax_client_candidate_generator", false]], "ax_client_data_attacher() (in module ax.service.interactive_loop)": [[15, "ax.service.interactive_loop.ax_client_data_attacher", false]], "ax_parameter_sens() (in module ax.utils.sensitivity.sobol_measures)": [[18, "ax.utils.sensitivity.sobol_measures.ax_parameter_sens", false]], "axclient (class in ax.service.ax_client)": [[15, "ax.service.ax_client.AxClient", false]], "axclientcompletedrecord (class in ax.telemetry.ax_client)": [[17, "ax.telemetry.ax_client.AxClientCompletedRecord", false]], "axclientcreatedrecord (class in ax.telemetry.ax_client)": [[17, "ax.telemetry.ax_client.AxClientCreatedRecord", false]], "axerror": [[5, "ax.exceptions.core.AxError", false]], "axgenerationexception": [[5, "ax.exceptions.generation_strategy.AxGenerationException", false]], "axis_range() (in module ax.plot.helper)": [[12, "ax.plot.helper.axis_range", false]], "axoutputnamefilter (class in ax.utils.common.logger)": [[18, "ax.utils.common.logger.AxOutputNameFilter", false]], "axparameterwarning": [[5, "ax.exceptions.core.AxParameterWarning", false]], "axplotconfig (class in ax.plot.base)": [[12, "ax.plot.base.AxPlotConfig", false]], "axplottypes (class in ax.plot.base)": [[12, "ax.plot.base.AxPlotTypes", false]], "axstoragewarning": [[5, "ax.exceptions.core.AxStorageWarning", false]], "axwarning": [[5, "ax.exceptions.core.AxWarning", false]], "backendsimulator (class in ax.utils.testing.backend_simulator)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator", false]], "backendsimulatoroptions (class in ax.utils.testing.backend_simulator)": [[18, "ax.utils.testing.backend_simulator.BackendSimulatorOptions", false]], "backendsimulatorstate (class in ax.utils.testing.backend_simulator)": [[18, "ax.utils.testing.backend_simulator.BackendSimulatorState", false]], "backendsimulatortimestampmapmetric (class in ax.utils.testing.metrics.backend_simulator_map)": [[18, "ax.utils.testing.metrics.backend_simulator_map.BackendSimulatorTimestampMapMetric", false]], "bad_fit_metrics_to_fisher_score (ax.modelbridge.cross_validation.assessmodelfitresult attribute)": [[10, "ax.modelbridge.cross_validation.AssessModelFitResult.bad_fit_metrics_to_fisher_score", false]], "bakeoff (ax.core.batch_trial.lifecyclestage attribute)": [[3, "ax.core.batch_trial.LifecycleStage.BAKEOFF", false]], "bandit_rollout (ax.plot.base.axplottypes attribute)": [[12, "ax.plot.base.AxPlotTypes.BANDIT_ROLLOUT", false]], "base (class in ax.utils.common.base)": [[18, "ax.utils.common.base.Base", false]], "baseearlystoppingstrategy (class in ax.early_stopping.strategies.base)": [[4, "ax.early_stopping.strategies.base.BaseEarlyStoppingStrategy", false]], "basegenargs (class in ax.modelbridge.base)": [[10, "ax.modelbridge.base.BaseGenArgs", false]], "baseglobalstoppingstrategy (class in ax.global_stopping.strategies.base)": [[6, "ax.global_stopping.strategies.base.BaseGlobalStoppingStrategy", false]], "basenullableenum (class in ax.storage.sqa_store.sqa_enum)": [[16, "ax.storage.sqa_store.sqa_enum.BaseNullableEnum", false]], "baserelativize (class in ax.modelbridge.transforms.relativize)": [[10, "ax.modelbridge.transforms.relativize.BaseRelativize", false]], "basetrial (class in ax.core.base_trial)": [[3, "ax.core.base_trial.BaseTrial", false]], "batch_init_conditions (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.BATCH_INIT_CONDITIONS", false]], "batch_size (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.batch_size", false], [15, "id3", false]], "batch_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.batch_to_dict", false]], "batch_trial (ax.service.utils.scheduler_options.trialtype attribute)": [[15, "ax.service.utils.scheduler_options.TrialType.BATCH_TRIAL", false]], "batch_trial_from_json() (in module ax.storage.json_store.decoders)": [[16, "ax.storage.json_store.decoders.batch_trial_from_json", false]], "batchtrial (class in ax.core.batch_trial)": [[3, "ax.core.batch_trial.BatchTrial", false]], "benchmark_multiple_problems_methods() (in module ax.benchmark.benchmark)": [[2, "ax.benchmark.benchmark.benchmark_multiple_problems_methods", false]], "benchmark_one_method_problem() (in module ax.benchmark.benchmark)": [[2, "ax.benchmark.benchmark.benchmark_one_method_problem", false]], "benchmark_replication() (in module ax.benchmark.benchmark)": [[2, "ax.benchmark.benchmark.benchmark_replication", false]], "benchmarkmethod (class in ax.benchmark.benchmark_method)": [[2, "ax.benchmark.benchmark_method.BenchmarkMethod", false]], "benchmarkmetric (class in ax.benchmark.benchmark_metric)": [[2, "ax.benchmark.benchmark_metric.BenchmarkMetric", false]], "benchmarkproblem (class in ax.benchmark.benchmark_problem)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem", false]], "benchmarkproblemregistryentry (class in ax.benchmark.problems.registry)": [[2, "ax.benchmark.problems.registry.BenchmarkProblemRegistryEntry", false]], "benchmarkresult (class in ax.benchmark.benchmark_result)": [[2, "ax.benchmark.benchmark_result.BenchmarkResult", false]], "benchmarkrunner (class in ax.benchmark.benchmark_runner)": [[2, "ax.benchmark.benchmark_runner.BenchmarkRunner", false]], "benchmarktestfunction (class in ax.benchmark.benchmark_test_function)": [[2, "ax.benchmark.benchmark_test_function.BenchmarkTestFunction", false]], "best_arm_predictions (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.best_arm_predictions", false]], "best_feasible_objective() (in module ax.core.utils)": [[3, "ax.core.utils.best_feasible_objective", false]], "best_in_sample_point() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate.best_in_sample_point", false]], "best_in_sample_point() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.best_in_sample_point", false]], "best_model() (ax.modelbridge.best_model_selector.bestmodelselector method)": [[10, "ax.modelbridge.best_model_selector.BestModelSelector.best_model", false]], "best_model() (ax.modelbridge.best_model_selector.singlediagnosticbestmodelselector method)": [[10, "ax.modelbridge.best_model_selector.SingleDiagnosticBestModelSelector.best_model", false]], "best_model_selector_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.best_model_selector_to_dict", false]], "best_observation_features (ax.modelbridge.base.genresults attribute)": [[10, "ax.modelbridge.base.GenResults.best_observation_features", false]], "best_observed_point() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.best_observed_point", false]], "best_out_of_sample_point() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate.best_out_of_sample_point", false]], "best_point() (ax.models.discrete_base.discretemodel method)": [[11, "ax.models.discrete_base.DiscreteModel.best_point", false]], "best_point() (ax.models.torch.botorch.botorchmodel method)": [[11, "ax.models.torch.botorch.BotorchModel.best_point", false]], "best_point() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.best_point", false]], "best_point() (ax.models.torch.cbo_lcea.lceabo method)": [[11, "ax.models.torch.cbo_lcea.LCEABO.best_point", false]], "best_point() (ax.models.torch_base.torchmodel method)": [[11, "ax.models.torch_base.TorchModel.best_point", false]], "best_point_quality (ax.telemetry.ax_client.axclientcompletedrecord attribute)": [[17, "ax.telemetry.ax_client.AxClientCompletedRecord.best_point_quality", false]], "best_point_quality (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.best_point_quality", false]], "best_point_quality (ax.telemetry.scheduler.schedulercompletedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCompletedRecord.best_point_quality", false]], "bestmodelselector (class in ax.modelbridge.best_model_selector)": [[10, "ax.modelbridge.best_model_selector.BestModelSelector", false]], "bestpointmixin (class in ax.service.utils.best_point_mixin)": [[15, "ax.service.utils.best_point_mixin.BestPointMixin", false]], "blob (ax.analysis.analysis.analysiscard attribute)": [[0, "ax.analysis.analysis.AnalysisCard.blob", false]], "blob_annotation (ax.analysis.analysis.analysiscard attribute)": [[0, "ax.analysis.analysis.AnalysisCard.blob_annotation", false]], "blob_annotation (ax.analysis.healthcheck.healthcheck_analysis.healthcheckanalysiscard attribute)": [[0, "ax.analysis.healthcheck.healthcheck_analysis.HealthcheckAnalysisCard.blob_annotation", false]], "blob_annotation (ax.analysis.markdown.markdown_analysis.markdownanalysiscard attribute)": [[0, "ax.analysis.markdown.markdown_analysis.MarkdownAnalysisCard.blob_annotation", false]], "blob_annotation (ax.analysis.plotly.plotly_analysis.plotlyanalysiscard attribute)": [[0, "ax.analysis.plotly.plotly_analysis.PlotlyAnalysisCard.blob_annotation", false]], "bo_mixed (ax.modelbridge.registry.models attribute)": [[10, "ax.modelbridge.registry.Models.BO_MIXED", false]], "bool (ax.core.parameter.parametertype attribute)": [[3, "ax.core.parameter.ParameterType.BOOL", false]], "bool (ax.preview.api.configs.parametertype attribute)": [[13, "ax.preview.api.configs.ParameterType.BOOL", false]], "bootstrap_indices (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean attribute)": [[18, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.bootstrap_indices", false]], "boston (ax.metrics.sklearn.sklearndataset attribute)": [[9, "ax.metrics.sklearn.SklearnDataset.BOSTON", false]], "botorch_acqf_class (ax.models.torch.botorch_modular.acquisition.acquisition property)": [[11, "ax.models.torch.botorch_modular.acquisition.Acquisition.botorch_acqf_class", false]], "botorch_acqf_class (ax.models.torch.botorch_modular.model.botorchmodel property)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.botorch_acqf_class", false]], "botorch_component_from_json() (in module ax.storage.json_store.decoders)": [[16, "ax.storage.json_store.decoders.botorch_component_from_json", false]], "botorch_component_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.botorch_component_to_dict", false]], "botorch_input_transform_to_init_args() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.botorch_input_transform_to_init_args", false]], "botorch_model_class (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.botorch_model_class", false]], "botorch_model_class (ax.models.torch.botorch_modular.utils.modelconfig attribute)": [[11, "ax.models.torch.botorch_modular.utils.ModelConfig.botorch_model_class", false]], "botorch_model_kwargs (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.botorch_model_kwargs", false]], "botorch_model_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.botorch_model_to_dict", false]], "botorch_modular (ax.modelbridge.registry.models attribute)": [[10, "ax.modelbridge.registry.Models.BOTORCH_MODULAR", false]], "botorch_modular_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.botorch_modular_to_dict", false]], "botorch_problem (ax.benchmark.benchmark_test_functions.botorch_test.botorchtestfunction attribute)": [[2, "ax.benchmark.benchmark_test_functions.botorch_test.BoTorchTestFunction.botorch_problem", false]], "botorchmodel (class in ax.models.torch.botorch)": [[11, "ax.models.torch.botorch.BotorchModel", false]], "botorchmodel (class in ax.models.torch.botorch_modular.model)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel", false]], "botorchtestfunction (class in ax.benchmark.benchmark_test_functions.botorch_test)": [[2, "ax.benchmark.benchmark_test_functions.botorch_test.BoTorchTestFunction", false]], "bound (ax.core.parameter_constraint.parameterconstraint property)": [[3, "ax.core.parameter_constraint.ParameterConstraint.bound", false]], "bounds (ax.preview.api.configs.rangeparameterconfig attribute)": [[13, "ax.preview.api.configs.RangeParameterConfig.bounds", false]], "branin (class in ax.utils.measurement.synthetic_functions)": [[18, "ax.utils.measurement.synthetic_functions.Branin", false]], "braninbackendmapmetric (class in ax.utils.testing.metrics.branin_backend_map)": [[18, "ax.utils.testing.metrics.branin_backend_map.BraninBackendMapMetric", false]], "braninfidelitymapmetric (class in ax.metrics.branin_map)": [[9, "ax.metrics.branin_map.BraninFidelityMapMetric", false]], "braninmetric (class in ax.metrics.branin)": [[9, "ax.metrics.branin.BraninMetric", false]], "branintimestampmapmetric (class in ax.metrics.branin_map)": [[9, "ax.metrics.branin_map.BraninTimestampMapMetric", false]], "bridge_class (ax.modelbridge.registry.modelsetup attribute)": [[10, "ax.modelbridge.registry.ModelSetup.bridge_class", false]], "build_file_handler() (in module ax.utils.common.logger)": [[18, "ax.utils.common.logger.build_file_handler", false]], "build_filter_trial() (in module ax.plot.helper)": [[12, "ax.plot.helper.build_filter_trial", false]], "build_objective_threshold() (ax.service.utils.instantiation.instantiationbase static method)": [[15, "ax.service.utils.instantiation.InstantiationBase.build_objective_threshold", false]], "build_objective_thresholds() (ax.service.utils.instantiation.instantiationbase class method)": [[15, "ax.service.utils.instantiation.InstantiationBase.build_objective_thresholds", false]], "build_stream_handler() (in module ax.utils.common.logger)": [[18, "ax.utils.common.logger.build_stream_handler", false]], "bulk_fetch_trial_data() (ax.metrics.tensorboard.tensorboardmetric method)": [[9, "ax.metrics.tensorboard.TensorboardMetric.bulk_fetch_trial_data", false]], "cache_ok (ax.storage.sqa_store.json.jsonencodedobject attribute)": [[16, "ax.storage.sqa_store.json.JSONEncodedObject.cache_ok", false]], "cache_ok (ax.storage.sqa_store.sqa_enum.basenullableenum attribute)": [[16, "ax.storage.sqa_store.sqa_enum.BaseNullableEnum.cache_ok", false]], "cache_ok (ax.storage.sqa_store.timestamp.inttimestamp attribute)": [[16, "ax.storage.sqa_store.timestamp.IntTimestamp.cache_ok", false]], "calculate_num_initialization_trials() (in module ax.modelbridge.dispatch_utils)": [[10, "ax.modelbridge.dispatch_utils.calculate_num_initialization_trials", false]], "callable_from_reference() (in module ax.utils.common.serialization)": [[18, "ax.utils.common.serialization.callable_from_reference", false]], "callable_to_reference() (in module ax.utils.common.serialization)": [[18, "ax.utils.common.serialization.callable_to_reference", false]], "cancer (ax.metrics.sklearn.sklearndataset attribute)": [[9, "ax.metrics.sklearn.SklearnDataset.CANCER", false]], "candidate (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.CANDIDATE", false]], "candidate_metadata (ax.models.torch_base.torchgenresults attribute)": [[11, "ax.models.torch_base.TorchGenResults.candidate_metadata", false]], "candidate_metadata_by_arm_signature (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.candidate_metadata_by_arm_signature", false]], "candidate_set (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.CANDIDATE_SET", false]], "candidate_size (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.CANDIDATE_SIZE", false]], "candidate_trials (ax.service.scheduler.scheduler property)": [[15, "ax.service.scheduler.Scheduler.candidate_trials", false]], "cangeneratecandidatesanalysis (class in ax.analysis.healthcheck.can_generate_candidates)": [[0, "ax.analysis.healthcheck.can_generate_candidates.CanGenerateCandidatesAnalysis", false]], "card_name (ax.analysis.plotly.arm_effects.predicted_effects.predictedeffectsplot attribute)": [[0, "ax.analysis.plotly.arm_effects.predicted_effects.PredictedEffectsPlot.CARD_NAME", false]], "cardinality() (ax.core.parameter.choiceparameter method)": [[3, "ax.core.parameter.ChoiceParameter.cardinality", false]], "cardinality() (ax.core.parameter.fixedparameter method)": [[3, "ax.core.parameter.FixedParameter.cardinality", false]], "cardinality() (ax.core.parameter.parameter method)": [[3, "ax.core.parameter.Parameter.cardinality", false]], "cardinality() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.cardinality", false]], "cast (class in ax.modelbridge.transforms.cast)": [[10, "ax.modelbridge.transforms.cast.Cast", false]], "cast() (ax.core.parameter.parameter method)": [[3, "ax.core.parameter.Parameter.cast", false]], "cast() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.cast", false]], "check() (ax.core.parameter_constraint.parameterconstraint method)": [[3, "ax.core.parameter_constraint.ParameterConstraint.check", false]], "check_a000() (ax.utils.flake8_plugins.docstring_checker.docstringcheckervisitor method)": [[18, "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor.check_A000", false]], "check_duplicate() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.check_duplicate", false]], "check_has_multi_objective_and_data() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.check_has_multi_objective_and_data", false]], "check_objective_thresholds_match_objectives() (in module ax.core.optimization_config)": [[3, "ax.core.optimization_config.check_objective_thresholds_match_objectives", false]], "check_outcome_dataset_match() (in module ax.models.torch.botorch_modular.utils)": [[11, "ax.models.torch.botorch_modular.utils.check_outcome_dataset_match", false]], "check_param_constraints() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.check_param_constraints", false]], "checked_cast() (in module ax.utils.common.typeutils)": [[18, "ax.utils.common.typeutils.checked_cast", false]], "checked_cast_dict() (in module ax.utils.common.typeutils)": [[18, "ax.utils.common.typeutils.checked_cast_dict", false]], "checked_cast_list() (in module ax.utils.common.typeutils)": [[18, "ax.utils.common.typeutils.checked_cast_list", false]], "checked_cast_optional() (in module ax.utils.common.typeutils)": [[18, "ax.utils.common.typeutils.checked_cast_optional", false]], "checked_cast_to_tuple() (in module ax.utils.common.typeutils)": [[18, "ax.utils.common.typeutils.checked_cast_to_tuple", false]], "chemistrydata (class in ax.metrics.chemistry)": [[9, "ax.metrics.chemistry.ChemistryData", false]], "chemistrymetric (class in ax.metrics.chemistry)": [[9, "ax.metrics.chemistry.ChemistryMetric", false]], "chemistryproblemtype (class in ax.metrics.chemistry)": [[9, "ax.metrics.chemistry.ChemistryProblemType", false]], "choice (ax.storage.utils.domaintype attribute)": [[16, "ax.storage.utils.DomainType.CHOICE", false]], "choice_parameter_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.choice_parameter_to_dict", false]], "choiceencode (class in ax.modelbridge.transforms.choice_encode)": [[10, "ax.modelbridge.transforms.choice_encode.ChoiceEncode", false]], "choiceparameter (class in ax.core.parameter)": [[3, "ax.core.parameter.ChoiceParameter", false]], "choiceparameterconfig (class in ax.preview.api.configs)": [[13, "ax.preview.api.configs.ChoiceParameterConfig", false]], "choicetonumericchoice (class in ax.modelbridge.transforms.choice_encode)": [[10, "ax.modelbridge.transforms.choice_encode.ChoiceToNumericChoice", false]], "choose_botorch_acqf_class() (in module ax.models.torch.botorch_modular.utils)": [[11, "ax.models.torch.botorch_modular.utils.choose_botorch_acqf_class", false]], "choose_generation_strategy() (in module ax.modelbridge.dispatch_utils)": [[10, "ax.modelbridge.dispatch_utils.choose_generation_strategy", false]], "choose_model_class() (in module ax.models.torch.botorch_modular.utils)": [[11, "ax.models.torch.botorch_modular.utils.choose_model_class", false]], "clamp_observation_features() (in module ax.modelbridge.base)": [[10, "ax.modelbridge.base.clamp_observation_features", false]], "clamp_to_target() (in module ax.models.torch.botorch_modular.sebo)": [[11, "ax.models.torch.botorch_modular.sebo.clamp_to_target", false]], "class_decoder_registry (ax.storage.registry_bundle.registrybundlebase property)": [[16, "ax.storage.registry_bundle.RegistryBundleBase.class_decoder_registry", false]], "class_encoder_registry (ax.storage.registry_bundle.registrybundlebase property)": [[16, "ax.storage.registry_bundle.RegistryBundleBase.class_encoder_registry", false]], "class_from_json() (in module ax.storage.json_store.decoders)": [[16, "ax.storage.json_store.decoders.class_from_json", false]], "class_to_registry (in module ax.storage.botorch_modular_registry)": [[16, "ax.storage.botorch_modular_registry.CLASS_TO_REGISTRY", false]], "classdecorator (class in ax.utils.common.decorator)": [[18, "ax.utils.common.decorator.ClassDecorator", false]], "clone() (ax.core.arm.arm method)": [[3, "ax.core.arm.Arm.clone", false]], "clone() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.clone", false]], "clone() (ax.core.generator_run.generatorrun method)": [[3, "ax.core.generator_run.GeneratorRun.clone", false]], "clone() (ax.core.observation.observationfeatures method)": [[3, "ax.core.observation.ObservationFeatures.clone", false]], "clone() (ax.core.optimization_config.optimizationconfig method)": [[3, "ax.core.optimization_config.OptimizationConfig.clone", false]], "clone() (ax.core.parameter.choiceparameter method)": [[3, "ax.core.parameter.ChoiceParameter.clone", false]], "clone() (ax.core.parameter.fixedparameter method)": [[3, "ax.core.parameter.FixedParameter.clone", false]], "clone() (ax.core.parameter.parameter method)": [[3, "ax.core.parameter.Parameter.clone", false]], "clone() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.clone", false]], "clone() (ax.core.parameter_constraint.orderconstraint method)": [[3, "ax.core.parameter_constraint.OrderConstraint.clone", false]], "clone() (ax.core.parameter_constraint.parameterconstraint method)": [[3, "ax.core.parameter_constraint.ParameterConstraint.clone", false]], "clone() (ax.core.parameter_constraint.sumconstraint method)": [[3, "ax.core.parameter_constraint.SumConstraint.clone", false]], "clone() (ax.core.parameter_distribution.parameterdistribution method)": [[3, "ax.core.parameter_distribution.ParameterDistribution.clone", false]], "clone() (ax.core.risk_measures.riskmeasure method)": [[3, "ax.core.risk_measures.RiskMeasure.clone", false]], "clone() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.clone", false]], "clone() (ax.metrics.chemistry.chemistrymetric method)": [[9, "ax.metrics.chemistry.ChemistryMetric.clone", false]], "clone() (ax.metrics.noisy_function.genericnoisyfunctionmetric method)": [[9, "ax.metrics.noisy_function.GenericNoisyFunctionMetric.clone", false]], "clone() (ax.metrics.noisy_function.noisyfunctionmetric method)": [[9, "ax.metrics.noisy_function.NoisyFunctionMetric.clone", false]], "clone() (ax.metrics.noisy_function_map.noisyfunctionmapmetric method)": [[9, "ax.metrics.noisy_function_map.NoisyFunctionMapMetric.clone", false]], "clone() (ax.metrics.sklearn.sklearnmetric method)": [[9, "ax.metrics.sklearn.SklearnMetric.clone", false]], "clone_reset() (ax.core.generation_strategy_interface.generationstrategyinterface method)": [[3, "ax.core.generation_strategy_interface.GenerationStrategyInterface.clone_reset", false]], "clone_reset() (ax.modelbridge.generation_strategy.generationstrategy method)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.clone_reset", false]], "clone_reset() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate.clone_reset", false]], "clone_reset() (ax.utils.testing.core_stubs.specialgenerationstrategy method)": [[18, "ax.utils.testing.core_stubs.SpecialGenerationStrategy.clone_reset", false]], "clone_to() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.clone_to", false]], "clone_to() (ax.core.trial.trial method)": [[3, "ax.core.trial.Trial.clone_to", false]], "clone_with() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.clone_with", false]], "clone_with_args() (ax.core.optimization_config.multiobjectiveoptimizationconfig method)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig.clone_with_args", false]], "clone_with_args() (ax.core.optimization_config.optimizationconfig method)": [[3, "ax.core.optimization_config.OptimizationConfig.clone_with_args", false]], "clone_with_transformed_parameters() (ax.core.parameter_constraint.orderconstraint method)": [[3, "ax.core.parameter_constraint.OrderConstraint.clone_with_transformed_parameters", false]], "clone_with_transformed_parameters() (ax.core.parameter_constraint.parameterconstraint method)": [[3, "ax.core.parameter_constraint.ParameterConstraint.clone_with_transformed_parameters", false]], "clone_with_transformed_parameters() (ax.core.parameter_constraint.sumconstraint method)": [[3, "ax.core.parameter_constraint.SumConstraint.clone_with_transformed_parameters", false]], "closestlookupdict (class in ax.modelbridge.transforms.utils)": [[10, "ax.modelbridge.transforms.utils.ClosestLookupDict", false]], "cnn (class in ax.benchmark.problems.hpo.torchvision)": [[2, "ax.benchmark.problems.hpo.torchvision.CNN", false]], "cnn (class in ax.utils.tutorials.cnn_utils)": [[18, "ax.utils.tutorials.cnn_utils.CNN", false]], "coefficient_of_determination() (in module ax.utils.stats.model_fit_stats)": [[18, "ax.utils.stats.model_fit_stats.coefficient_of_determination", false]], "col (ax.utils.flake8_plugins.docstring_checker.error attribute)": [[18, "ax.utils.flake8_plugins.docstring_checker.Error.col", false]], "colors (class in ax.plot.color)": [[12, "ax.plot.color.COLORS", false]], "compare_to_baseline() (in module ax.service.utils.report_utils)": [[15, "ax.service.utils.report_utils.compare_to_baseline", false]], "compare_to_baseline_impl() (in module ax.service.utils.report_utils)": [[15, "ax.service.utils.report_utils.compare_to_baseline_impl", false]], "comparisonop (class in ax.core.types)": [[3, "ax.core.types.ComparisonOp", false]], "complete() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.complete", false]], "complete_trial() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.complete_trial", false]], "completed (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.COMPLETED", false]], "completed (ax.utils.testing.backend_simulator.backendsimulatorstate attribute)": [[18, "ax.utils.testing.backend_simulator.BackendSimulatorState.completed", false]], "completed (ax.utils.testing.backend_simulator.simstatus attribute)": [[18, "ax.utils.testing.backend_simulator.SimStatus.completed", false], [18, "id0", false]], "completed_successfully (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.completed_successfully", false]], "completed_trials (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.completed_trials", false]], "completion_criterion() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.completion_criterion", false]], "compose_annotation() (in module ax.plot.helper)": [[12, "ax.plot.helper.compose_annotation", false]], "compute() (ax.analysis.analysis.analysis method)": [[0, "ax.analysis.analysis.Analysis.compute", false]], "compute() (ax.analysis.healthcheck.can_generate_candidates.cangeneratecandidatesanalysis method)": [[0, "ax.analysis.healthcheck.can_generate_candidates.CanGenerateCandidatesAnalysis.compute", false]], "compute() (ax.analysis.healthcheck.healthcheck_analysis.healthcheckanalysis method)": [[0, "ax.analysis.healthcheck.healthcheck_analysis.HealthcheckAnalysis.compute", false]], "compute() (ax.analysis.healthcheck.should_generate_candidates.shouldgeneratecandidates method)": [[0, "ax.analysis.healthcheck.should_generate_candidates.ShouldGenerateCandidates.compute", false]], "compute() (ax.analysis.markdown.markdown_analysis.markdownanalysis method)": [[0, "ax.analysis.markdown.markdown_analysis.MarkdownAnalysis.compute", false]], "compute() (ax.analysis.plotly.arm_effects.insample_effects.insampleeffectsplot method)": [[0, "ax.analysis.plotly.arm_effects.insample_effects.InSampleEffectsPlot.compute", false]], "compute() (ax.analysis.plotly.arm_effects.predicted_effects.predictedeffectsplot method)": [[0, "ax.analysis.plotly.arm_effects.predicted_effects.PredictedEffectsPlot.compute", false]], "compute() (ax.analysis.plotly.cross_validation.crossvalidationplot method)": [[0, "ax.analysis.plotly.cross_validation.CrossValidationPlot.compute", false]], "compute() (ax.analysis.plotly.parallel_coordinates.parallelcoordinatesplot method)": [[0, "ax.analysis.plotly.parallel_coordinates.ParallelCoordinatesPlot.compute", false]], "compute() (ax.analysis.plotly.plotly_analysis.plotlyanalysis method)": [[0, "ax.analysis.plotly.plotly_analysis.PlotlyAnalysis.compute", false]], "compute() (ax.analysis.plotly.scatter.scatterplot method)": [[0, "ax.analysis.plotly.scatter.ScatterPlot.compute", false]], "compute() (ax.analysis.summary.summary method)": [[0, "ax.analysis.summary.Summary.compute", false]], "compute_analyses() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.compute_analyses", false]], "compute_derivatives_from_model_list() (in module ax.utils.sensitivity.derivative_measures)": [[18, "ax.utils.sensitivity.derivative_measures.compute_derivatives_from_model_list", false]], "compute_diagnostics() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate.compute_diagnostics", false]], "compute_diagnostics() (in module ax.modelbridge.cross_validation)": [[10, "ax.modelbridge.cross_validation.compute_diagnostics", false]], "compute_maximum_map_values() (in module ax.service.utils.report_utils)": [[15, "ax.service.utils.report_utils.compute_maximum_map_values", false]], "compute_model_fit_metrics() (in module ax.utils.stats.model_fit_stats)": [[18, "ax.utils.stats.model_fit_stats.compute_model_fit_metrics", false]], "compute_model_fit_metrics_from_modelbridge() (in module ax.modelbridge.cross_validation)": [[10, "ax.modelbridge.cross_validation.compute_model_fit_metrics_from_modelbridge", false]], "compute_posterior_pareto_frontier() (in module ax.plot.pareto_utils)": [[12, "ax.plot.pareto_utils.compute_posterior_pareto_frontier", false]], "compute_result() (ax.analysis.analysis.analysis method)": [[0, "ax.analysis.analysis.Analysis.compute_result", false]], "compute_running_feasible_optimum_df() (in module ax.plot.trace)": [[12, "ax.plot.trace.compute_running_feasible_optimum_df", false]], "compute_score_trace() (in module ax.benchmark.benchmark)": [[2, "ax.benchmark.benchmark.compute_score_trace", false]], "compute_sobol_indices_from_model_list() (in module ax.utils.sensitivity.sobol_measures)": [[18, "ax.utils.sensitivity.sobol_measures.compute_sobol_indices_from_model_list", false]], "compute_standardization_parameters() (in module ax.modelbridge.transforms.standardize_y)": [[10, "ax.modelbridge.transforms.standardize_y.compute_standardization_parameters", false]], "config (ax.modelbridge.transforms.base.transform attribute)": [[10, "ax.modelbridge.transforms.base.Transform.config", false]], "config (ax.storage.sqa_store.decoder.decoder attribute)": [[16, "ax.storage.sqa_store.decoder.Decoder.config", false]], "config (ax.storage.sqa_store.encoder.encoder attribute)": [[16, "ax.storage.sqa_store.encoder.Encoder.config", false]], "consistency_exactly_one() (in module ax.storage.sqa_store.validation)": [[16, "ax.storage.sqa_store.validation.consistency_exactly_one", false]], "consolidate_kwargs() (in module ax.utils.common.kwargs)": [[18, "ax.utils.common.kwargs.consolidate_kwargs", false]], "constraint_dict (ax.core.parameter_constraint.orderconstraint property)": [[3, "ax.core.parameter_constraint.OrderConstraint.constraint_dict", false]], "constraint_dict (ax.core.parameter_constraint.parameterconstraint property)": [[3, "ax.core.parameter_constraint.ParameterConstraint.constraint_dict", false]], "constraint_dict (ax.core.parameter_constraint.sumconstraint property)": [[3, "ax.core.parameter_constraint.SumConstraint.constraint_dict", false]], "constraint_from_str() (ax.service.utils.instantiation.instantiationbase static method)": [[15, "ax.service.utils.instantiation.InstantiationBase.constraint_from_str", false]], "constraint_satisfaction() (in module ax.global_stopping.strategies.improvement)": [[6, "ax.global_stopping.strategies.improvement.constraint_satisfaction", false]], "construct_acquisition_and_optimizer_options() (in module ax.models.torch.botorch_modular.utils)": [[11, "ax.models.torch.botorch_modular.utils.construct_acquisition_and_optimizer_options", false]], "construct_new_search_space() (in module ax.modelbridge.transforms.utils)": [[10, "ax.modelbridge.transforms.utils.construct_new_search_space", false]], "contains_constrained_integer() (in module ax.modelbridge.transforms.rounding)": [[10, "ax.modelbridge.transforms.rounding.contains_constrained_integer", false]], "context_sacbo (ax.modelbridge.registry.models attribute)": [[10, "ax.modelbridge.registry.Models.CONTEXT_SACBO", false]], "context_stratum (ax.plot.base.plotinsamplearm attribute)": [[12, "ax.plot.base.PlotInSampleArm.context_stratum", false]], "context_stratum (ax.plot.base.plotoutofsamplearm attribute)": [[12, "ax.plot.base.PlotOutOfSampleArm.context_stratum", false]], "contour (ax.plot.base.axplottypes attribute)": [[12, "ax.plot.base.AxPlotTypes.CONTOUR", false]], "contour_config_to_trace() (in module ax.plot.helper)": [[12, "ax.plot.helper.contour_config_to_trace", false]], "control_as_constant (ax.modelbridge.transforms.relativize.baserelativize property)": [[10, "ax.modelbridge.transforms.relativize.BaseRelativize.control_as_constant", false]], "control_as_constant (ax.modelbridge.transforms.relativize.relativize property)": [[10, "ax.modelbridge.transforms.relativize.Relativize.control_as_constant", false]], "control_as_constant (ax.modelbridge.transforms.relativize.relativizewithconstantcontrol property)": [[10, "ax.modelbridge.transforms.relativize.RelativizeWithConstantControl.control_as_constant", false]], "control_as_constant (ax.modelbridge.transforms.transform_to_new_sq.transformtonewsq property)": [[10, "ax.modelbridge.transforms.transform_to_new_sq.TransformToNewSQ.control_as_constant", false]], "convert_mt_observations() (in module ax.modelbridge.transforms.convert_metric_names)": [[10, "ax.modelbridge.transforms.convert_metric_names.convert_mt_observations", false]], "convert_to_block_design() (in module ax.models.torch.botorch_modular.utils)": [[11, "ax.models.torch.botorch_modular.utils.convert_to_block_design", false]], "convert_to_timestamps() (ax.utils.testing.metrics.backend_simulator_map.backendsimulatortimestampmapmetric method)": [[18, "ax.utils.testing.metrics.backend_simulator_map.BackendSimulatorTimestampMapMetric.convert_to_timestamps", false]], "convert_to_timestamps() (ax.utils.testing.metrics.branin_backend_map.braninbackendmapmetric method)": [[18, "ax.utils.testing.metrics.branin_backend_map.BraninBackendMapMetric.convert_to_timestamps", false]], "convertmetricnames (class in ax.modelbridge.transforms.convert_metric_names)": [[10, "ax.modelbridge.transforms.convert_metric_names.ConvertMetricNames", false]], "copy() (ax.modelbridge.model_spec.modelspec method)": [[10, "ax.modelbridge.model_spec.ModelSpec.copy", false]], "copy_db_ids() (in module ax.storage.sqa_store.utils)": [[16, "ax.storage.sqa_store.utils.copy_db_ids", false]], "copy_doc() (in module ax.utils.common.docutils)": [[18, "ax.utils.common.docutils.copy_doc", false]], "coral (ax.plot.color.colors attribute)": [[12, "ax.plot.color.COLORS.CORAL", false]], "cost_aware_utility (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.COST_AWARE_UTILITY", false]], "cost_intercept (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.COST_INTERCEPT", false]], "covar_module_class (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.covar_module_class", false]], "covar_module_class (ax.models.torch.botorch_modular.utils.modelconfig attribute)": [[11, "ax.models.torch.botorch_modular.utils.ModelConfig.covar_module_class", false]], "covar_module_kwargs (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.covar_module_kwargs", false]], "covar_module_options (ax.models.torch.botorch_modular.utils.modelconfig attribute)": [[11, "ax.models.torch.botorch_modular.utils.ModelConfig.covar_module_options", false]], "covariance (ax.core.observation.observationdata attribute)": [[3, "ax.core.observation.ObservationData.covariance", false]], "covariance_matrix (ax.core.observation.observationdata property)": [[3, "ax.core.observation.ObservationData.covariance_matrix", false]], "create_all_tables() (in module ax.storage.sqa_store.db)": [[16, "ax.storage.sqa_store.db.create_all_tables", false]], "create_experiment() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.create_experiment", false]], "create_mysql_engine_from_creator() (in module ax.storage.sqa_store.db)": [[16, "ax.storage.sqa_store.db.create_mysql_engine_from_creator", false]], "create_mysql_engine_from_url() (in module ax.storage.sqa_store.db)": [[16, "ax.storage.sqa_store.db.create_mysql_engine_from_url", false]], "create_problem_from_botorch() (in module ax.benchmark.benchmark_problem)": [[2, "ax.benchmark.benchmark_problem.create_problem_from_botorch", false]], "create_test_engine() (in module ax.storage.sqa_store.db)": [[16, "ax.storage.sqa_store.db.create_test_engine", false]], "creator (ax.storage.sqa_store.structs.dbsettings attribute)": [[16, "ax.storage.sqa_store.structs.DBSettings.creator", false]], "critical (ax.analysis.analysis.analysiscardlevel attribute)": [[0, "ax.analysis.analysis.AnalysisCardLevel.CRITICAL", false]], "cross_validate() (ax.modelbridge.base.modelbridge method)": [[10, "ax.modelbridge.base.ModelBridge.cross_validate", false]], "cross_validate() (ax.modelbridge.model_spec.modelspec method)": [[10, "ax.modelbridge.model_spec.ModelSpec.cross_validate", false]], "cross_validate() (ax.models.discrete_base.discretemodel method)": [[11, "ax.models.discrete_base.DiscreteModel.cross_validate", false]], "cross_validate() (ax.models.torch.botorch.botorchmodel method)": [[11, "ax.models.torch.botorch.BotorchModel.cross_validate", false]], "cross_validate() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.cross_validate", false]], "cross_validate() (ax.models.torch.randomforest.randomforest method)": [[11, "ax.models.torch.randomforest.RandomForest.cross_validate", false]], "cross_validate() (ax.models.torch_base.torchmodel method)": [[11, "ax.models.torch_base.TorchModel.cross_validate", false]], "cross_validate() (in module ax.modelbridge.cross_validation)": [[10, "ax.modelbridge.cross_validation.cross_validate", false]], "cross_validate_by_trial() (in module ax.modelbridge.cross_validation)": [[10, "ax.modelbridge.cross_validation.cross_validate_by_trial", false]], "crossvalidationplot (class in ax.analysis.plotly.cross_validation)": [[0, "ax.analysis.plotly.cross_validation.CrossValidationPlot", false]], "current_generator_run_limit() (ax.modelbridge.generation_strategy.generationstrategy method)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.current_generator_run_limit", false]], "current_node (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.current_node", false]], "current_node_name (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.current_node_name", false]], "current_step (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.current_step", false]], "current_step_index (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.current_step_index", false]], "current_timestamp_in_millis() (in module ax.utils.common.timeutils)": [[18, "ax.utils.common.timeutils.current_timestamp_in_millis", false]], "current_value (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.CURRENT_VALUE", false]], "customtestmetric (class in ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.CustomTestMetric", false]], "customtestrunner (class in ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.CustomTestRunner", false]], "cutoffs (ax.modelbridge.transforms.winsorize.winsorize attribute)": [[10, "ax.modelbridge.transforms.winsorize.Winsorize.cutoffs", false]], "cv_results (ax.modelbridge.model_spec.modelspec property)": [[10, "ax.modelbridge.model_spec.ModelSpec.cv_results", false]], "cvnotsupportederror": [[5, "ax.exceptions.model.CVNotSupportedError", false]], "cvresult (class in ax.modelbridge.cross_validation)": [[10, "ax.modelbridge.cross_validation.CVResult", false]], "data (ax.core.formatting_utils.datatype attribute)": [[3, "ax.core.formatting_utils.DataType.DATA", false]], "data (ax.core.observation.observation attribute)": [[3, "ax.core.observation.Observation.data", false]], "data (ax.storage.sqa_store.sqa_classes.sqaexperiment attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAExperiment.data", false]], "data_and_evaluations_from_raw_data() (in module ax.core.formatting_utils)": [[3, "ax.core.formatting_utils.data_and_evaluations_from_raw_data", false]], "data_by_trial (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.data_by_trial", false]], "data_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.data_from_json", false]], "data_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.data_from_sqa", false]], "data_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.data_to_dict", false]], "data_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.data_to_sqa", false]], "databaseconfig (class in ax.preview.api.configs)": [[13, "ax.preview.api.configs.DatabaseConfig", false]], "dataframe_equals() (in module ax.utils.common.equality)": [[18, "ax.utils.common.equality.dataframe_equals", false]], "dataprovidererror": [[5, "ax.exceptions.data_provider.DataProviderError", false]], "datarequirederror": [[5, "ax.exceptions.core.DataRequiredError", false]], "datasets (ax.benchmark.benchmark_test_functions.surrogate.surrogatetestfunction property)": [[2, "ax.benchmark.benchmark_test_functions.surrogate.SurrogateTestFunction.datasets", false]], "datatype (class in ax.core.formatting_utils)": [[3, "ax.core.formatting_utils.DataType", false]], "datetime_equals() (in module ax.utils.common.equality)": [[18, "ax.utils.common.equality.datetime_equals", false]], "db_id (ax.utils.common.base.base property)": [[18, "ax.utils.common.base.Base.db_id", false]], "db_settings (ax.service.scheduler.scheduler attribute)": [[15, "ax.service.scheduler.Scheduler.db_settings", false]], "db_settings (ax.service.utils.with_db_settings_base.withdbsettingsbase property)": [[15, "ax.service.utils.with_db_settings_base.WithDBSettingsBase.db_settings", false]], "db_settings_set (ax.service.utils.with_db_settings_base.withdbsettingsbase property)": [[15, "ax.service.utils.with_db_settings_base.WithDBSettingsBase.db_settings_set", false]], "dbsettings (class in ax.storage.sqa_store.structs)": [[16, "ax.storage.sqa_store.structs.DBSettings", false]], "debug (ax.analysis.analysis.analysiscardlevel attribute)": [[0, "ax.analysis.analysis.AnalysisCardLevel.DEBUG", false]], "debug_log_run_metadata (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.debug_log_run_metadata", false], [15, "id4", false]], "decoder (ax.storage.registry_bundle.registrybundle property)": [[16, "ax.storage.registry_bundle.RegistryBundle.decoder", false]], "decoder (ax.storage.registry_bundle.registrybundlebase property)": [[16, "ax.storage.registry_bundle.RegistryBundleBase.decoder", false]], "decoder (ax.storage.sqa_store.structs.dbsettings attribute)": [[16, "ax.storage.sqa_store.structs.DBSettings.decoder", false]], "decoder (class in ax.storage.sqa_store.decoder)": [[16, "ax.storage.sqa_store.decoder.Decoder", false]], "decoder_registry (ax.storage.registry_bundle.registrybundlebase property)": [[16, "ax.storage.registry_bundle.RegistryBundleBase.decoder_registry", false]], "decorate_callable() (ax.utils.common.decorator.classdecorator method)": [[18, "ax.utils.common.decorator.ClassDecorator.decorate_callable", false]], "decorate_callable() (ax.utils.common.logger.disable_logger method)": [[18, "ax.utils.common.logger.disable_logger.decorate_callable", false]], "decorate_callable() (ax.utils.common.logger.disable_loggers method)": [[18, "ax.utils.common.logger.disable_loggers.decorate_callable", false]], "decorate_class() (ax.utils.common.decorator.classdecorator method)": [[18, "ax.utils.common.decorator.ClassDecorator.decorate_class", false]], "decorate_private (ax.utils.common.decorator.classdecorator attribute)": [[18, "ax.utils.common.decorator.ClassDecorator.DECORATE_PRIVATE", false]], "deduplicate (ax.models.random.base.randommodel attribute)": [[11, "ax.models.random.base.RandomModel.deduplicate", false]], "default() (ax.modelbridge.model_spec.modelspecjsonencoder method)": [[10, "ax.modelbridge.model_spec.ModelSpecJSONEncoder.default", false]], "default_data_constructor (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.default_data_constructor", false]], "default_data_type (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.default_data_type", false]], "default_ehvi_batch_limit (in module ax.modelbridge.factory)": [[10, "ax.modelbridge.factory.DEFAULT_EHVI_BATCH_LIMIT", false]], "default_fetch_kwargs (ax.service.scheduler.scheduler attribute)": [[15, "ax.service.scheduler.Scheduler.DEFAULT_FETCH_KWARGS", false]], "default_from_json() (in module ax.storage.json_store.decoders)": [[16, "ax.storage.json_store.decoders.default_from_json", false]], "default_kde_bandwidth (in module ax.utils.stats.model_fit_stats)": [[18, "ax.utils.stats.model_fit_stats.DEFAULT_KDE_BANDWIDTH", false]], "default_model_kwargs (ax.modelbridge.registry.modelsetup attribute)": [[10, "ax.modelbridge.registry.ModelSetup.default_model_kwargs", false]], "default_n (ax.core.generation_strategy_interface.generationstrategyinterface attribute)": [[3, "ax.core.generation_strategy_interface.GenerationStrategyInterface.DEFAULT_N", false]], "default_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.default_to_dict", false]], "default_trial_type (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.default_trial_type", false]], "default_trial_type (ax.core.multi_type_experiment.multitypeexperiment property)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.default_trial_type", false]], "default_trials (ax.core.multi_type_experiment.multitypeexperiment property)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.default_trials", false]], "delete_experiment() (in module ax.storage.sqa_store.delete)": [[16, "ax.storage.sqa_store.delete.delete_experiment", false]], "delete_generation_strategy() (in module ax.storage.sqa_store.delete)": [[16, "ax.storage.sqa_store.delete.delete_generation_strategy", false]], "dependent_parameters (ax.preview.api.configs.choiceparameterconfig attribute)": [[13, "ax.preview.api.configs.ChoiceParameterConfig.dependent_parameters", false]], "dependents (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.dependents", false]], "dependents (ax.core.parameter.fixedparameter property)": [[3, "ax.core.parameter.FixedParameter.dependents", false]], "dependents (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.dependents", false]], "dependents (ax.storage.sqa_store.sqa_classes.sqaparameter attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAParameter.dependents", false]], "deployed_job_id (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.deployed_job_id", false]], "deployed_job_id (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.deployed_job_id", false]], "deployed_name (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.deployed_name", false]], "derelativize (class in ax.modelbridge.transforms.derelativize)": [[10, "ax.modelbridge.transforms.derelativize.Derelativize", false]], "derelativize_bound() (in module ax.modelbridge.transforms.derelativize)": [[10, "ax.modelbridge.transforms.derelativize.derelativize_bound", false]], "derelativize_optimization_config_with_raw_status_quo() (in module ax.modelbridge.transforms.utils)": [[10, "ax.modelbridge.transforms.utils.derelativize_optimization_config_with_raw_status_quo", false]], "description (ax.core.multi_type_experiment.multitypeexperiment attribute)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.description", false]], "description (ax.preview.api.configs.experimentconfig attribute)": [[13, "ax.preview.api.configs.ExperimentConfig.description", false]], "deserialize_init_args() (ax.benchmark.benchmark_runner.benchmarkrunner class method)": [[2, "ax.benchmark.benchmark_runner.BenchmarkRunner.deserialize_init_args", false]], "deserialize_init_args() (ax.utils.common.serialization.serializationmixin class method)": [[18, "ax.utils.common.serialization.SerializationMixin.deserialize_init_args", false]], "deserialize_state() (ax.models.base.model class method)": [[11, "ax.models.base.Model.deserialize_state", false]], "device (ax.benchmark.problems.hpo.torchvision.pytorchcnntorchvisionbenchmarktestfunction attribute)": [[2, "ax.benchmark.problems.hpo.torchvision.PyTorchCNNTorchvisionBenchmarkTestFunction.device", false]], "device (ax.models.torch.botorch_modular.acquisition.acquisition property)": [[11, "ax.models.torch.botorch_modular.acquisition.Acquisition.device", false]], "device (ax.models.torch.botorch_modular.model.botorchmodel property)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.device", false]], "device (ax.models.torch.botorch_modular.surrogate.surrogate property)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate.device", false]], "device (ax.models.torch_base.torchmodel attribute)": [[11, "ax.models.torch_base.TorchModel.device", false]], "df (ax.analysis.analysis.analysiscard attribute)": [[0, "ax.analysis.analysis.AnalysisCard.df", false]], "diagnostics (ax.modelbridge.model_spec.modelspec property)": [[10, "ax.modelbridge.model_spec.ModelSpec.diagnostics", false]], "did_not_complete (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.did_not_complete", false]], "digits (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.digits", false]], "digits (ax.metrics.sklearn.sklearndataset attribute)": [[9, "ax.metrics.sklearn.SklearnDataset.DIGITS", false]], "dim (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpsampling property)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPSampling.dim", false]], "dim (ax.utils.testing.benchmark_stubs.dummytestfunction attribute)": [[18, "ax.utils.testing.benchmark_stubs.DummyTestFunction.dim", false]], "dimensionality (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.dimensionality", false]], "dimensionality (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.dimensionality", false]], "direct_arylation (ax.metrics.chemistry.chemistryproblemtype attribute)": [[9, "ax.metrics.chemistry.ChemistryProblemType.DIRECT_ARYLATION", false]], "disable_logger (class in ax.utils.common.logger)": [[18, "ax.utils.common.logger.disable_logger", false]], "disable_loggers (class in ax.utils.common.logger)": [[18, "ax.utils.common.logger.disable_loggers", false]], "discretemodel (class in ax.models.discrete_base)": [[11, "ax.models.discrete_base.DiscreteModel", false]], "discretemodelbridge (class in ax.modelbridge.discrete)": [[10, "ax.modelbridge.discrete.DiscreteModelBridge", false]], "dispatched (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.DISPATCHED", false]], "display_cards() (in module ax.analysis.analysis)": [[0, "ax.analysis.analysis.display_cards", false]], "distribute_replications (ax.benchmark.benchmark_method.benchmarkmethod attribute)": [[2, "ax.benchmark.benchmark_method.BenchmarkMethod.distribute_replications", false]], "distribution (ax.core.parameter_distribution.parameterdistribution property)": [[3, "ax.core.parameter_distribution.ParameterDistribution.distribution", false]], "distribution (ax.storage.utils.parameterconstrainttype attribute)": [[16, "ax.storage.utils.ParameterConstraintType.DISTRIBUTION", false]], "distribution_class (ax.core.parameter_distribution.parameterdistribution property)": [[3, "ax.core.parameter_distribution.ParameterDistribution.distribution_class", false]], "distribution_parameters (ax.core.parameter_distribution.parameterdistribution property)": [[3, "ax.core.parameter_distribution.ParameterDistribution.distribution_parameters", false]], "do_not_set_existing_value_to_null() (in module ax.storage.sqa_store.validation)": [[16, "ax.storage.sqa_store.validation.do_not_set_existing_value_to_null", false]], "docstringchecker (class in ax.utils.flake8_plugins.docstring_checker)": [[18, "ax.utils.flake8_plugins.docstring_checker.DocstringChecker", false]], "docstringcheckervisitor (class in ax.utils.flake8_plugins.docstring_checker)": [[18, "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor", false]], "domain (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[18, "ax.utils.measurement.synthetic_functions.SyntheticFunction.domain", false]], "domain_repr (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.domain_repr", false]], "domain_repr (ax.core.parameter.fixedparameter property)": [[3, "ax.core.parameter.FixedParameter.domain_repr", false]], "domain_repr (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.domain_repr", false]], "domain_repr (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.domain_repr", false]], "domaintype (class in ax.storage.utils)": [[16, "ax.storage.utils.DomainType", false]], "dtype (ax.models.torch.botorch_modular.acquisition.acquisition property)": [[11, "ax.models.torch.botorch_modular.acquisition.Acquisition.dtype", false]], "dtype (ax.models.torch.botorch_modular.model.botorchmodel property)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.dtype", false]], "dtype (ax.models.torch.botorch_modular.surrogate.surrogate property)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate.dtype", false]], "dtype (ax.models.torch_base.torchmodel attribute)": [[11, "ax.models.torch_base.TorchModel.dtype", false]], "dummyearlystoppingstrategy (class in ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.DummyEarlyStoppingStrategy", false]], "dummyglobalstoppingstrategy (class in ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.DummyGlobalStoppingStrategy", false]], "dummytestfunction (class in ax.utils.testing.benchmark_stubs)": [[18, "ax.utils.testing.benchmark_stubs.DummyTestFunction", false]], "early_stopped (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.EARLY_STOPPED", false]], "early_stopping_strategy (ax.service.ax_client.axclient property)": [[15, "ax.service.ax_client.AxClient.early_stopping_strategy", false]], "early_stopping_strategy (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.early_stopping_strategy", false], [15, "id5", false]], "early_stopping_strategy_cls (ax.telemetry.ax_client.axclientcreatedrecord attribute)": [[17, "ax.telemetry.ax_client.AxClientCreatedRecord.early_stopping_strategy_cls", false]], "early_stopping_strategy_cls (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.early_stopping_strategy_cls", false]], "early_stopping_strategy_cls (ax.telemetry.scheduler.schedulercreatedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCreatedRecord.early_stopping_strategy_cls", false]], "earlystoppingtrainingdata (class in ax.early_stopping.strategies.base)": [[4, "ax.early_stopping.strategies.base.EarlyStoppingTrainingData", false]], "embed_higher_dimension() (in module ax.benchmark.problems.hd_embedding)": [[2, "ax.benchmark.problems.hd_embedding.embed_higher_dimension", false]], "empirical_bayes_thompson (ax.modelbridge.registry.models attribute)": [[10, "ax.modelbridge.registry.Models.EMPIRICAL_BAYES_THOMPSON", false]], "empiricalbayesthompsonsampler (class in ax.models.discrete.eb_thompson)": [[11, "ax.models.discrete.eb_thompson.EmpiricalBayesThompsonSampler", false]], "encoder (ax.storage.registry_bundle.registrybundle property)": [[16, "ax.storage.registry_bundle.RegistryBundle.encoder", false]], "encoder (ax.storage.registry_bundle.registrybundlebase property)": [[16, "ax.storage.registry_bundle.RegistryBundleBase.encoder", false]], "encoder (ax.storage.sqa_store.structs.dbsettings attribute)": [[16, "ax.storage.sqa_store.structs.DBSettings.encoder", false]], "encoder (class in ax.storage.sqa_store.encoder)": [[16, "ax.storage.sqa_store.encoder.Encoder", false]], "encoder_registry (ax.storage.registry_bundle.registrybundlebase property)": [[16, "ax.storage.registry_bundle.RegistryBundleBase.encoder_registry", false]], "end_time (ax.core.observation.observationfeatures attribute)": [[3, "ax.core.observation.ObservationFeatures.end_time", false]], "enforce_immutable_search_space_and_opt_config (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.enforce_immutable_search_space_and_opt_config", false], [15, "id6", false]], "engine (ax.models.random.sobol.sobolgenerator property)": [[11, "ax.models.random.sobol.SobolGenerator.engine", false]], "entropy_of_observations() (in module ax.utils.stats.model_fit_stats)": [[18, "ax.utils.stats.model_fit_stats.entropy_of_observations", false]], "enumerate_discrete_combinations() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.enumerate_discrete_combinations", false]], "environmental_range (ax.storage.utils.domaintype attribute)": [[16, "ax.storage.utils.DomainType.ENVIRONMENTAL_RANGE", false]], "environmental_variable_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.environmental_variable_from_sqa", false]], "environmental_variable_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.environmental_variable_to_sqa", false]], "equality_typechecker() (in module ax.utils.common.equality)": [[18, "ax.utils.common.equality.equality_typechecker", false]], "err (ax.utils.common.result.err property)": [[18, "ax.utils.common.result.Err.err", false]], "err (ax.utils.common.result.ok property)": [[18, "ax.utils.common.result.Ok.err", false]], "err (ax.utils.common.result.result property)": [[18, "ax.utils.common.result.Result.err", false]], "err (class in ax.utils.common.result)": [[18, "ax.utils.common.result.Err", false]], "error (class in ax.utils.flake8_plugins.docstring_checker)": [[18, "ax.utils.flake8_plugins.docstring_checker.Error", false]], "error_if_failure_rate_exceeded() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.error_if_failure_rate_exceeded", false]], "errors (ax.utils.flake8_plugins.docstring_checker.docstringcheckervisitor attribute)": [[18, "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor.errors", false]], "estimate_early_stopping_savings() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.estimate_early_stopping_savings", false]], "estimate_early_stopping_savings() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.estimate_early_stopping_savings", false]], "estimate_early_stopping_savings() (in module ax.early_stopping.utils)": [[4, "ax.early_stopping.utils.estimate_early_stopping_savings", false]], "estimate_global_stopping_savings() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.estimate_global_stopping_savings", false]], "estimated_early_stopping_savings (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.estimated_early_stopping_savings", false]], "estimated_global_stopping_savings (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.estimated_global_stopping_savings", false]], "evaluate() (ax.metrics.chemistry.chemistrydata method)": [[9, "ax.metrics.chemistry.ChemistryData.evaluate", false]], "evaluate() (ax.models.torch.botorch_modular.acquisition.acquisition method)": [[11, "ax.models.torch.botorch_modular.acquisition.Acquisition.evaluate", false]], "evaluate() (in module ax.utils.tutorials.cnn_utils)": [[18, "ax.utils.tutorials.cnn_utils.evaluate", false]], "evaluate_acquisition_function() (ax.modelbridge.torch.torchmodelbridge method)": [[10, "ax.modelbridge.torch.TorchModelBridge.evaluate_acquisition_function", false]], "evaluate_acquisition_function() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.evaluate_acquisition_function", false]], "evaluate_acquisition_function() (ax.models.torch_base.torchmodel method)": [[11, "ax.models.torch_base.TorchModel.evaluate_acquisition_function", false]], "evaluate_oracle() (ax.benchmark.benchmark_problem.benchmarkproblem method)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.evaluate_oracle", false]], "evaluate_true() (ax.benchmark.benchmark_test_function.benchmarktestfunction method)": [[2, "ax.benchmark.benchmark_test_function.BenchmarkTestFunction.evaluate_true", false]], "evaluate_true() (ax.benchmark.benchmark_test_functions.botorch_test.botorchtestfunction method)": [[2, "ax.benchmark.benchmark_test_functions.botorch_test.BoTorchTestFunction.evaluate_true", false]], "evaluate_true() (ax.benchmark.benchmark_test_functions.surrogate.surrogatetestfunction method)": [[2, "ax.benchmark.benchmark_test_functions.surrogate.SurrogateTestFunction.evaluate_true", false]], "evaluate_true() (ax.benchmark.problems.hpo.torchvision.pytorchcnntorchvisionbenchmarktestfunction method)": [[2, "ax.benchmark.problems.hpo.torchvision.PyTorchCNNTorchvisionBenchmarkTestFunction.evaluate_true", false]], "evaluate_true() (ax.benchmark.problems.synthetic.hss.jenatton.jenatton method)": [[2, "ax.benchmark.problems.synthetic.hss.jenatton.Jenatton.evaluate_true", false]], "evaluate_true() (ax.utils.testing.benchmark_stubs.dummytestfunction method)": [[18, "ax.utils.testing.benchmark_stubs.DummyTestFunction.evaluate_true", false]], "evaluation_function() (in module ax.metrics.factorial)": [[9, "ax.metrics.factorial.evaluation_function", false]], "evalute_function() (ax.utils.sensitivity.sobol_measures.sobolsensitivity method)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivity.evalute_function", false]], "exception (ax.utils.common.result.exceptione attribute)": [[18, "ax.utils.common.result.ExceptionE.exception", false]], "exceptione (class in ax.utils.common.result)": [[18, "ax.utils.common.result.ExceptionE", false]], "execute_with_timeout() (in module ax.utils.common.executils)": [[18, "ax.utils.common.executils.execute_with_timeout", false]], "exp_to_df() (in module ax.service.utils.report_utils)": [[15, "ax.service.utils.report_utils.exp_to_df", false]], "expand (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.EXPAND", false]], "expected_acqf_val (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.EXPECTED_ACQF_VAL", false]], "expecting_data (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.expecting_data", false]], "experiment (ax.benchmark.benchmark_result.benchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.BenchmarkResult.experiment", false]], "experiment (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.experiment", false]], "experiment (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.experiment", false]], "experiment (ax.core.generation_strategy_interface.generationstrategyinterface property)": [[3, "ax.core.generation_strategy_interface.GenerationStrategyInterface.experiment", false]], "experiment (ax.modelbridge.generation_node.generationnode property)": [[10, "ax.modelbridge.generation_node.GenerationNode.experiment", false]], "experiment (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.experiment", false]], "experiment (ax.service.ax_client.axclient property)": [[15, "ax.service.ax_client.AxClient.experiment", false]], "experiment (ax.service.scheduler.scheduler attribute)": [[15, "ax.service.scheduler.Scheduler.experiment", false], [15, "id0", false]], "experiment (class in ax.core.experiment)": [[3, "ax.core.experiment.Experiment", false]], "experiment_completed_record (ax.telemetry.ax_client.axclientcompletedrecord attribute)": [[17, "ax.telemetry.ax_client.AxClientCompletedRecord.experiment_completed_record", false]], "experiment_completed_record (ax.telemetry.scheduler.schedulercompletedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCompletedRecord.experiment_completed_record", false]], "experiment_created_record (ax.telemetry.ax_client.axclientcreatedrecord attribute)": [[17, "ax.telemetry.ax_client.AxClientCreatedRecord.experiment_created_record", false]], "experiment_created_record (ax.telemetry.scheduler.schedulercreatedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCreatedRecord.experiment_created_record", false]], "experiment_data_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.experiment_data_to_sqa", false]], "experiment_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.experiment_from_json", false]], "experiment_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.experiment_from_sqa", false]], "experiment_name (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.experiment_name", false]], "experiment_name (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.experiment_name", false]], "experiment_storage_id (ax.benchmark.benchmark_result.benchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.BenchmarkResult.experiment_storage_id", false]], "experiment_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.experiment_to_dict", false]], "experiment_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.experiment_to_sqa", false]], "experiment_total_concurrent_arms (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.EXPERIMENT_TOTAL_CONCURRENT_ARMS", false]], "experiment_type (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.experiment_type", false]], "experiment_type (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.experiment_type", false]], "experiment_type (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.experiment_type", false]], "experimental_metric_eval() (in module ax.utils.testing.preference_stubs)": [[18, "ax.utils.testing.preference_stubs.experimental_metric_eval", false]], "experimentcompletedrecord (class in ax.telemetry.experiment)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord", false]], "experimentconfig (class in ax.preview.api.configs)": [[13, "ax.preview.api.configs.ExperimentConfig", false]], "experimentcreatedrecord (class in ax.telemetry.experiment)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord", false]], "experimentnotfounderror": [[5, "ax.exceptions.core.ExperimentNotFoundError", false]], "experimentnotreadyerror": [[5, "ax.exceptions.core.ExperimentNotReadyError", false]], "exploration (ax.core.batch_trial.lifecyclestage attribute)": [[3, "ax.core.batch_trial.LifecycleStage.EXPLORATION", false]], "exploration_concurrent (ax.core.batch_trial.lifecyclestage attribute)": [[3, "ax.core.batch_trial.LifecycleStage.EXPLORATION_CONCURRENT", false]], "extend_pending_observations() (in module ax.core.utils)": [[3, "ax.core.utils.extend_pending_observations", false]], "extend_range() (in module ax.plot.helper)": [[12, "ax.plot.helper.extend_range", false]], "externalgenerationnode (class in ax.modelbridge.external_generation_node)": [[10, "ax.modelbridge.external_generation_node.ExternalGenerationNode", false]], "extract_arm_predictions() (in module ax.core.generator_run)": [[3, "ax.core.generator_run.extract_arm_predictions", false]], "extract_init_args() (in module ax.utils.common.serialization)": [[18, "ax.utils.common.serialization.extract_init_args", false]], "extract_objective_thresholds() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.extract_objective_thresholds", false]], "extract_objective_weights() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.extract_objective_weights", false]], "extract_outcome_constraints() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.extract_outcome_constraints", false]], "extract_parameter_constraints() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.extract_parameter_constraints", false]], "extract_pending_observations() (in module ax.core.utils)": [[3, "ax.core.utils.extract_pending_observations", false]], "extract_risk_measure() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.extract_risk_measure", false]], "extract_robust_digest() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.extract_robust_digest", false]], "extract_search_space_digest() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.extract_search_space_digest", false]], "extract_y_from_data() (in module ax.service.utils.best_point)": [[15, "ax.service.utils.best_point.extract_Y_from_data", false]], "f() (ax.metrics.branin.augmentedbraninmetric method)": [[9, "ax.metrics.branin.AugmentedBraninMetric.f", false]], "f() (ax.metrics.branin.braninmetric method)": [[9, "ax.metrics.branin.BraninMetric.f", false]], "f() (ax.metrics.branin.negativebraninmetric method)": [[9, "ax.metrics.branin.NegativeBraninMetric.f", false]], "f() (ax.metrics.branin_map.braninfidelitymapmetric method)": [[9, "ax.metrics.branin_map.BraninFidelityMapMetric.f", false]], "f() (ax.metrics.branin_map.branintimestampmapmetric method)": [[9, "ax.metrics.branin_map.BraninTimestampMapMetric.f", false]], "f() (ax.metrics.hartmann6.augmentedhartmann6metric method)": [[9, "ax.metrics.hartmann6.AugmentedHartmann6Metric.f", false]], "f() (ax.metrics.hartmann6.hartmann6metric method)": [[9, "ax.metrics.hartmann6.Hartmann6Metric.f", false]], "f() (ax.metrics.l2norm.l2normmetric method)": [[9, "ax.metrics.l2norm.L2NormMetric.f", false]], "f() (ax.metrics.noisy_function.noisyfunctionmetric method)": [[9, "ax.metrics.noisy_function.NoisyFunctionMetric.f", false]], "f() (ax.metrics.noisy_function_map.noisyfunctionmapmetric method)": [[9, "ax.metrics.noisy_function_map.NoisyFunctionMapMetric.f", false]], "f() (ax.utils.measurement.synthetic_functions.syntheticfunction method)": [[18, "ax.utils.measurement.synthetic_functions.SyntheticFunction.f", false]], "factorial (ax.modelbridge.registry.models attribute)": [[10, "ax.modelbridge.registry.Models.FACTORIAL", false]], "factorialmetric (class in ax.metrics.factorial)": [[9, "ax.metrics.factorial.FactorialMetric", false]], "factory_fn (ax.benchmark.problems.registry.benchmarkproblemregistryentry attribute)": [[2, "ax.benchmark.problems.registry.BenchmarkProblemRegistryEntry.factory_fn", false]], "factory_function (ax.modelbridge.model_spec.factoryfunctionmodelspec attribute)": [[10, "ax.modelbridge.model_spec.FactoryFunctionModelSpec.factory_function", false]], "factory_kwargs (ax.benchmark.problems.registry.benchmarkproblemregistryentry attribute)": [[2, "ax.benchmark.problems.registry.BenchmarkProblemRegistryEntry.factory_kwargs", false]], "factoryfunctionmodelspec (class in ax.modelbridge.model_spec)": [[10, "ax.modelbridge.model_spec.FactoryFunctionModelSpec", false]], "fail (ax.analysis.healthcheck.healthcheck_analysis.healthcheckstatus attribute)": [[0, "ax.analysis.healthcheck.healthcheck_analysis.HealthcheckStatus.FAIL", false]], "failed (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.FAILED", false]], "failed (ax.utils.testing.backend_simulator.backendsimulatorstate attribute)": [[18, "ax.utils.testing.backend_simulator.BackendSimulatorState.failed", false]], "failed (ax.utils.testing.backend_simulator.simstatus attribute)": [[18, "ax.utils.testing.backend_simulator.SimStatus.failed", false], [18, "id1", false]], "failed_abandoned_trial_indices (ax.service.scheduler.scheduler property)": [[15, "ax.service.scheduler.Scheduler.failed_abandoned_trial_indices", false]], "failed_reason (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.failed_reason", false]], "failure_rate (ax.utils.testing.backend_simulator.backendsimulatoroptions attribute)": [[18, "ax.utils.testing.backend_simulator.BackendSimulatorOptions.failure_rate", false]], "failurerateexceedederror": [[15, "ax.service.scheduler.FailureRateExceededError", false]], "fallback_to_sample_polytope (ax.models.random.base.randommodel attribute)": [[11, "ax.models.random.base.RandomModel.fallback_to_sample_polytope", false]], "feasible_hypervolume() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.feasible_hypervolume", false]], "feature_importances() (ax.modelbridge.base.modelbridge method)": [[10, "ax.modelbridge.base.ModelBridge.feature_importances", false]], "feature_importances() (ax.modelbridge.torch.torchmodelbridge method)": [[10, "ax.modelbridge.torch.TorchModelBridge.feature_importances", false]], "feature_importances() (ax.models.base.model method)": [[11, "ax.models.base.Model.feature_importances", false]], "feature_importances() (ax.models.torch.botorch.botorchmodel method)": [[11, "ax.models.torch.botorch.BotorchModel.feature_importances", false]], "feature_importances() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.feature_importances", false]], "features (ax.core.observation.observation attribute)": [[3, "ax.core.observation.Observation.features", false]], "fetch_data() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.fetch_data", false]], "fetch_data() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.fetch_data", false]], "fetch_data() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.fetch_data", false]], "fetch_data_results() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.fetch_data_results", false]], "fetch_data_results() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.fetch_data_results", false]], "fetch_kwargs (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.fetch_kwargs", false], [15, "id7", false]], "fetch_trial_data() (ax.benchmark.benchmark_metric.benchmarkmetric method)": [[2, "ax.benchmark.benchmark_metric.BenchmarkMetric.fetch_trial_data", false]], "fetch_trial_data() (ax.metrics.branin_map.braninfidelitymapmetric method)": [[9, "ax.metrics.branin_map.BraninFidelityMapMetric.fetch_trial_data", false]], "fetch_trial_data() (ax.metrics.branin_map.branintimestampmapmetric method)": [[9, "ax.metrics.branin_map.BraninTimestampMapMetric.fetch_trial_data", false]], "fetch_trial_data() (ax.metrics.chemistry.chemistrymetric method)": [[9, "ax.metrics.chemistry.ChemistryMetric.fetch_trial_data", false]], "fetch_trial_data() (ax.metrics.factorial.factorialmetric method)": [[9, "ax.metrics.factorial.FactorialMetric.fetch_trial_data", false]], "fetch_trial_data() (ax.metrics.noisy_function.noisyfunctionmetric method)": [[9, "ax.metrics.noisy_function.NoisyFunctionMetric.fetch_trial_data", false]], "fetch_trial_data() (ax.metrics.noisy_function_map.noisyfunctionmapmetric method)": [[9, "ax.metrics.noisy_function_map.NoisyFunctionMapMetric.fetch_trial_data", false]], "fetch_trial_data() (ax.metrics.sklearn.sklearnmetric method)": [[9, "ax.metrics.sklearn.SklearnMetric.fetch_trial_data", false]], "fetch_trial_data() (ax.metrics.tensorboard.tensorboardmetric method)": [[9, "ax.metrics.tensorboard.TensorboardMetric.fetch_trial_data", false]], "fetch_trial_data() (ax.metrics.torchx.torchxmetric method)": [[9, "ax.metrics.torchx.TorchXMetric.fetch_trial_data", false]], "fetch_trial_data() (ax.utils.testing.metrics.backend_simulator_map.backendsimulatortimestampmapmetric method)": [[18, "ax.utils.testing.metrics.backend_simulator_map.BackendSimulatorTimestampMapMetric.fetch_trial_data", false]], "fetch_trials_data() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.fetch_trials_data", false]], "fetch_trials_data_results() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.fetch_trials_data_results", false]], "fidelity_features (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.FIDELITY_FEATURES", false]], "fidelity_weights (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.FIDELITY_WEIGHTS", false]], "fikename (ax.utils.flake8_plugins.docstring_checker.docstringchecker attribute)": [[18, "ax.utils.flake8_plugins.docstring_checker.DocstringChecker.fikename", false]], "fill_missing_thresholds_from_nadir() (in module ax.service.utils.best_point)": [[15, "ax.service.utils.best_point.fill_missing_thresholds_from_nadir", false]], "fillmissingparameters (class in ax.modelbridge.transforms.fill_missing_parameters)": [[10, "ax.modelbridge.transforms.fill_missing_parameters.FillMissingParameters", false]], "filter() (ax.utils.common.logger.axoutputnamefilter method)": [[18, "ax.utils.common.logger.AxOutputNameFilter.filter", false]], "filter_constraints_and_fixed_features() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.filter_constraints_and_fixed_features", false]], "filter_kwargs() (in module ax.utils.common.kwargs)": [[18, "ax.utils.common.kwargs.filter_kwargs", false]], "filter_trials_by_type() (in module ax.core.multi_type_experiment)": [[3, "ax.core.multi_type_experiment.filter_trials_by_type", false]], "first_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivity method)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivity.first_order_indices", false]], "first_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpmean method)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPMean.first_order_indices", false]], "first_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpsampling method)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPSampling.first_order_indices", false]], "fit() (ax.modelbridge.external_generation_node.externalgenerationnode method)": [[10, "ax.modelbridge.external_generation_node.ExternalGenerationNode.fit", false]], "fit() (ax.modelbridge.generation_node.generationnode method)": [[10, "ax.modelbridge.generation_node.GenerationNode.fit", false]], "fit() (ax.modelbridge.model_spec.factoryfunctionmodelspec method)": [[10, "ax.modelbridge.model_spec.FactoryFunctionModelSpec.fit", false]], "fit() (ax.modelbridge.model_spec.modelspec method)": [[10, "ax.modelbridge.model_spec.ModelSpec.fit", false]], "fit() (ax.models.discrete.thompson.thompsonsampler method)": [[11, "ax.models.discrete.thompson.ThompsonSampler.fit", false]], "fit() (ax.models.discrete_base.discretemodel method)": [[11, "ax.models.discrete_base.DiscreteModel.fit", false]], "fit() (ax.models.torch.botorch.botorchmodel method)": [[11, "ax.models.torch.botorch.BotorchModel.fit", false]], "fit() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.fit", false]], "fit() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate.fit", false]], "fit() (ax.models.torch.cbo_lcea.lceabo method)": [[11, "ax.models.torch.cbo_lcea.LCEABO.fit", false]], "fit() (ax.models.torch.cbo_sac.sacbo method)": [[11, "ax.models.torch.cbo_sac.SACBO.fit", false]], "fit() (ax.models.torch.randomforest.randomforest method)": [[11, "ax.models.torch.randomforest.RandomForest.fit", false]], "fit() (ax.models.torch_base.torchmodel method)": [[11, "ax.models.torch_base.TorchModel.fit", false]], "fit_botorch_model() (in module ax.models.torch.botorch_modular.utils)": [[11, "ax.models.torch.botorch_modular.utils.fit_botorch_model", false]], "fit_model() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.fit_model", false]], "fit_out_of_design (ax.models.torch_base.torchoptconfig attribute)": [[11, "ax.models.torch_base.TorchOptConfig.fit_out_of_design", false]], "fit_time (ax.benchmark.benchmark_result.aggregatedbenchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.AggregatedBenchmarkResult.fit_time", false]], "fit_time (ax.benchmark.benchmark_result.benchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.BenchmarkResult.fit_time", false]], "fit_time (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.fit_time", false]], "fitted_model (ax.modelbridge.model_spec.modelspec property)": [[10, "ax.modelbridge.model_spec.ModelSpec.fitted_model", false]], "fixed (ax.storage.utils.domaintype attribute)": [[16, "ax.storage.utils.DomainType.FIXED", false]], "fixed_features (ax.modelbridge.base.basegenargs attribute)": [[10, "ax.modelbridge.base.BaseGenArgs.fixed_features", false]], "fixed_features (ax.modelbridge.model_spec.modelspec property)": [[10, "ax.modelbridge.model_spec.ModelSpec.fixed_features", false]], "fixed_features (ax.models.torch_base.torchoptconfig attribute)": [[11, "ax.models.torch_base.TorchOptConfig.fixed_features", false], [11, "id0", false]], "fixed_parameter_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.fixed_parameter_to_dict", false]], "fixed_value (ax.storage.sqa_store.sqa_classes.sqaparameter attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAParameter.fixed_value", false]], "fixedfeatures (class in ax.service.utils.instantiation)": [[15, "ax.service.utils.instantiation.FixedFeatures", false]], "fixedparameter (class in ax.core.parameter)": [[3, "ax.core.parameter.FixedParameter", false]], "flatten() (ax.telemetry.ax_client.axclientcompletedrecord method)": [[17, "ax.telemetry.ax_client.AxClientCompletedRecord.flatten", false]], "flatten() (ax.telemetry.ax_client.axclientcreatedrecord method)": [[17, "ax.telemetry.ax_client.AxClientCreatedRecord.flatten", false]], "flatten() (ax.telemetry.scheduler.schedulercompletedrecord method)": [[17, "ax.telemetry.scheduler.SchedulerCompletedRecord.flatten", false]], "flatten() (ax.telemetry.scheduler.schedulercreatedrecord method)": [[17, "ax.telemetry.scheduler.SchedulerCreatedRecord.flatten", false]], "float (ax.core.parameter.parametertype attribute)": [[3, "ax.core.parameter.ParameterType.FLOAT", false]], "float (ax.preview.api.configs.parametertype attribute)": [[13, "ax.preview.api.configs.ParameterType.FLOAT", false]], "fmax (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[18, "ax.utils.measurement.synthetic_functions.SyntheticFunction.fmax", false]], "fmin (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[18, "ax.utils.measurement.synthetic_functions.SyntheticFunction.fmin", false]], "force_candidate_generation (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.force_candidate_generation", false], [15, "id8", false]], "format() (in module ax.utils.testing.backend_simulator)": [[18, "ax.utils.testing.backend_simulator.format", false]], "format_constraint_violated_probabilities() (in module ax.analysis.plotly.utils)": [[0, "ax.analysis.plotly.utils.format_constraint_violated_probabilities", false]], "format_parameters_for_effects_by_arm_plot() (in module ax.analysis.plotly.arm_effects.utils)": [[0, "ax.analysis.plotly.arm_effects.utils.format_parameters_for_effects_by_arm_plot", false]], "forward() (ax.benchmark.problems.hpo.torchvision.cnn method)": [[2, "ax.benchmark.problems.hpo.torchvision.CNN.forward", false]], "forward() (ax.utils.tutorials.cnn_utils.cnn method)": [[18, "ax.utils.tutorials.cnn_utils.CNN.forward", false]], "frac_random (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.FRAC_RANDOM", false]], "from_arm() (ax.core.observation.observationfeatures static method)": [[3, "ax.core.observation.ObservationFeatures.from_arm", false]], "from_ax_client() (ax.telemetry.ax_client.axclientcompletedrecord class method)": [[17, "ax.telemetry.ax_client.AxClientCompletedRecord.from_ax_client", false]], "from_ax_client() (ax.telemetry.ax_client.axclientcreatedrecord class method)": [[17, "ax.telemetry.ax_client.AxClientCreatedRecord.from_ax_client", false]], "from_ax_client() (ax.telemetry.optimization.optimizationcompletedrecord class method)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.from_ax_client", false]], "from_ax_client() (ax.telemetry.optimization.optimizationcreatedrecord class method)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.from_ax_client", false]], "from_benchmark_results() (ax.benchmark.benchmark_result.aggregatedbenchmarkresult class method)": [[2, "ax.benchmark.benchmark_result.AggregatedBenchmarkResult.from_benchmark_results", false]], "from_botorch() (in module ax.utils.measurement.synthetic_functions)": [[18, "ax.utils.measurement.synthetic_functions.from_botorch", false]], "from_early_stopping_strategies() (ax.early_stopping.strategies.logical.orearlystoppingstrategy class method)": [[4, "ax.early_stopping.strategies.logical.OrEarlyStoppingStrategy.from_early_stopping_strategies", false]], "from_experiment() (ax.telemetry.experiment.experimentcompletedrecord class method)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord.from_experiment", false]], "from_experiment() (ax.telemetry.experiment.experimentcreatedrecord class method)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.from_experiment", false]], "from_experiment() (ax.telemetry.optimization.optimizationcreatedrecord class method)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.from_experiment", false]], "from_generation_strategy() (ax.telemetry.generation_strategy.generationstrategycreatedrecord class method)": [[17, "ax.telemetry.generation_strategy.GenerationStrategyCreatedRecord.from_generation_strategy", false]], "from_json_snapshot() (ax.service.ax_client.axclient class method)": [[15, "ax.service.ax_client.AxClient.from_json_snapshot", false]], "from_registry_bundles() (ax.storage.registry_bundle.registrybundlebase class method)": [[16, "ax.storage.registry_bundle.RegistryBundleBase.from_registry_bundles", false]], "from_scheduler() (ax.telemetry.optimization.optimizationcompletedrecord class method)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.from_scheduler", false]], "from_scheduler() (ax.telemetry.optimization.optimizationcreatedrecord class method)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.from_scheduler", false]], "from_scheduler() (ax.telemetry.scheduler.schedulercompletedrecord class method)": [[17, "ax.telemetry.scheduler.SchedulerCompletedRecord.from_scheduler", false]], "from_scheduler() (ax.telemetry.scheduler.schedulercreatedrecord class method)": [[17, "ax.telemetry.scheduler.SchedulerCreatedRecord.from_scheduler", false]], "from_state() (ax.utils.testing.backend_simulator.backendsimulator class method)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.from_state", false]], "from_stored_experiment() (ax.service.scheduler.scheduler class method)": [[15, "ax.service.scheduler.Scheduler.from_stored_experiment", false]], "frombotorch (class in ax.utils.measurement.synthetic_functions)": [[18, "ax.utils.measurement.synthetic_functions.FromBotorch", false]], "full_parameterization (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.FULL_PARAMETERIZATION", false]], "full_run() (ax.service.managed_loop.optimizationloop method)": [[15, "ax.service.managed_loop.OptimizationLoop.full_run", false]], "fullfactorialgenerator (class in ax.models.discrete.full_factorial)": [[11, "ax.models.discrete.full_factorial.FullFactorialGenerator", false]], "funcenum (class in ax.utils.common.func_enum)": [[18, "ax.utils.common.func_enum.FuncEnum", false]], "gaussianlinkmean() (in module ax.utils.sensitivity.sobol_measures)": [[18, "ax.utils.sensitivity.sobol_measures.GaussianLinkMean", false]], "gen() (ax.modelbridge.base.modelbridge method)": [[10, "ax.modelbridge.base.ModelBridge.gen", false]], "gen() (ax.modelbridge.generation_node.generationnode method)": [[10, "ax.modelbridge.generation_node.GenerationNode.gen", false]], "gen() (ax.modelbridge.generation_node.generationstep method)": [[10, "ax.modelbridge.generation_node.GenerationStep.gen", false]], "gen() (ax.modelbridge.generation_strategy.generationstrategy method)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.gen", false]], "gen() (ax.modelbridge.model_spec.modelspec method)": [[10, "ax.modelbridge.model_spec.ModelSpec.gen", false]], "gen() (ax.models.discrete.full_factorial.fullfactorialgenerator method)": [[11, "ax.models.discrete.full_factorial.FullFactorialGenerator.gen", false]], "gen() (ax.models.discrete.thompson.thompsonsampler method)": [[11, "ax.models.discrete.thompson.ThompsonSampler.gen", false]], "gen() (ax.models.discrete_base.discretemodel method)": [[11, "ax.models.discrete_base.DiscreteModel.gen", false]], "gen() (ax.models.random.base.randommodel method)": [[11, "ax.models.random.base.RandomModel.gen", false]], "gen() (ax.models.random.sobol.sobolgenerator method)": [[11, "ax.models.random.sobol.SobolGenerator.gen", false]], "gen() (ax.models.torch.botorch.botorchmodel method)": [[11, "ax.models.torch.botorch.BotorchModel.gen", false]], "gen() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.gen", false]], "gen() (ax.models.torch.botorch_moo.multiobjectivebotorchmodel method)": [[11, "ax.models.torch.botorch_moo.MultiObjectiveBotorchModel.gen", false]], "gen() (ax.models.torch_base.torchmodel method)": [[11, "ax.models.torch_base.TorchModel.gen", false]], "gen_arms() (in module ax.modelbridge.base)": [[10, "ax.modelbridge.base.gen_arms", false]], "gen_for_multiple_trials_with_multiple_models() (ax.core.generation_strategy_interface.generationstrategyinterface method)": [[3, "ax.core.generation_strategy_interface.GenerationStrategyInterface.gen_for_multiple_trials_with_multiple_models", false]], "gen_for_multiple_trials_with_multiple_models() (ax.modelbridge.generation_strategy.generationstrategy method)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.gen_for_multiple_trials_with_multiple_models", false]], "gen_for_multiple_trials_with_multiple_models() (ax.utils.testing.core_stubs.specialgenerationstrategy method)": [[18, "ax.utils.testing.core_stubs.SpecialGenerationStrategy.gen_for_multiple_trials_with_multiple_models", false]], "gen_metadata (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.gen_metadata", false]], "gen_metadata (ax.modelbridge.base.genresults attribute)": [[10, "ax.modelbridge.base.GenResults.gen_metadata", false]], "gen_metadata (ax.models.torch_base.torchgenresults attribute)": [[11, "ax.models.torch_base.TorchGenResults.gen_metadata", false]], "gen_time (ax.benchmark.benchmark_result.aggregatedbenchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.AggregatedBenchmarkResult.gen_time", false]], "gen_time (ax.benchmark.benchmark_result.benchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.BenchmarkResult.gen_time", false]], "gen_time (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.gen_time", false]], "gen_with_multiple_nodes() (ax.modelbridge.generation_strategy.generationstrategy method)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.gen_with_multiple_nodes", false]], "generate_all_input_matrix() (ax.utils.sensitivity.sobol_measures.sobolsensitivity method)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivity.generate_all_input_matrix", false]], "generate_candidates() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.generate_candidates", false]], "generate_model_space_decomposition() (in module ax.models.torch.cbo_sac)": [[11, "ax.models.torch.cbo_sac.generate_model_space_decomposition", false]], "generated_points (ax.models.random.base.randommodel attribute)": [[11, "ax.models.random.base.RandomModel.generated_points", false]], "generation_node_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.generation_node_from_json", false]], "generation_node_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.generation_node_to_dict", false]], "generation_step_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.generation_step_from_json", false]], "generation_step_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.generation_step_to_dict", false]], "generation_strategy (ax.benchmark.benchmark_method.benchmarkmethod attribute)": [[2, "ax.benchmark.benchmark_method.BenchmarkMethod.generation_strategy", false]], "generation_strategy (ax.modelbridge.generation_node.generationnode property)": [[10, "ax.modelbridge.generation_node.GenerationNode.generation_strategy", false]], "generation_strategy (ax.service.ax_client.axclient property)": [[15, "ax.service.ax_client.AxClient.generation_strategy", false]], "generation_strategy (ax.service.scheduler.scheduler attribute)": [[15, "ax.service.scheduler.Scheduler.generation_strategy", false], [15, "id1", false]], "generation_strategy (ax.storage.sqa_store.sqa_classes.sqaexperiment attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAExperiment.generation_strategy", false]], "generation_strategy_created_record (ax.telemetry.ax_client.axclientcreatedrecord attribute)": [[17, "ax.telemetry.ax_client.AxClientCreatedRecord.generation_strategy_created_record", false]], "generation_strategy_created_record (ax.telemetry.scheduler.schedulercreatedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCreatedRecord.generation_strategy_created_record", false]], "generation_strategy_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.generation_strategy_from_json", false]], "generation_strategy_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.generation_strategy_from_sqa", false]], "generation_strategy_name (ax.telemetry.generation_strategy.generationstrategycreatedrecord attribute)": [[17, "ax.telemetry.generation_strategy.GenerationStrategyCreatedRecord.generation_strategy_name", false]], "generation_strategy_name (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.generation_strategy_name", false]], "generation_strategy_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.generation_strategy_to_dict", false]], "generation_strategy_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.generation_strategy_to_sqa", false]], "generationnode (class in ax.modelbridge.generation_node)": [[10, "ax.modelbridge.generation_node.GenerationNode", false]], "generationstep (class in ax.modelbridge.generation_node)": [[10, "ax.modelbridge.generation_node.GenerationStep", false]], "generationstrategy (class in ax.modelbridge.generation_strategy)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy", false]], "generationstrategycompleted": [[5, "ax.exceptions.generation_strategy.GenerationStrategyCompleted", false]], "generationstrategyconfig (class in ax.preview.api.configs)": [[13, "ax.preview.api.configs.GenerationStrategyConfig", false]], "generationstrategycreatedrecord (class in ax.telemetry.generation_strategy)": [[17, "ax.telemetry.generation_strategy.GenerationStrategyCreatedRecord", false]], "generationstrategyinterface (class in ax.core.generation_strategy_interface)": [[3, "ax.core.generation_strategy_interface.GenerationStrategyInterface", false]], "generationstrategymisconfiguredexception": [[5, "ax.exceptions.generation_strategy.GenerationStrategyMisconfiguredException", false]], "generationstrategyrepeatedpoints": [[5, "ax.exceptions.generation_strategy.GenerationStrategyRepeatedPoints", false]], "generator_run (ax.core.batch_trial.generatorrunstruct attribute)": [[3, "ax.core.batch_trial.GeneratorRunStruct.generator_run", false]], "generator_run (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.generator_run", false]], "generator_run_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.generator_run_from_json", false]], "generator_run_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.generator_run_from_sqa", false]], "generator_run_limit() (ax.modelbridge.generation_node.generationnode method)": [[10, "ax.modelbridge.generation_node.GenerationNode.generator_run_limit", false]], "generator_run_structs (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.generator_run_structs", false]], "generator_run_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.generator_run_to_dict", false]], "generator_run_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.generator_run_to_sqa", false]], "generator_run_type (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.generator_run_type", false]], "generator_runs (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.generator_runs", false]], "generator_runs (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.generator_runs", false]], "generator_runs (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.generator_runs", false]], "generator_runs (ax.storage.sqa_store.sqa_classes.sqagenerationstrategy attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAGenerationStrategy.generator_runs", false]], "generator_runs (ax.storage.sqa_store.sqa_classes.sqatrial attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQATrial.generator_runs", false]], "generator_runs() (ax.utils.testing.core_stubs.testtrial method)": [[18, "ax.utils.testing.core_stubs.TestTrial.generator_runs", false]], "generatorrun (class in ax.core.generator_run)": [[3, "ax.core.generator_run.GeneratorRun", false]], "generatorrunstruct (class in ax.core.batch_trial)": [[3, "ax.core.batch_trial.GeneratorRunStruct", false]], "generatorruntype (class in ax.core.generator_run)": [[3, "ax.core.generator_run.GeneratorRunType", false]], "generic (ax.plot.base.axplottypes attribute)": [[12, "ax.plot.base.AxPlotTypes.GENERIC", false]], "generic_equals() (in module ax.utils.testing.utils)": [[18, "ax.utils.testing.utils.generic_equals", false]], "genericnoisyfunctionmetric (class in ax.metrics.noisy_function)": [[9, "ax.metrics.noisy_function.GenericNoisyFunctionMetric", false]], "genresults (class in ax.modelbridge.base)": [[10, "ax.modelbridge.base.GenResults", false]], "geq (ax.core.types.comparisonop attribute)": [[3, "ax.core.types.ComparisonOp.GEQ", false]], "get_abandoned_arm() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_abandoned_arm", false]], "get_acqf() (in module ax.models.torch.botorch_defaults)": [[11, "ax.models.torch.botorch_defaults.get_acqf", false]], "get_acquisition_function_type() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_acquisition_function_type", false]], "get_acquisition_type() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_acquisition_type", false]], "get_aggregated_benchmark_result() (in module ax.utils.testing.benchmark_stubs)": [[18, "ax.utils.testing.benchmark_stubs.get_aggregated_benchmark_result", false]], "get_and_early_stopping_strategy() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_and_early_stopping_strategy", false]], "get_and_fit_model() (ax.models.torch.cbo_lcea.lceabo method)": [[11, "ax.models.torch.cbo_lcea.LCEABO.get_and_fit_model", false]], "get_and_fit_model() (ax.models.torch.cbo_lcem.lcembo method)": [[11, "ax.models.torch.cbo_lcem.LCEMBO.get_and_fit_model", false]], "get_and_fit_model() (ax.models.torch.cbo_sac.sacbo method)": [[11, "ax.models.torch.cbo_sac.SACBO.get_and_fit_model", false]], "get_and_fit_model() (in module ax.models.torch.botorch_defaults)": [[11, "ax.models.torch.botorch_defaults.get_and_fit_model", false]], "get_arm() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_arm", false]], "get_arm_weights1() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_arm_weights1", false]], "get_arm_weights2() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_arm_weights2", false]], "get_arms() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_arms", false]], "get_arms_from_dict() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_arms_from_dict", false]], "get_auxiliary_experiment() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_auxiliary_experiment", false]], "get_batch_initial_conditions() (in module ax.models.torch.botorch_modular.sebo)": [[11, "ax.models.torch.botorch_modular.sebo.get_batch_initial_conditions", false]], "get_batch_trial() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_batch_trial", false]], "get_batch_trial_with_repeated_arms() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_batch_trial_with_repeated_arms", false]], "get_benchmark_result() (in module ax.utils.testing.benchmark_stubs)": [[18, "ax.utils.testing.benchmark_stubs.get_benchmark_result", false]], "get_benchmark_runner() (in module ax.benchmark.benchmark)": [[2, "ax.benchmark.benchmark.get_benchmark_runner", false]], "get_benchmark_scheduler_options() (in module ax.benchmark.benchmark_method)": [[2, "ax.benchmark.benchmark_method.get_benchmark_scheduler_options", false]], "get_best_by_raw_objective() (in module ax.service.utils.best_point)": [[15, "ax.service.utils.best_point.get_best_by_raw_objective", false]], "get_best_by_raw_objective_with_trial_index() (in module ax.service.utils.best_point)": [[15, "ax.service.utils.best_point.get_best_by_raw_objective_with_trial_index", false]], "get_best_parameters() (ax.benchmark.benchmark_method.benchmarkmethod method)": [[2, "ax.benchmark.benchmark_method.BenchmarkMethod.get_best_parameters", false]], "get_best_parameters() (ax.service.utils.best_point_mixin.bestpointmixin method)": [[15, "ax.service.utils.best_point_mixin.BestPointMixin.get_best_parameters", false]], "get_best_parameters() (in module ax.service.utils.best_point)": [[15, "ax.service.utils.best_point.get_best_parameters", false]], "get_best_parameters_from_model_predictions() (in module ax.service.utils.best_point)": [[15, "ax.service.utils.best_point.get_best_parameters_from_model_predictions", false]], "get_best_parameters_from_model_predictions_with_trial_index() (in module ax.service.utils.best_point)": [[15, "ax.service.utils.best_point.get_best_parameters_from_model_predictions_with_trial_index", false]], "get_best_parameters_with_trial_index() (in module ax.service.utils.best_point)": [[15, "ax.service.utils.best_point.get_best_parameters_with_trial_index", false]], "get_best_point() (ax.service.managed_loop.optimizationloop method)": [[15, "ax.service.managed_loop.OptimizationLoop.get_best_point", false]], "get_best_raw_objective_point() (in module ax.service.utils.best_point)": [[15, "ax.service.utils.best_point.get_best_raw_objective_point", false]], "get_best_raw_objective_point_with_trial_index() (in module ax.service.utils.best_point)": [[15, "ax.service.utils.best_point.get_best_raw_objective_point_with_trial_index", false]], "get_best_trial() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_best_trial", false]], "get_best_trial() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.get_best_trial", false]], "get_best_trial() (ax.service.utils.best_point_mixin.bestpointmixin method)": [[15, "ax.service.utils.best_point_mixin.BestPointMixin.get_best_trial", false]], "get_botorch() (in module ax.modelbridge.factory)": [[10, "ax.modelbridge.factory.get_botorch", false]], "get_botorch_model() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_botorch_model", false]], "get_botorch_model_with_default_acquisition_class() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_botorch_model_with_default_acquisition_class", false]], "get_botorch_model_with_surrogate_spec() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_botorch_model_with_surrogate_spec", false]], "get_botorch_model_with_surrogate_specs() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_botorch_model_with_surrogate_specs", false]], "get_botorch_objective_and_transform() (ax.models.torch.botorch_modular.acquisition.acquisition method)": [[11, "ax.models.torch.botorch_modular.acquisition.Acquisition.get_botorch_objective_and_transform", false]], "get_botorch_objective_and_transform() (in module ax.models.torch.utils)": [[11, "ax.models.torch.utils.get_botorch_objective_and_transform", false]], "get_branin_arms() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_arms", false]], "get_branin_data() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_data", false]], "get_branin_data_batch() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_data_batch", false]], "get_branin_data_multi_objective() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_data_multi_objective", false]], "get_branin_experiment() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_experiment", false]], "get_branin_experiment_with_multi_objective() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_experiment_with_multi_objective", false]], "get_branin_experiment_with_status_quo_trials() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_experiment_with_status_quo_trials", false]], "get_branin_experiment_with_timestamp_map_metric() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_experiment_with_timestamp_map_metric", false]], "get_branin_metric() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_metric", false]], "get_branin_multi_objective() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_multi_objective", false]], "get_branin_multi_objective_optimization_config() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_multi_objective_optimization_config", false]], "get_branin_objective() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_objective", false]], "get_branin_optimization_config() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_optimization_config", false]], "get_branin_outcome_constraint() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_outcome_constraint", false]], "get_branin_search_space() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_search_space", false]], "get_branin_with_multi_task() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_branin_with_multi_task", false]], "get_chained_input_transform() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_chained_input_transform", false]], "get_children_metrics_by_name() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.get_children_metrics_by_name", false]], "get_choice_parameter() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_choice_parameter", false]], "get_color() (in module ax.plot.table_view)": [[12, "ax.plot.table_view.get_color", false]], "get_constraint_violated_probabilities() (in module ax.analysis.plotly.utils)": [[0, "ax.analysis.plotly.utils.get_constraint_violated_probabilities", false]], "get_continuous_search_space() (in module ax.benchmark.benchmark_problem)": [[2, "ax.benchmark.benchmark_problem.get_continuous_search_space", false]], "get_contour_plot() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_contour_plot", false]], "get_current_model() (ax.service.managed_loop.optimizationloop method)": [[15, "ax.service.managed_loop.OptimizationLoop.get_current_model", false]], "get_current_trial_generation_limit() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_current_trial_generation_limit", false]], "get_custom_multi_objective() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_custom_multi_objective", false]], "get_data() (in module ax.modelbridge.transforms.utils)": [[10, "ax.modelbridge.transforms.utils.get_data", false]], "get_data() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_data", false]], "get_dataset() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_dataset", false]], "get_default_db_settings() (ax.service.scheduler.scheduler class method)": [[15, "ax.service.scheduler.Scheduler.get_default_db_settings", false]], "get_default_scheduler_options() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_default_scheduler_options", false]], "get_discrete_ackley() (in module ax.benchmark.problems.synthetic.discretized.mixed_integer)": [[2, "ax.benchmark.problems.synthetic.discretized.mixed_integer.get_discrete_ackley", false]], "get_discrete_hartmann() (in module ax.benchmark.problems.synthetic.discretized.mixed_integer)": [[2, "ax.benchmark.problems.synthetic.discretized.mixed_integer.get_discrete_hartmann", false]], "get_discrete_rosenbrock() (in module ax.benchmark.problems.synthetic.discretized.mixed_integer)": [[2, "ax.benchmark.problems.synthetic.discretized.mixed_integer.get_discrete_rosenbrock", false]], "get_discrete_search_space() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_discrete_search_space", false]], "get_early_stopping_metrics() (in module ax.service.utils.early_stopping)": [[15, "ax.service.utils.early_stopping.get_early_stopping_metrics", false]], "get_ehvi() (in module ax.models.torch.botorch_moo_defaults)": [[11, "ax.models.torch.botorch_moo_defaults.get_EHVI", false]], "get_empirical_bayes_thompson() (in module ax.modelbridge.factory)": [[10, "ax.modelbridge.factory.get_empirical_bayes_thompson", false]], "get_engine() (in module ax.storage.sqa_store.db)": [[16, "ax.storage.sqa_store.db.get_engine", false]], "get_enum_name() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.get_enum_name", false]], "get_enum_value() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.get_enum_value", false]], "get_experiment() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_experiment", false]], "get_experiment_for_value() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_experiment_for_value", false]], "get_experiment_with_batch_and_single_trial() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_experiment_with_batch_and_single_trial", false]], "get_experiment_with_batch_trial() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_experiment_with_batch_trial", false]], "get_experiment_with_custom_runner_and_metric() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_experiment_with_custom_runner_and_metric", false]], "get_experiment_with_data() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_experiment_with_data", false]], "get_experiment_with_map_data() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_experiment_with_map_data", false]], "get_experiment_with_map_data_type() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_experiment_with_map_data_type", false]], "get_experiment_with_multi_objective() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_experiment_with_multi_objective", false]], "get_experiment_with_observations() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_experiment_with_observations", false]], "get_experiment_with_repeated_arms() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_experiment_with_repeated_arms", false]], "get_experiment_with_scalarized_objective_and_outcome_constraint() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_experiment_with_scalarized_objective_and_outcome_constraint", false]], "get_experiment_with_trial() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_experiment_with_trial", false]], "get_experiment_with_trial_with_ttl() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_experiment_with_trial_with_ttl", false]], "get_factorial() (in module ax.modelbridge.factory)": [[10, "ax.modelbridge.factory.get_factorial", false]], "get_factorial_experiment() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_factorial_experiment", false]], "get_factorial_metric() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_factorial_metric", false]], "get_factorial_search_space() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_factorial_search_space", false]], "get_feature_cols() (in module ax.core.observation)": [[3, "ax.core.observation.get_feature_cols", false]], "get_feature_importances() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_feature_importances", false]], "get_feature_importances_from_botorch_model() (in module ax.models.torch.botorch)": [[11, "ax.models.torch.botorch.get_feature_importances_from_botorch_model", false]], "get_figure() (ax.analysis.plotly.plotly_analysis.plotlyanalysiscard method)": [[0, "ax.analysis.plotly.plotly_analysis.PlotlyAnalysisCard.get_figure", false]], "get_figure_and_callback() (in module ax.service.utils.report_utils)": [[15, "ax.service.utils.report_utils.get_figure_and_callback", false]], "get_fit_and_std_quality_and_generalization_dict() (in module ax.modelbridge.cross_validation)": [[10, "ax.modelbridge.cross_validation.get_fit_and_std_quality_and_generalization_dict", false]], "get_fitted_model_bridge() (in module ax.service.scheduler)": [[15, "ax.service.scheduler.get_fitted_model_bridge", false]], "get_fixed_features() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.get_fixed_features", false]], "get_fixed_features_from_experiment() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.get_fixed_features_from_experiment", false]], "get_fixed_parameter() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_fixed_parameter", false]], "get_fixed_values() (in module ax.plot.helper)": [[12, "ax.plot.helper.get_fixed_values", false]], "get_function_argument_names() (in module ax.utils.common.kwargs)": [[18, "ax.utils.common.kwargs.get_function_argument_names", false]], "get_function_default_arguments() (in module ax.utils.common.kwargs)": [[18, "ax.utils.common.kwargs.get_function_default_arguments", false]], "get_gamma_prior() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_gamma_prior", false]], "get_generation_strategy() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_generation_strategy", false]], "get_generation_strategy_id() (in module ax.storage.sqa_store.load)": [[16, "ax.storage.sqa_store.load.get_generation_strategy_id", false]], "get_generation_strategy_sqa() (in module ax.storage.sqa_store.load)": [[16, "ax.storage.sqa_store.load.get_generation_strategy_sqa", false]], "get_generation_strategy_sqa_reduced_state() (in module ax.storage.sqa_store.load)": [[16, "ax.storage.sqa_store.load.get_generation_strategy_sqa_reduced_state", false]], "get_generator_run() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_generator_run", false]], "get_generator_run2() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_generator_run2", false]], "get_generator_runs_by_id() (in module ax.storage.sqa_store.load)": [[16, "ax.storage.sqa_store.load.get_generator_runs_by_id", false]], "get_grid_for_parameter() (in module ax.plot.helper)": [[12, "ax.plot.helper.get_grid_for_parameter", false]], "get_hartmann_metric() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_hartmann_metric", false]], "get_hartmann_search_space() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_hartmann_search_space", false]], "get_hierarchical_search_space() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_hierarchical_search_space", false]], "get_hierarchical_search_space_experiment() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_hierarchical_search_space_experiment", false]], "get_high_dimensional_branin_experiment() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_high_dimensional_branin_experiment", false]], "get_hss_trials_with_fixed_parameter() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_hss_trials_with_fixed_parameter", false]], "get_hypervolume() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_hypervolume", false]], "get_hypervolume() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.get_hypervolume", false]], "get_hypervolume() (ax.service.utils.best_point_mixin.bestpointmixin method)": [[15, "ax.service.utils.best_point_mixin.BestPointMixin.get_hypervolume", false]], "get_improvement_global_stopping_strategy() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_improvement_global_stopping_strategy", false]], "get_improvement_over_baseline() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.get_improvement_over_baseline", false]], "get_input_transform_json_components() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.get_input_transform_json_components", false]], "get_input_transform_type() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_input_transform_type", false]], "get_interval() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_interval", false]], "get_jenatton_benchmark_problem() (in module ax.benchmark.problems.synthetic.hss.jenatton)": [[2, "ax.benchmark.problems.synthetic.hss.jenatton.get_jenatton_benchmark_problem", false]], "get_kxx_dx() (in module ax.utils.sensitivity.derivative_gp)": [[18, "ax.utils.sensitivity.derivative_gp.get_KxX_dx", false]], "get_kxx_dx2() (in module ax.utils.sensitivity.derivative_gp)": [[18, "ax.utils.sensitivity.derivative_gp.get_Kxx_dx2", false]], "get_kxx_inv() (in module ax.utils.sensitivity.derivative_gp)": [[18, "ax.utils.sensitivity.derivative_gp.get_KXX_inv", false]], "get_l2_reg_weight_parameter() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_l2_reg_weight_parameter", false]], "get_large_factorial_search_space() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_large_factorial_search_space", false]], "get_large_ordinal_search_space() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_large_ordinal_search_space", false]], "get_legacy_list_surrogate_generation_step_as_dict() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_legacy_list_surrogate_generation_step_as_dict", false]], "get_logger() (in module ax.utils.common.logger)": [[18, "ax.utils.common.logger.get_logger", false]], "get_lr_parameter() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_lr_parameter", false]], "get_many_branin_objective_opt_config() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_many_branin_objective_opt_config", false]], "get_map_data() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_map_data", false]], "get_map_key_info() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_map_key_info", false]], "get_map_metric() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_map_metric", false]], "get_map_model() (in module ax.models.torch.cbo_lcea)": [[11, "ax.models.torch.cbo_lcea.get_map_model", false]], "get_map_objective() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_map_objective", false]], "get_map_optimization_config() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_map_optimization_config", false]], "get_markdown() (ax.analysis.markdown.markdown_analysis.markdownanalysiscard method)": [[0, "ax.analysis.markdown.markdown_analysis.MarkdownAnalysisCard.get_markdown", false]], "get_max_parallelism() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_max_parallelism", false]], "get_metric() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_metric", false]], "get_metric_index() (in module ax.modelbridge.transforms.relativize)": [[10, "ax.modelbridge.transforms.relativize.get_metric_index", false]], "get_metric_mean() (ax.core.trial.trial method)": [[3, "ax.core.trial.Trial.get_metric_mean", false]], "get_metric_type_and_properties() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.get_metric_type_and_properties", false]], "get_missing_metrics() (in module ax.core.utils)": [[3, "ax.core.utils.get_missing_metrics", false]], "get_missing_metrics_by_name() (in module ax.core.utils)": [[3, "ax.core.utils.get_missing_metrics_by_name", false]], "get_mll_type() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_mll_type", false]], "get_model_config_from_deprecated_args() (in module ax.models.torch.botorch_modular.surrogate)": [[11, "ax.models.torch.botorch_modular.surrogate.get_model_config_from_deprecated_args", false]], "get_model_covariance() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_model_covariance", false]], "get_model_from_generator_run() (in module ax.modelbridge.registry)": [[10, "ax.modelbridge.registry.get_model_from_generator_run", false]], "get_model_mean() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_model_mean", false]], "get_model_parameter() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_model_parameter", false]], "get_model_predictions() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_model_predictions", false]], "get_model_predictions() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_model_predictions", false]], "get_model_predictions_for_parameterizations() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_model_predictions_for_parameterizations", false]], "get_model_predictions_per_arm() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_model_predictions_per_arm", false]], "get_model_times() (in module ax.core.utils)": [[3, "ax.core.utils.get_model_times", false]], "get_model_trace_of_times() (in module ax.core.utils)": [[3, "ax.core.utils.get_model_trace_of_times", false]], "get_model_type() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_model_type", false]], "get_moo_opt_config_and_outcome_names() (in module ax.benchmark.benchmark_problem)": [[2, "ax.benchmark.benchmark_problem.get_moo_opt_config_and_outcome_names", false]], "get_moo_surrogate() (in module ax.utils.testing.benchmark_stubs)": [[18, "ax.utils.testing.benchmark_stubs.get_moo_surrogate", false]], "get_multi_objective() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_multi_objective", false]], "get_multi_objective_benchmark_problem() (in module ax.utils.testing.benchmark_stubs)": [[18, "ax.utils.testing.benchmark_stubs.get_multi_objective_benchmark_problem", false]], "get_multi_objective_optimization_config() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_multi_objective_optimization_config", false]], "get_multi_type_experiment() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_multi_type_experiment", false]], "get_multi_type_experiment_with_multi_objective() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_multi_type_experiment_with_multi_objective", false]], "get_nehvi() (in module ax.models.torch.botorch_moo_defaults)": [[11, "ax.models.torch.botorch_moo_defaults.get_NEHVI", false]], "get_nei() (in module ax.models.torch.botorch_defaults)": [[11, "ax.models.torch.botorch_defaults.get_NEI", false]], "get_next_candidate() (ax.modelbridge.external_generation_node.externalgenerationnode method)": [[10, "ax.modelbridge.external_generation_node.ExternalGenerationNode.get_next_candidate", false]], "get_next_trial() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_next_trial", false]], "get_next_trials() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_next_trials", false]], "get_noise_stds() (ax.benchmark.benchmark_runner.benchmarkrunner method)": [[2, "ax.benchmark.benchmark_runner.BenchmarkRunner.get_noise_stds", false]], "get_non_monolithic_branin_moo_data() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_non_monolithic_branin_moo_data", false]], "get_num_boost_rounds_parameter() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_num_boost_rounds_parameter", false]], "get_objective() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_objective", false]], "get_objective_threshold() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_objective_threshold", false]], "get_observation() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_observation", false]], "get_observation1() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_observation1", false]], "get_observation1trans() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_observation1trans", false]], "get_observation2() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_observation2", false]], "get_observation2trans() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_observation2trans", false]], "get_observation_features() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_observation_features", false]], "get_observation_status_quo0() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_observation_status_quo0", false]], "get_observation_status_quo1() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_observation_status_quo1", false]], "get_observations_with_invalid_value() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_observations_with_invalid_value", false]], "get_observed() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.get_observed", false]], "get_observed_pareto_frontiers() (in module ax.plot.pareto_utils)": [[12, "ax.plot.pareto_utils.get_observed_pareto_frontiers", false]], "get_online_sobol_mbm_generation_strategy() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_online_sobol_mbm_generation_strategy", false]], "get_optimization_config() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_optimization_config", false]], "get_optimization_config_no_constraints() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_optimization_config_no_constraints", false]], "get_optimization_trace() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_optimization_trace", false]], "get_or_early_stopping_strategy() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_or_early_stopping_strategy", false]], "get_oracle_experiment_from_experiment() (ax.benchmark.benchmark_problem.benchmarkproblem method)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.get_oracle_experiment_from_experiment", false]], "get_oracle_experiment_from_params() (ax.benchmark.benchmark_problem.benchmarkproblem method)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.get_oracle_experiment_from_params", false]], "get_order_constraint() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_order_constraint", false]], "get_ordered_choice_parameter() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_ordered_choice_parameter", false]], "get_outcome_constraint() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_outcome_constraint", false]], "get_outcome_transform_json_components() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.get_outcome_transform_json_components", false]], "get_outcome_transfrom_type() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_outcome_transfrom_type", false]], "get_parameter_constraint() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_parameter_constraint", false]], "get_parameter_distribution() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_parameter_distribution", false]], "get_pareto_frontier_and_configs() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.get_pareto_frontier_and_configs", false]], "get_pareto_optimal_parameters() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_pareto_optimal_parameters", false]], "get_pareto_optimal_parameters() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.get_pareto_optimal_parameters", false]], "get_pareto_optimal_parameters() (ax.service.utils.best_point_mixin.bestpointmixin method)": [[15, "ax.service.utils.best_point_mixin.BestPointMixin.get_pareto_optimal_parameters", false]], "get_pareto_optimal_parameters() (in module ax.service.utils.best_point)": [[15, "ax.service.utils.best_point.get_pareto_optimal_parameters", false]], "get_partition_data_loaders() (in module ax.utils.tutorials.cnn_utils)": [[18, "ax.utils.tutorials.cnn_utils.get_partition_data_loaders", false]], "get_pathlib_path() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_pathlib_path", false]], "get_pbo_experiment() (in module ax.utils.testing.preference_stubs)": [[18, "ax.utils.testing.preference_stubs.get_pbo_experiment", false]], "get_pending_observation_features() (in module ax.core.utils)": [[3, "ax.core.utils.get_pending_observation_features", false]], "get_pending_observation_features_based_on_trial_status() (in module ax.core.utils)": [[3, "ax.core.utils.get_pending_observation_features_based_on_trial_status", false]], "get_percentile_early_stopping_strategy() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_percentile_early_stopping_strategy", false]], "get_percentile_early_stopping_strategy_with_non_objective_metric_name() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_percentile_early_stopping_strategy_with_non_objective_metric_name", false]], "get_plot_data() (in module ax.plot.helper)": [[12, "ax.plot.helper.get_plot_data", false]], "get_predictions_by_arm() (in module ax.analysis.plotly.arm_effects.utils)": [[0, "ax.analysis.plotly.arm_effects.utils.get_predictions_by_arm", false]], "get_problem() (in module ax.benchmark.problems.registry)": [[2, "ax.benchmark.problems.registry.get_problem", false]], "get_pytorch_cnn_torchvision_benchmark_problem() (in module ax.benchmark.problems.hpo.torchvision)": [[2, "ax.benchmark.problems.hpo.torchvision.get_pytorch_cnn_torchvision_benchmark_problem", false]], "get_qei() (in module ax.models.torch.botorch_defaults)": [[11, "ax.models.torch.botorch_defaults.get_qEI", false]], "get_qlogehvi() (in module ax.models.torch.botorch_moo_defaults)": [[11, "ax.models.torch.botorch_moo_defaults.get_qLogEHVI", false]], "get_qlogei() (in module ax.models.torch.botorch_defaults)": [[11, "ax.models.torch.botorch_defaults.get_qLogEI", false]], "get_qlognehvi() (in module ax.models.torch.botorch_moo_defaults)": [[11, "ax.models.torch.botorch_moo_defaults.get_qLogNEHVI", false]], "get_qlognei() (in module ax.models.torch.botorch_defaults)": [[11, "ax.models.torch.botorch_defaults.get_qLogNEI", false]], "get_query_options_to_defer_immutable_duplicates() (in module ax.storage.sqa_store.reduced_state)": [[16, "ax.storage.sqa_store.reduced_state.get_query_options_to_defer_immutable_duplicates", false]], "get_query_options_to_defer_large_model_cols() (in module ax.storage.sqa_store.reduced_state)": [[16, "ax.storage.sqa_store.reduced_state.get_query_options_to_defer_large_model_cols", false]], "get_range_parameter() (in module ax.plot.helper)": [[12, "ax.plot.helper.get_range_parameter", false]], "get_range_parameter() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_range_parameter", false]], "get_range_parameter2() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_range_parameter2", false]], "get_range_parameters() (in module ax.plot.helper)": [[12, "ax.plot.helper.get_range_parameters", false]], "get_range_parameters_from_list() (in module ax.plot.helper)": [[12, "ax.plot.helper.get_range_parameters_from_list", false]], "get_recommended_max_parallelism() (ax.service.ax_client.axclient static method)": [[15, "ax.service.ax_client.AxClient.get_recommended_max_parallelism", false]], "get_risk_measure() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_risk_measure", false]], "get_robust_branin_experiment() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_robust_branin_experiment", false]], "get_robust_search_space() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_robust_search_space", false]], "get_robust_search_space_environmental() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_robust_search_space_environmental", false]], "get_rounding_func() (in module ax.models.torch.botorch)": [[11, "ax.models.torch.botorch.get_rounding_func", false]], "get_running_trials_per_minute() (in module ax.plot.trace)": [[12, "ax.plot.trace.get_running_trials_per_minute", false]], "get_scalarized_objective() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_scalarized_objective", false]], "get_scalarized_outcome_constraint() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_scalarized_outcome_constraint", false]], "get_scheduler_options_batch_trial() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_scheduler_options_batch_trial", false]], "get_search_space() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_search_space", false]], "get_search_space_for_range_value() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_search_space_for_range_value", false]], "get_search_space_for_range_values() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_search_space_for_range_values", false]], "get_search_space_for_value() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_search_space_for_value", false]], "get_search_space_with_choice_parameters() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_search_space_with_choice_parameters", false]], "get_sebo_acquisition_class() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_sebo_acquisition_class", false]], "get_session() (in module ax.storage.sqa_store.db)": [[16, "ax.storage.sqa_store.db.get_session", false]], "get_sim_trial_by_index() (ax.utils.testing.backend_simulator.backendsimulator method)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.get_sim_trial_by_index", false]], "get_single_objective_benchmark_problem() (in module ax.utils.testing.benchmark_stubs)": [[18, "ax.utils.testing.benchmark_stubs.get_single_objective_benchmark_problem", false]], "get_small_discrete_search_space() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_small_discrete_search_space", false]], "get_sobol() (in module ax.modelbridge.factory)": [[10, "ax.modelbridge.factory.get_sobol", false]], "get_sobol_benchmark_method() (in module ax.benchmark.methods.sobol)": [[2, "ax.benchmark.methods.sobol.get_sobol_benchmark_method", false]], "get_sobol_botorch_modular_acquisition() (in module ax.benchmark.methods.modular_botorch)": [[2, "ax.benchmark.methods.modular_botorch.get_sobol_botorch_modular_acquisition", false]], "get_sobol_gpei_benchmark_method() (in module ax.utils.testing.benchmark_stubs)": [[18, "ax.utils.testing.benchmark_stubs.get_sobol_gpei_benchmark_method", false]], "get_soo_config_and_outcome_names() (in module ax.benchmark.benchmark_problem)": [[2, "ax.benchmark.benchmark_problem.get_soo_config_and_outcome_names", false]], "get_soo_surrogate() (in module ax.utils.testing.benchmark_stubs)": [[18, "ax.utils.testing.benchmark_stubs.get_soo_surrogate", false]], "get_soo_surrogate_test_function() (in module ax.utils.testing.benchmark_stubs)": [[18, "ax.utils.testing.benchmark_stubs.get_soo_surrogate_test_function", false]], "get_standard_plots() (in module ax.service.utils.report_utils)": [[15, "ax.service.utils.report_utils.get_standard_plots", false]], "get_status() (ax.analysis.healthcheck.healthcheck_analysis.healthcheckanalysiscard method)": [[0, "ax.analysis.healthcheck.healthcheck_analysis.HealthcheckAnalysisCard.get_status", false]], "get_status_quo() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_status_quo", false]], "get_subset_datasets() (in module ax.models.torch.botorch_modular.utils)": [[11, "ax.models.torch.botorch_modular.utils.get_subset_datasets", false]], "get_sum_constraint1() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_sum_constraint1", false]], "get_sum_constraint2() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_sum_constraint2", false]], "get_surrogate() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_surrogate", false]], "get_surrogate_and_datasets (ax.benchmark.benchmark_test_functions.surrogate.surrogatetestfunction attribute)": [[2, "ax.benchmark.benchmark_test_functions.surrogate.SurrogateTestFunction.get_surrogate_and_datasets", false]], "get_surrogate_as_dict() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_surrogate_as_dict", false]], "get_surrogate_generation_step() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_surrogate_generation_step", false]], "get_surrogate_spec_as_dict() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_surrogate_spec_as_dict", false]], "get_surrogate_spec_with_default() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_surrogate_spec_with_default", false]], "get_surrogate_spec_with_lognormal() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_surrogate_spec_with_lognormal", false]], "get_synthetic_runner() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_synthetic_runner", false]], "get_target_trial_index() (in module ax.core.utils)": [[3, "ax.core.utils.get_target_trial_index", false]], "get_task_choice_parameter() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_task_choice_parameter", false]], "get_tensor_converter_model() (in module ax.plot.pareto_utils)": [[12, "ax.plot.pareto_utils.get_tensor_converter_model", false]], "get_test_map_data_experiment() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_test_map_data_experiment", false]], "get_thompson() (in module ax.modelbridge.factory)": [[10, "ax.modelbridge.factory.get_thompson", false]], "get_threshold_early_stopping_strategy() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_threshold_early_stopping_strategy", false]], "get_to_new_sq_transform_type() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_to_new_sq_transform_type", false]], "get_torch_test_data() (in module ax.utils.testing.torch_stubs)": [[18, "ax.utils.testing.torch_stubs.get_torch_test_data", false]], "get_trace() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_trace", false]], "get_trace() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.get_trace", false]], "get_trace() (ax.service.utils.best_point_mixin.bestpointmixin method)": [[15, "ax.service.utils.best_point_mixin.BestPointMixin.get_trace", false]], "get_trace_by_progression() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_trace_by_progression", false]], "get_trace_by_progression() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.get_trace_by_progression", false]], "get_trace_by_progression() (ax.service.utils.best_point_mixin.bestpointmixin method)": [[15, "ax.service.utils.best_point_mixin.BestPointMixin.get_trace_by_progression", false]], "get_training_data() (ax.early_stopping.strategies.base.modelbasedearlystoppingstrategy method)": [[4, "ax.early_stopping.strategies.base.ModelBasedEarlyStoppingStrategy.get_training_data", false]], "get_training_data() (ax.modelbridge.base.modelbridge method)": [[10, "ax.modelbridge.base.ModelBridge.get_training_data", false]], "get_transform_helper_model() (in module ax.early_stopping.strategies.base)": [[4, "ax.early_stopping.strategies.base.get_transform_helper_model", false]], "get_transform_type() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.get_transform_type", false]], "get_trial() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_trial", false]], "get_trial() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_trial", false]], "get_trial_based_criterion() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_trial_based_criterion", false]], "get_trial_indices_for_statuses() (in module ax.core.multi_type_experiment)": [[3, "ax.core.multi_type_experiment.get_trial_indices_for_statuses", false]], "get_trial_parameters() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_trial_parameters", false]], "get_trials_by_indices() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.get_trials_by_indices", false]], "get_trials_data_frame() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.get_trials_data_frame", false]], "get_uniform() (in module ax.modelbridge.factory)": [[10, "ax.modelbridge.factory.get_uniform", false]], "get_unique_identifier() (in module ax.telemetry.common)": [[17, "ax.telemetry.common.get_unique_identifier", false]], "get_warping_transform() (in module ax.models.torch.botorch_defaults)": [[11, "ax.models.torch.botorch_defaults.get_warping_transform", false]], "get_weighted_mc_objective_and_objective_thresholds() (in module ax.models.torch.botorch_moo_defaults)": [[11, "ax.models.torch.botorch_moo_defaults.get_weighted_mc_objective_and_objective_thresholds", false]], "get_weights() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_weights", false]], "get_weights_from_dict() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_weights_from_dict", false]], "get_winsorization_config() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.get_winsorization_config", false]], "get_y_true() (ax.benchmark.benchmark_runner.benchmarkrunner method)": [[2, "ax.benchmark.benchmark_runner.BenchmarkRunner.get_Y_true", false]], "global_stopping_strategy (ax.service.ax_client.axclient property)": [[15, "ax.service.ax_client.AxClient.global_stopping_strategy", false]], "global_stopping_strategy (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.global_stopping_strategy", false], [15, "id9", false]], "global_stopping_strategy_cls (ax.telemetry.ax_client.axclientcreatedrecord attribute)": [[17, "ax.telemetry.ax_client.AxClientCreatedRecord.global_stopping_strategy_cls", false]], "global_stopping_strategy_cls (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.global_stopping_strategy_cls", false]], "global_stopping_strategy_cls (ax.telemetry.scheduler.schedulercreatedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCreatedRecord.global_stopping_strategy_cls", false]], "good_fit_metrics_to_fisher_score (ax.modelbridge.cross_validation.assessmodelfitresult attribute)": [[10, "ax.modelbridge.cross_validation.AssessModelFitResult.good_fit_metrics_to_fisher_score", false]], "gpdgsmgpmean (class in ax.utils.sensitivity.derivative_measures)": [[18, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean", false]], "gpdgsmgpsampling (class in ax.utils.sensitivity.derivative_measures)": [[18, "ax.utils.sensitivity.derivative_measures.GpDGSMGpSampling", false]], "gpytorch_component_registry (in module ax.storage.botorch_modular_registry)": [[16, "ax.storage.botorch_modular_registry.GPYTORCH_COMPONENT_REGISTRY", false]], "gradient_absolute_measure() (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean method)": [[18, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.gradient_absolute_measure", false]], "gradient_measure() (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean method)": [[18, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.gradient_measure", false]], "gradients_square_measure() (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean method)": [[18, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.gradients_square_measure", false]], "h2_html() (in module ax.utils.report.render)": [[18, "ax.utils.report.render.h2_html", false]], "h3_html() (in module ax.utils.report.render)": [[18, "ax.utils.report.render.h3_html", false]], "handle_exceptions_in_retries() (in module ax.utils.common.executils)": [[18, "ax.utils.common.executils.handle_exceptions_in_retries", false]], "hartmann6 (class in ax.utils.measurement.synthetic_functions)": [[18, "ax.utils.measurement.synthetic_functions.Hartmann6", false]], "hartmann6metric (class in ax.metrics.hartmann6)": [[9, "ax.metrics.hartmann6.Hartmann6Metric", false]], "has_good_opt_config_model_fit() (in module ax.modelbridge.cross_validation)": [[10, "ax.modelbridge.cross_validation.has_good_opt_config_model_fit", false]], "has_name (ax.core.arm.arm property)": [[3, "ax.core.arm.Arm.has_name", false]], "has_name (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.has_name", false]], "healthcheckanalysis (class in ax.analysis.healthcheck.healthcheck_analysis)": [[0, "ax.analysis.healthcheck.healthcheck_analysis.HealthcheckAnalysis", false]], "healthcheckanalysiscard (class in ax.analysis.healthcheck.healthcheck_analysis)": [[0, "ax.analysis.healthcheck.healthcheck_analysis.HealthcheckAnalysisCard", false]], "healthcheckstatus (class in ax.analysis.healthcheck.healthcheck_analysis)": [[0, "ax.analysis.healthcheck.healthcheck_analysis.HealthcheckStatus", false]], "hierarchical_tree_height (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.hierarchical_tree_height", false]], "hierarchical_tree_height (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.hierarchical_tree_height", false]], "high (ax.analysis.analysis.analysiscardlevel attribute)": [[0, "ax.analysis.analysis.AnalysisCardLevel.HIGH", false]], "html (ax.plot.base.axplottypes attribute)": [[12, "ax.plot.base.AxPlotTypes.HTML", false]], "hypervolume() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.hypervolume", false]], "immutabilityerror": [[5, "ax.exceptions.storage.ImmutabilityError", false]], "immutable_once_run() (in module ax.core.base_trial)": [[3, "ax.core.base_trial.immutable_once_run", false]], "immutable_search_space_and_opt_conf (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.IMMUTABLE_SEARCH_SPACE_AND_OPT_CONF", false]], "immutable_search_space_and_opt_config (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.immutable_search_space_and_opt_config", false]], "impl (ax.storage.sqa_store.json.jsonencodedlongtext attribute)": [[16, "ax.storage.sqa_store.json.JSONEncodedLongText.impl", false]], "impl (ax.storage.sqa_store.json.jsonencodedmediumtext attribute)": [[16, "ax.storage.sqa_store.json.JSONEncodedMediumText.impl", false]], "impl (ax.storage.sqa_store.json.jsonencodedobject attribute)": [[16, "ax.storage.sqa_store.json.JSONEncodedObject.impl", false]], "impl (ax.storage.sqa_store.sqa_enum.stringenum attribute)": [[16, "ax.storage.sqa_store.sqa_enum.StringEnum.impl", false]], "improvement_global_stopping_strategy_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.improvement_global_stopping_strategy_to_dict", false]], "improvement_over_baseline (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.improvement_over_baseline", false]], "improvement_over_baseline (ax.telemetry.scheduler.schedulercompletedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCompletedRecord.improvement_over_baseline", false]], "improvementglobalstoppingstrategy (class in ax.global_stopping.strategies.improvement)": [[6, "ax.global_stopping.strategies.improvement.ImprovementGlobalStoppingStrategy", false]], "in_design_arms (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.in_design_arms", false]], "in_sample (ax.plot.base.plotdata attribute)": [[12, "ax.plot.base.PlotData.in_sample", false]], "incompatibledependencyversion": [[5, "ax.exceptions.core.IncompatibleDependencyVersion", false]], "incorrectdbconfigurationerror": [[5, "ax.exceptions.storage.IncorrectDBConfigurationError", false]], "index (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.index", false]], "index (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.index", false]], "index (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.index", false]], "indices (ax.models.torch.utils.subsetmodeldata attribute)": [[11, "ax.models.torch.utils.SubsetModelData.indices", false]], "infer_is_relative() (in module ax.plot.helper)": [[12, "ax.plot.helper.infer_is_relative", false]], "infer_objective_thresholds() (ax.modelbridge.torch.torchmodelbridge method)": [[10, "ax.modelbridge.torch.TorchModelBridge.infer_objective_thresholds", false]], "infer_objective_thresholds() (in module ax.models.torch.botorch_moo_defaults)": [[11, "ax.models.torch.botorch_moo_defaults.infer_objective_thresholds", false]], "infer_reference_point_from_experiment() (in module ax.plot.pareto_utils)": [[12, "ax.plot.pareto_utils.infer_reference_point_from_experiment", false]], "inference_trace (ax.benchmark.benchmark_result.benchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.BenchmarkResult.inference_trace", false]], "informative_failure_on_none() (ax.utils.measurement.synthetic_functions.syntheticfunction method)": [[18, "ax.utils.measurement.synthetic_functions.SyntheticFunction.informative_failure_on_none", false]], "init_engine() (ax.models.random.sobol.sobolgenerator method)": [[11, "ax.models.random.sobol.SobolGenerator.init_engine", false]], "init_engine_and_session_factory() (in module ax.storage.sqa_store.db)": [[16, "ax.storage.sqa_store.db.init_engine_and_session_factory", false]], "init_notebook_plotting() (in module ax.utils.notebook.plotting)": [[18, "ax.utils.notebook.plotting.init_notebook_plotting", false]], "init_position (ax.models.random.base.randommodel attribute)": [[11, "ax.models.random.base.RandomModel.init_position", false]], "init_seconds_between_polls (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.init_seconds_between_polls", false], [15, "id10", false]], "init_test_engine_and_session_factory() (in module ax.storage.sqa_store.db)": [[16, "ax.storage.sqa_store.db.init_test_engine_and_session_factory", false]], "inittest (class in ax.utils.testing.test_init_files)": [[18, "ax.utils.testing.test_init_files.InitTest", false]], "input_constructors (ax.modelbridge.generation_node.generationnode property)": [[10, "ax.modelbridge.generation_node.GenerationNode.input_constructors", false]], "input_transform_classes (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.input_transform_classes", false]], "input_transform_classes (ax.models.torch.botorch_modular.utils.modelconfig attribute)": [[11, "ax.models.torch.botorch_modular.utils.ModelConfig.input_transform_classes", false]], "input_transform_options (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.input_transform_options", false]], "input_transform_options (ax.models.torch.botorch_modular.utils.modelconfig attribute)": [[11, "ax.models.torch.botorch_modular.utils.ModelConfig.input_transform_options", false]], "input_transform_registry (in module ax.storage.botorch_modular_registry)": [[16, "ax.storage.botorch_modular_registry.INPUT_TRANSFORM_REGISTRY", false]], "input_transform_type_from_json() (in module ax.storage.json_store.decoders)": [[16, "ax.storage.json_store.decoders.input_transform_type_from_json", false]], "insampleeffectsplot (class in ax.analysis.plotly.arm_effects.insample_effects)": [[0, "ax.analysis.plotly.arm_effects.insample_effects.InSampleEffectsPlot", false]], "instantiationbase (class in ax.service.utils.instantiation)": [[15, "ax.service.utils.instantiation.InstantiationBase", false]], "int (ax.core.parameter.parametertype attribute)": [[3, "ax.core.parameter.ParameterType.INT", false]], "int (ax.preview.api.configs.parametertype attribute)": [[13, "ax.preview.api.configs.ParameterType.INT", false]], "intenum (class in ax.storage.sqa_store.sqa_enum)": [[16, "ax.storage.sqa_store.sqa_enum.IntEnum", false]], "interact_batch_comparison() (in module ax.plot.diagnostic)": [[12, "ax.plot.diagnostic.interact_batch_comparison", false]], "interact_contour (ax.plot.base.axplottypes attribute)": [[12, "ax.plot.base.AxPlotTypes.INTERACT_CONTOUR", false]], "interact_contour() (in module ax.plot.contour)": [[12, "ax.plot.contour.interact_contour", false]], "interact_contour_plotly() (in module ax.plot.contour)": [[12, "ax.plot.contour.interact_contour_plotly", false]], "interact_cross_validation() (in module ax.plot.diagnostic)": [[12, "ax.plot.diagnostic.interact_cross_validation", false]], "interact_cross_validation_plotly() (in module ax.plot.diagnostic)": [[12, "ax.plot.diagnostic.interact_cross_validation_plotly", false]], "interact_empirical_model_validation() (in module ax.plot.diagnostic)": [[12, "ax.plot.diagnostic.interact_empirical_model_validation", false]], "interact_fitted() (in module ax.plot.scatter)": [[12, "ax.plot.scatter.interact_fitted", false]], "interact_fitted_plotly() (in module ax.plot.scatter)": [[12, "ax.plot.scatter.interact_fitted_plotly", false]], "interact_multiple_pareto_frontier() (in module ax.plot.pareto_frontier)": [[12, "ax.plot.pareto_frontier.interact_multiple_pareto_frontier", false]], "interact_pareto_frontier() (in module ax.plot.pareto_frontier)": [[12, "ax.plot.pareto_frontier.interact_pareto_frontier", false]], "interact_slice (ax.plot.base.axplottypes attribute)": [[12, "ax.plot.base.AxPlotTypes.INTERACT_SLICE", false]], "interact_slice() (in module ax.plot.slice)": [[12, "ax.plot.slice.interact_slice", false]], "interact_slice_plotly() (in module ax.plot.slice)": [[12, "ax.plot.slice.interact_slice_plotly", false]], "interactive_optimize() (in module ax.service.interactive_loop)": [[15, "ax.service.interactive_loop.interactive_optimize", false]], "interactive_optimize_with_client() (in module ax.service.interactive_loop)": [[15, "ax.service.interactive_loop.interactive_optimize_with_client", false]], "internal_clock (ax.utils.testing.backend_simulator.backendsimulatoroptions attribute)": [[18, "ax.utils.testing.backend_simulator.BackendSimulatorOptions.internal_clock", false]], "intrangetochoice (class in ax.modelbridge.transforms.int_range_to_choice)": [[10, "ax.modelbridge.transforms.int_range_to_choice.IntRangeToChoice", false]], "inttimestamp (class in ax.storage.sqa_store.timestamp)": [[16, "ax.storage.sqa_store.timestamp.IntTimestamp", false]], "inttofloat (class in ax.modelbridge.transforms.int_to_float)": [[10, "ax.modelbridge.transforms.int_to_float.IntToFloat", false]], "inverse_transform() (ax.modelbridge.transforms.one_hot.onehotencoder method)": [[10, "ax.modelbridge.transforms.one_hot.OneHotEncoder.inverse_transform", false]], "inverse_variance_weight() (in module ax.utils.stats.statstools)": [[18, "ax.utils.stats.statstools.inverse_variance_weight", false]], "is_abandoned (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.is_abandoned", false]], "is_abandoned (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_abandoned", false]], "is_available_while_running() (ax.metrics.factorial.factorialmetric class method)": [[9, "ax.metrics.factorial.FactorialMetric.is_available_while_running", false]], "is_available_while_running() (ax.metrics.noisy_function.noisyfunctionmetric class method)": [[9, "ax.metrics.noisy_function.NoisyFunctionMetric.is_available_while_running", false]], "is_available_while_running() (ax.metrics.noisy_function_map.noisyfunctionmapmetric class method)": [[9, "ax.metrics.noisy_function_map.NoisyFunctionMapMetric.is_available_while_running", false]], "is_available_while_running() (ax.metrics.tensorboard.tensorboardmetric class method)": [[9, "ax.metrics.tensorboard.TensorboardMetric.is_available_while_running", false]], "is_ax_equal() (in module ax.utils.common.equality)": [[18, "ax.utils.common.equality.is_ax_equal", false]], "is_batch (ax.storage.sqa_store.sqa_classes.sqatrial attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQATrial.is_batch", false]], "is_candidate (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_candidate", false]], "is_completed (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_completed", false]], "is_completed (ax.modelbridge.generation_node.generationnode property)": [[10, "ax.modelbridge.generation_node.GenerationNode.is_completed", false]], "is_copy_doc_call() (in module ax.utils.flake8_plugins.docstring_checker)": [[18, "ax.utils.flake8_plugins.docstring_checker.is_copy_doc_call", false]], "is_deployed (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_deployed", false]], "is_early_stopped (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_early_stopped", false]], "is_eligible() (ax.early_stopping.strategies.base.baseearlystoppingstrategy method)": [[4, "ax.early_stopping.strategies.base.BaseEarlyStoppingStrategy.is_eligible", false]], "is_eligible_any() (ax.early_stopping.strategies.base.baseearlystoppingstrategy method)": [[4, "ax.early_stopping.strategies.base.BaseEarlyStoppingStrategy.is_eligible_any", false]], "is_environmental() (ax.core.parameter_distribution.parameterdistribution method)": [[3, "ax.core.parameter_distribution.ParameterDistribution.is_environmental", false]], "is_err() (ax.utils.common.result.err method)": [[18, "ax.utils.common.result.Err.is_err", false]], "is_err() (ax.utils.common.result.ok method)": [[18, "ax.utils.common.result.Ok.is_err", false]], "is_err() (ax.utils.common.result.result method)": [[18, "ax.utils.common.result.Result.is_err", false]], "is_factorial (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.is_factorial", false]], "is_failed (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_failed", false]], "is_fidelity (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.is_fidelity", false]], "is_foreign_key_field() (in module ax.storage.sqa_store.utils)": [[16, "ax.storage.sqa_store.utils.is_foreign_key_field", false]], "is_hierarchical (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.is_hierarchical", false]], "is_manual_generation_strategy (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.is_manual_generation_strategy", false]], "is_moo (ax.benchmark.benchmark_problem.benchmarkproblem property)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.is_moo", false]], "is_moo (ax.models.torch_base.torchoptconfig attribute)": [[11, "ax.models.torch_base.TorchOptConfig.is_moo", false], [11, "id1", false]], "is_moo_problem (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.is_moo_problem", false]], "is_moo_problem (ax.core.optimization_config.optimizationconfig property)": [[3, "ax.core.optimization_config.OptimizationConfig.is_moo_problem", false]], "is_node_based (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.is_node_based", false]], "is_numeric (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.is_numeric", false]], "is_numeric (ax.core.parameter.parametertype property)": [[3, "ax.core.parameter.ParameterType.is_numeric", false]], "is_ok() (ax.utils.common.result.err method)": [[18, "ax.utils.common.result.Err.is_ok", false]], "is_ok() (ax.utils.common.result.ok method)": [[18, "ax.utils.common.result.Ok.is_ok", false]], "is_ok() (ax.utils.common.result.result method)": [[18, "ax.utils.common.result.Result.is_ok", false]], "is_ordered (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.is_ordered", false]], "is_ordered (ax.preview.api.configs.choiceparameterconfig attribute)": [[13, "ax.preview.api.configs.ChoiceParameterConfig.is_ordered", false]], "is_predictive() (in module ax.analysis.plotly.utils)": [[0, "ax.analysis.plotly.utils.is_predictive", false]], "is_running (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_running", false]], "is_task (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.is_task", false]], "is_terminal (ax.core.base_trial.trialstatus property)": [[3, "ax.core.base_trial.TrialStatus.is_terminal", false]], "is_test (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.is_test", false]], "is_upper_bound (ax.core.parameter_constraint.sumconstraint property)": [[3, "ax.core.parameter_constraint.SumConstraint.is_upper_bound", false]], "is_valid_type() (ax.core.parameter.parameter method)": [[3, "ax.core.parameter.Parameter.is_valid_type", false]], "is_valid_type() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.is_valid_type", false]], "iteration (ax.core.batch_trial.lifecyclestage attribute)": [[3, "ax.core.batch_trial.LifecycleStage.ITERATION", false]], "ivw (class in ax.modelbridge.transforms.ivw)": [[10, "ax.modelbridge.transforms.ivw.IVW", false]], "ivw_metric_merge() (in module ax.modelbridge.transforms.ivw)": [[10, "ax.modelbridge.transforms.ivw.ivw_metric_merge", false]], "jenatton (class in ax.benchmark.problems.synthetic.hss.jenatton)": [[2, "ax.benchmark.problems.synthetic.hss.jenatton.Jenatton", false]], "jenatton_test_function() (in module ax.benchmark.problems.synthetic.hss.jenatton)": [[2, "ax.benchmark.problems.synthetic.hss.jenatton.jenatton_test_function", false]], "jsondecodeerror": [[5, "ax.exceptions.storage.JSONDecodeError", false]], "jsonencodeddict (in module ax.storage.sqa_store.json)": [[16, "ax.storage.sqa_store.json.JSONEncodedDict", false]], "jsonencodedlist (in module ax.storage.sqa_store.json)": [[16, "ax.storage.sqa_store.json.JSONEncodedList", false]], "jsonencodedlongtext (class in ax.storage.sqa_store.json)": [[16, "ax.storage.sqa_store.json.JSONEncodedLongText", false]], "jsonencodedlongtextdict (in module ax.storage.sqa_store.json)": [[16, "ax.storage.sqa_store.json.JSONEncodedLongTextDict", false]], "jsonencodedmediumtext (class in ax.storage.sqa_store.json)": [[16, "ax.storage.sqa_store.json.JSONEncodedMediumText", false]], "jsonencodedobject (class in ax.storage.sqa_store.json)": [[16, "ax.storage.sqa_store.json.JSONEncodedObject", false]], "jsonencodedtext (class in ax.storage.sqa_store.json)": [[16, "ax.storage.sqa_store.json.JSONEncodedText", false]], "jsonencodedtextdict (in module ax.storage.sqa_store.json)": [[16, "ax.storage.sqa_store.json.JSONEncodedTextDict", false]], "jsonencodeerror": [[5, "ax.exceptions.storage.JSONEncodeError", false]], "keys (class in ax.utils.common.constants)": [[18, "ax.utils.common.constants.Keys", false]], "l1_norm_func() (in module ax.models.torch.botorch_modular.sebo)": [[11, "ax.models.torch.botorch_modular.sebo.L1_norm_func", false]], "l2normmetric (class in ax.metrics.l2norm)": [[9, "ax.metrics.l2norm.L2NormMetric", false]], "last_generator_run (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.last_generator_run", false]], "last_run_template (ax.analysis.healthcheck.can_generate_candidates.cangeneratecandidatesanalysis attribute)": [[0, "ax.analysis.healthcheck.can_generate_candidates.CanGenerateCandidatesAnalysis.LAST_RUN_TEMPLATE", false]], "lattice_multiple_metrics() (in module ax.plot.scatter)": [[12, "ax.plot.scatter.lattice_multiple_metrics", false]], "launch_surface (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.launch_surface", false]], "lceabo (class in ax.models.torch.cbo_lcea)": [[11, "ax.models.torch.cbo_lcea.LCEABO", false]], "lcembo (class in ax.models.torch.cbo_lcem)": [[11, "ax.models.torch.cbo_lcem.LCEMBO", false]], "legacy_botorch (ax.modelbridge.registry.models attribute)": [[10, "ax.modelbridge.registry.Models.LEGACY_BOTORCH", false]], "leq (ax.core.types.comparisonop attribute)": [[3, "ax.core.types.ComparisonOp.LEQ", false]], "level (ax.analysis.analysis.analysiscard attribute)": [[0, "ax.analysis.analysis.AnalysisCard.level", false]], "lifecycle_stage (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.lifecycle_stage", false]], "lifecyclestage (class in ax.core.batch_trial)": [[3, "ax.core.batch_trial.LifecycleStage", false]], "light_purple (ax.plot.color.colors attribute)": [[12, "ax.plot.color.COLORS.LIGHT_PURPLE", false]], "likelihood_class (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.likelihood_class", false]], "likelihood_class (ax.models.torch.botorch_modular.utils.modelconfig attribute)": [[11, "ax.models.torch.botorch_modular.utils.ModelConfig.likelihood_class", false]], "likelihood_kwargs (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.likelihood_kwargs", false]], "likelihood_options (ax.models.torch.botorch_modular.utils.modelconfig attribute)": [[11, "ax.models.torch.botorch_modular.utils.ModelConfig.likelihood_options", false]], "linear (ax.preview.api.configs.parameterscaling attribute)": [[13, "ax.preview.api.configs.ParameterScaling.LINEAR", false]], "linear (ax.storage.utils.parameterconstrainttype attribute)": [[16, "ax.storage.utils.ParameterConstraintType.LINEAR", false]], "linear_constraints (ax.models.torch_base.torchoptconfig attribute)": [[11, "ax.models.torch_base.TorchOptConfig.linear_constraints", false], [11, "id2", false]], "lineno (ax.utils.flake8_plugins.docstring_checker.error attribute)": [[18, "ax.utils.flake8_plugins.docstring_checker.Error.lineno", false]], "link_html() (in module ax.utils.report.render)": [[18, "ax.utils.report.render.link_html", false]], "list_item_html() (in module ax.utils.report.render)": [[18, "ax.utils.report.render.list_item_html", false]], "listens_for_multiple() (in module ax.storage.sqa_store.validation)": [[16, "ax.storage.sqa_store.validation.listens_for_multiple", false]], "load() (ax.service.ax_client.axclient static method)": [[15, "ax.service.ax_client.AxClient.load", false]], "load_analysis_cards_by_experiment_name() (in module ax.storage.sqa_store.load)": [[16, "ax.storage.sqa_store.load.load_analysis_cards_by_experiment_name", false]], "load_experiment() (ax.service.ax_client.axclient static method)": [[15, "ax.service.ax_client.AxClient.load_experiment", false]], "load_experiment() (in module ax.storage.json_store.load)": [[16, "ax.storage.json_store.load.load_experiment", false]], "load_experiment() (in module ax.storage.sqa_store.load)": [[16, "ax.storage.sqa_store.load.load_experiment", false]], "load_experiment_from_database() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.load_experiment_from_database", false]], "load_from_json_file() (ax.service.ax_client.axclient class method)": [[15, "ax.service.ax_client.AxClient.load_from_json_file", false]], "load_generation_strategy_by_experiment_name() (in module ax.storage.sqa_store.load)": [[16, "ax.storage.sqa_store.load.load_generation_strategy_by_experiment_name", false]], "load_generation_strategy_by_id() (in module ax.storage.sqa_store.load)": [[16, "ax.storage.sqa_store.load.load_generation_strategy_by_id", false]], "load_mnist() (in module ax.utils.tutorials.cnn_utils)": [[18, "ax.utils.tutorials.cnn_utils.load_mnist", false]], "log (ax.preview.api.configs.parameterscaling attribute)": [[13, "ax.preview.api.configs.ParameterScaling.LOG", false]], "log (class in ax.modelbridge.transforms.log)": [[10, "ax.modelbridge.transforms.log.Log", false]], "log_filepath (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.log_filepath", false], [15, "id11", false]], "log_scale (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.log_scale", false]], "log_trial_failure() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.log_trial_failure", false]], "logger (ax.service.scheduler.scheduler attribute)": [[15, "ax.service.scheduler.Scheduler.logger", false]], "logger (in module ax.service.utils.instantiation)": [[15, "ax.service.utils.instantiation.logger", false]], "logger (in module ax.storage.metric_registry)": [[16, "ax.storage.metric_registry.logger", false]], "logging_level (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.logging_level", false], [15, "id12", false]], "logical_early_stopping_strategy_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.logical_early_stopping_strategy_to_dict", false]], "logicalearlystoppingstrategy (class in ax.early_stopping.strategies.logical)": [[4, "ax.early_stopping.strategies.logical.LogicalEarlyStoppingStrategy", false]], "logit (class in ax.modelbridge.transforms.logit)": [[10, "ax.modelbridge.transforms.logit.Logit", false]], "logit_scale (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.logit_scale", false]], "lognorm_to_norm() (in module ax.modelbridge.transforms.log_y)": [[10, "ax.modelbridge.transforms.log_y.lognorm_to_norm", false]], "logy (class in ax.modelbridge.transforms.log_y)": [[10, "ax.modelbridge.transforms.log_y.LogY", false]], "long_run (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.LONG_RUN", false]], "lookup_data() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.lookup_data", false]], "lookup_data() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.lookup_data", false]], "lookup_data_for_trial() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.lookup_data_for_trial", false]], "lookup_data_for_ts() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.lookup_data_for_ts", false]], "lookup_trial_index_status() (ax.utils.testing.backend_simulator.backendsimulator method)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.lookup_trial_index_status", false]], "low (ax.analysis.analysis.analysiscardlevel attribute)": [[0, "ax.analysis.analysis.AnalysisCardLevel.LOW", false]], "lower (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.lower", false]], "lower_boundary (ax.models.winsorization_config.winsorizationconfig attribute)": [[11, "ax.models.winsorization_config.WinsorizationConfig.lower_boundary", false]], "lower_is_better (ax.metrics.chemistry.chemistrymetric attribute)": [[9, "ax.metrics.chemistry.ChemistryMetric.lower_is_better", false]], "lower_parameter (ax.core.parameter_constraint.orderconstraint property)": [[3, "ax.core.parameter_constraint.OrderConstraint.lower_parameter", false]], "lower_quantile_margin (ax.models.winsorization_config.winsorizationconfig attribute)": [[11, "ax.models.winsorization_config.WinsorizationConfig.lower_quantile_margin", false]], "make_experiment() (ax.service.utils.instantiation.instantiationbase class method)": [[15, "ax.service.utils.instantiation.InstantiationBase.make_experiment", false]], "make_fixed_observation_features() (ax.service.utils.instantiation.instantiationbase static method)": [[15, "ax.service.utils.instantiation.InstantiationBase.make_fixed_observation_features", false]], "make_indices_str() (in module ax.utils.common.logger)": [[18, "ax.utils.common.logger.make_indices_str", false]], "make_objective_thresholds() (ax.service.utils.instantiation.instantiationbase class method)": [[15, "ax.service.utils.instantiation.InstantiationBase.make_objective_thresholds", false]], "make_objectives() (ax.service.utils.instantiation.instantiationbase class method)": [[15, "ax.service.utils.instantiation.InstantiationBase.make_objectives", false]], "make_optimization_config() (ax.service.utils.instantiation.instantiationbase class method)": [[15, "ax.service.utils.instantiation.InstantiationBase.make_optimization_config", false]], "make_optimization_config_from_properties() (ax.service.utils.instantiation.instantiationbase class method)": [[15, "ax.service.utils.instantiation.InstantiationBase.make_optimization_config_from_properties", false]], "make_outcome_constraints() (ax.service.utils.instantiation.instantiationbase class method)": [[15, "ax.service.utils.instantiation.InstantiationBase.make_outcome_constraints", false]], "make_search_space() (ax.service.utils.instantiation.instantiationbase class method)": [[15, "ax.service.utils.instantiation.InstantiationBase.make_search_space", false]], "manual (ax.core.generator_run.generatorruntype attribute)": [[3, "ax.core.generator_run.GeneratorRunType.MANUAL", false]], "map() (ax.utils.common.result.err method)": [[18, "ax.utils.common.result.Err.map", false]], "map() (ax.utils.common.result.ok method)": [[18, "ax.utils.common.result.Ok.map", false]], "map() (ax.utils.common.result.result method)": [[18, "ax.utils.common.result.Result.map", false]], "map_data (ax.core.formatting_utils.datatype attribute)": [[3, "ax.core.formatting_utils.DataType.MAP_DATA", false]], "map_data_multiple_metrics_dropdown_plotly() (in module ax.plot.trace)": [[12, "ax.plot.trace.map_data_multiple_metrics_dropdown_plotly", false]], "map_data_single_trace_scatters() (in module ax.plot.trace)": [[12, "ax.plot.trace.map_data_single_trace_scatters", false]], "map_data_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.map_data_to_dict", false]], "map_err() (ax.utils.common.result.err method)": [[18, "ax.utils.common.result.Err.map_err", false]], "map_err() (ax.utils.common.result.ok method)": [[18, "ax.utils.common.result.Ok.map_err", false]], "map_err() (ax.utils.common.result.result method)": [[18, "ax.utils.common.result.Result.map_err", false]], "map_key_info (ax.metrics.branin_map.braninfidelitymapmetric attribute)": [[9, "ax.metrics.branin_map.BraninFidelityMapMetric.map_key_info", false]], "map_key_info (ax.metrics.noisy_function_map.noisyfunctionmapmetric attribute)": [[9, "ax.metrics.noisy_function_map.NoisyFunctionMapMetric.map_key_info", false]], "map_key_info (ax.metrics.tensorboard.tensorboardmetric attribute)": [[9, "ax.metrics.tensorboard.TensorboardMetric.map_key_info", false]], "map_key_info_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.map_key_info_to_dict", false]], "map_or() (ax.utils.common.result.err method)": [[18, "ax.utils.common.result.Err.map_or", false]], "map_or() (ax.utils.common.result.ok method)": [[18, "ax.utils.common.result.Ok.map_or", false]], "map_or() (ax.utils.common.result.result method)": [[18, "ax.utils.common.result.Result.map_or", false]], "map_or_else() (ax.utils.common.result.err method)": [[18, "ax.utils.common.result.Err.map_or_else", false]], "map_or_else() (ax.utils.common.result.ok method)": [[18, "ax.utils.common.result.Ok.map_or_else", false]], "map_or_else() (ax.utils.common.result.result method)": [[18, "ax.utils.common.result.Result.map_or_else", false]], "maptorchmodelbridge (class in ax.modelbridge.map_torch)": [[10, "ax.modelbridge.map_torch.MapTorchModelBridge", false]], "mapunitx (class in ax.modelbridge.transforms.map_unit_x)": [[10, "ax.modelbridge.transforms.map_unit_x.MapUnitX", false]], "marginal_effects() (in module ax.utils.stats.statstools)": [[18, "ax.utils.stats.statstools.marginal_effects", false]], "mark_abandoned() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_abandoned", false]], "mark_arm_abandoned() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_arm_abandoned", false]], "mark_arm_abandoned() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.mark_arm_abandoned", false]], "mark_as() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_as", false]], "mark_completed() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_completed", false]], "mark_early_stopped() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_early_stopped", false]], "mark_failed() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_failed", false]], "mark_running() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_running", false]], "mark_staged() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.mark_staged", false]], "markdown_messages (ax.service.scheduler.scheduler attribute)": [[15, "ax.service.scheduler.Scheduler.markdown_messages", false]], "markdownanalysis (class in ax.analysis.markdown.markdown_analysis)": [[0, "ax.analysis.markdown.markdown_analysis.MarkdownAnalysis", false]], "markdownanalysiscard (class in ax.analysis.markdown.markdown_analysis)": [[0, "ax.analysis.markdown.markdown_analysis.MarkdownAnalysisCard", false]], "match_ci_width() (in module ax.modelbridge.transforms.log_y)": [[10, "ax.modelbridge.transforms.log_y.match_ci_width", false]], "match_ci_width_truncated() (in module ax.modelbridge.transforms.utils)": [[10, "ax.modelbridge.transforms.utils.match_ci_width_truncated", false]], "max (ax.modelbridge.best_model_selector.reductioncriterion attribute)": [[10, "ax.modelbridge.best_model_selector.ReductionCriterion.MAX", false]], "max_concurrency (ax.utils.testing.backend_simulator.backendsimulatoroptions attribute)": [[18, "ax.utils.testing.backend_simulator.BackendSimulatorOptions.max_concurrency", false]], "max_parallelism (ax.telemetry.generation_strategy.generationstrategycreatedrecord attribute)": [[17, "ax.telemetry.generation_strategy.GenerationStrategyCreatedRecord.max_parallelism", false]], "max_parallelism (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.max_parallelism", false]], "max_pending_trials (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.max_pending_trials", false], [15, "id13", false]], "maximize (ax.service.utils.instantiation.metricobjective attribute)": [[15, "ax.service.utils.instantiation.MetricObjective.MAXIMIZE", false]], "maximize (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.MAXIMIZE", false]], "maximum_parallelism (ax.preview.api.configs.generationstrategyconfig attribute)": [[13, "ax.preview.api.configs.GenerationStrategyConfig.maximum_parallelism", false]], "maximums (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[18, "ax.utils.measurement.synthetic_functions.SyntheticFunction.maximums", false]], "maxparallelismreachedexception": [[5, "ax.exceptions.generation_strategy.MaxParallelismReachedException", false]], "maybe_extract_baseline_comparison_values() (in module ax.service.utils.report_utils)": [[15, "ax.service.utils.report_utils.maybe_extract_baseline_comparison_values", false]], "md5hash() (ax.core.arm.arm static method)": [[3, "ax.core.arm.Arm.md5hash", false]], "mean (ax.modelbridge.best_model_selector.reductioncriterion attribute)": [[10, "ax.modelbridge.best_model_selector.ReductionCriterion.MEAN", false]], "mean_gradients (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean attribute)": [[18, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.mean_gradients", false]], "mean_gradients_btsp (ax.utils.sensitivity.derivative_measures.gpdgsmgpmean attribute)": [[18, "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean.mean_gradients_btsp", false]], "mean_markers_scatter() (in module ax.plot.trace)": [[12, "ax.plot.trace.mean_markers_scatter", false]], "mean_of_the_standardized_error() (in module ax.utils.stats.model_fit_stats)": [[18, "ax.utils.stats.model_fit_stats.mean_of_the_standardized_error", false]], "mean_trace_scatter() (in module ax.plot.trace)": [[12, "ax.plot.trace.mean_trace_scatter", false]], "means (ax.core.observation.observationdata attribute)": [[3, "ax.core.observation.ObservationData.means", false]], "means (ax.plot.pareto_utils.paretofrontierresults attribute)": [[12, "ax.plot.pareto_utils.ParetoFrontierResults.means", false]], "means_dict (ax.core.observation.observationdata property)": [[3, "ax.core.observation.ObservationData.means_dict", false]], "merge_model_predict() (in module ax.core.types)": [[3, "ax.core.types.merge_model_predict", false]], "mergerepeatedmeasurements (class in ax.modelbridge.transforms.merge_repeated_measurements)": [[10, "ax.modelbridge.transforms.merge_repeated_measurements.MergeRepeatedMeasurements", false]], "message (ax.utils.common.result.exceptione attribute)": [[18, "ax.utils.common.result.ExceptionE.message", false]], "message (ax.utils.flake8_plugins.docstring_checker.error attribute)": [[18, "ax.utils.flake8_plugins.docstring_checker.Error.message", false]], "metadata (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.METADATA", false]], "metric (ax.plot.base.plotmetric attribute)": [[12, "ax.plot.base.PlotMetric.metric", false]], "metric_cls_to_quantity (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.metric_cls_to_quantity", false]], "metric_cls_to_quantity (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.metric_cls_to_quantity", false]], "metric_config_summary_df (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.metric_config_summary_df", false]], "metric_definitions (ax.service.ax_client.axclient property)": [[15, "ax.service.ax_client.AxClient.metric_definitions", false]], "metric_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.metric_from_sqa", false]], "metric_names (ax.core.observation.observationdata attribute)": [[3, "ax.core.observation.ObservationData.metric_names", false]], "metric_names (ax.modelbridge.base.modelbridge property)": [[10, "ax.modelbridge.base.ModelBridge.metric_names", false]], "metric_names (ax.service.ax_client.axclient property)": [[15, "ax.service.ax_client.AxClient.metric_names", false]], "metric_names (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.METRIC_NAMES", false]], "metric_registry (ax.storage.registry_bundle.registrybundlebase property)": [[16, "ax.storage.registry_bundle.RegistryBundleBase.metric_registry", false]], "metric_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.metric_to_dict", false]], "metric_to_model_configs (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.metric_to_model_configs", false]], "metric_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.metric_to_sqa", false]], "metric_to_trial_type (ax.core.multi_type_experiment.multitypeexperiment property)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.metric_to_trial_type", false]], "metricdatanotreadyerror": [[5, "ax.exceptions.core.MetricDataNotReadyError", false]], "metricintent (class in ax.storage.utils)": [[16, "ax.storage.utils.MetricIntent", false]], "metricobjective (class in ax.service.utils.instantiation)": [[15, "ax.service.utils.instantiation.MetricObjective", false]], "metrics (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.metrics", false]], "metrics (ax.core.optimization_config.multiobjectiveoptimizationconfig property)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig.metrics", false]], "metrics (ax.core.optimization_config.optimizationconfig property)": [[3, "ax.core.optimization_config.OptimizationConfig.metrics", false]], "metrics (ax.plot.base.plotdata attribute)": [[12, "ax.plot.base.PlotData.metrics", false]], "metrics (ax.storage.sqa_store.sqa_classes.sqaexperiment attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAExperiment.metrics", false]], "metrics (ax.storage.sqa_store.sqa_classes.sqageneratorrun attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAGeneratorRun.metrics", false]], "metricsastask (class in ax.modelbridge.transforms.metrics_as_task)": [[10, "ax.modelbridge.transforms.metrics_as_task.MetricsAsTask", false]], "mid (ax.analysis.analysis.analysiscardlevel attribute)": [[0, "ax.analysis.analysis.AnalysisCardLevel.MID", false]], "min (ax.modelbridge.best_model_selector.reductioncriterion attribute)": [[10, "ax.modelbridge.best_model_selector.ReductionCriterion.MIN", false]], "min_failed_trials_for_failure_rate_check (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.min_failed_trials_for_failure_rate_check", false], [15, "id14", false]], "min_seconds_before_poll (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.min_seconds_before_poll", false], [15, "id15", false]], "minimize (ax.service.utils.instantiation.metricobjective attribute)": [[15, "ax.service.utils.instantiation.MetricObjective.MINIMIZE", false]], "minimize (ax.service.utils.instantiation.objectiveproperties attribute)": [[15, "ax.service.utils.instantiation.ObjectiveProperties.minimize", false]], "minimums (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[18, "ax.utils.measurement.synthetic_functions.SyntheticFunction.minimums", false]], "misconfiguredexperiment": [[5, "ax.exceptions.core.MisconfiguredExperiment", false]], "missingdataerror": [[5, "ax.exceptions.data_provider.MissingDataError", false]], "missingmetrics (class in ax.core.utils)": [[3, "ax.core.utils.MissingMetrics", false]], "mk_discrete_choices() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.mk_discrete_choices", false]], "mll_class (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.mll_class", false]], "mll_class (ax.models.torch.botorch_modular.utils.modelconfig attribute)": [[11, "ax.models.torch.botorch_modular.utils.ModelConfig.mll_class", false]], "mll_kwargs (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.mll_kwargs", false]], "mll_options (ax.models.torch.botorch_modular.utils.modelconfig attribute)": [[11, "ax.models.torch.botorch_modular.utils.ModelConfig.mll_options", false]], "mock_botorch_optimize() (in module ax.utils.testing.mock)": [[18, "ax.utils.testing.mock.mock_botorch_optimize", false]], "mock_botorch_optimize_context_manager() (in module ax.utils.testing.mock)": [[18, "ax.utils.testing.mock.mock_botorch_optimize_context_manager", false]], "mock_patch_method_original() (in module ax.utils.common.mock)": [[18, "ax.utils.common.mock.mock_patch_method_original", false]], "model (ax.modelbridge.discrete.discretemodelbridge attribute)": [[10, "ax.modelbridge.discrete.DiscreteModelBridge.model", false]], "model (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.model", false]], "model (ax.modelbridge.torch.torchmodelbridge attribute)": [[10, "ax.modelbridge.torch.TorchModelBridge.model", false]], "model (ax.models.torch.botorch.botorchmodel property)": [[11, "ax.models.torch.botorch.BotorchModel.model", false]], "model (ax.models.torch.botorch_modular.surrogate.surrogate property)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate.model", false]], "model (ax.models.torch.cbo_lcea.lceabo property)": [[11, "ax.models.torch.cbo_lcea.LCEABO.model", false]], "model (ax.models.torch.utils.subsetmodeldata attribute)": [[11, "ax.models.torch.utils.SubsetModelData.model", false]], "model (class in ax.models.base)": [[11, "ax.models.base.Model", false]], "model_best_point() (ax.modelbridge.torch.torchmodelbridge method)": [[10, "ax.modelbridge.torch.TorchModelBridge.model_best_point", false]], "model_bridge_class (ax.modelbridge.registry.modelregistrybase property)": [[10, "ax.modelbridge.registry.ModelRegistryBase.model_bridge_class", false]], "model_class (ax.modelbridge.registry.modelregistrybase property)": [[10, "ax.modelbridge.registry.ModelRegistryBase.model_class", false]], "model_class (ax.modelbridge.registry.modelsetup attribute)": [[10, "ax.modelbridge.registry.ModelSetup.model_class", false]], "model_configs (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.model_configs", false]], "model_cv_kwargs (ax.modelbridge.model_spec.modelspec attribute)": [[10, "ax.modelbridge.model_spec.ModelSpec.model_cv_kwargs", false]], "model_enum (ax.modelbridge.model_spec.factoryfunctionmodelspec attribute)": [[10, "ax.modelbridge.model_spec.FactoryFunctionModelSpec.model_enum", false]], "model_enum (ax.modelbridge.model_spec.modelspec attribute)": [[10, "ax.modelbridge.model_spec.ModelSpec.model_enum", false]], "model_fit_generalization (ax.telemetry.ax_client.axclientcompletedrecord attribute)": [[17, "ax.telemetry.ax_client.AxClientCompletedRecord.model_fit_generalization", false]], "model_fit_generalization (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.model_fit_generalization", false]], "model_fit_generalization (ax.telemetry.scheduler.schedulercompletedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCompletedRecord.model_fit_generalization", false]], "model_fit_quality (ax.telemetry.ax_client.axclientcompletedrecord attribute)": [[17, "ax.telemetry.ax_client.AxClientCompletedRecord.model_fit_quality", false]], "model_fit_quality (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.model_fit_quality", false]], "model_fit_quality (ax.telemetry.scheduler.schedulercompletedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCompletedRecord.model_fit_quality", false]], "model_gen_kwargs (ax.modelbridge.generation_node.generationstep property)": [[10, "ax.modelbridge.generation_node.GenerationStep.model_gen_kwargs", false]], "model_gen_kwargs (ax.modelbridge.model_spec.modelspec attribute)": [[10, "ax.modelbridge.model_spec.ModelSpec.model_gen_kwargs", false]], "model_gen_options (ax.models.torch_base.torchoptconfig attribute)": [[11, "ax.models.torch_base.TorchOptConfig.model_gen_options", false], [11, "id3", false]], "model_key (ax.modelbridge.model_spec.modelspec property)": [[10, "ax.modelbridge.model_spec.ModelSpec.model_key", false]], "model_key_override (ax.modelbridge.model_spec.modelspec attribute)": [[10, "ax.modelbridge.model_spec.ModelSpec.model_key_override", false]], "model_kwargs (ax.modelbridge.generation_node.generationstep property)": [[10, "ax.modelbridge.generation_node.GenerationStep.model_kwargs", false]], "model_kwargs (ax.modelbridge.model_spec.modelspec attribute)": [[10, "ax.modelbridge.model_spec.ModelSpec.model_kwargs", false]], "model_options (ax.models.torch.botorch_modular.utils.modelconfig attribute)": [[11, "ax.models.torch.botorch_modular.utils.ModelConfig.model_options", false]], "model_predictions (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.model_predictions", false]], "model_predictions_by_arm (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.model_predictions_by_arm", false]], "model_registry (in module ax.storage.botorch_modular_registry)": [[16, "ax.storage.botorch_modular_registry.MODEL_REGISTRY", false]], "model_space (ax.modelbridge.base.modelbridge property)": [[10, "ax.modelbridge.base.ModelBridge.model_space", false]], "model_spec (ax.modelbridge.generation_node.generationstep property)": [[10, "ax.modelbridge.generation_node.GenerationStep.model_spec", false]], "model_spec_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.model_spec_from_json", false]], "model_spec_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.model_spec_to_dict", false]], "model_spec_to_gen_from (ax.modelbridge.external_generation_node.externalgenerationnode property)": [[10, "ax.modelbridge.external_generation_node.ExternalGenerationNode.model_spec_to_gen_from", false]], "model_spec_to_gen_from (ax.modelbridge.generation_node.generationnode property)": [[10, "ax.modelbridge.generation_node.GenerationNode.model_spec_to_gen_from", false]], "model_specs (ax.modelbridge.generation_node.generationnode attribute)": [[10, "ax.modelbridge.generation_node.GenerationNode.model_specs", false]], "model_std_generalization (ax.telemetry.ax_client.axclientcompletedrecord attribute)": [[17, "ax.telemetry.ax_client.AxClientCompletedRecord.model_std_generalization", false]], "model_std_generalization (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.model_std_generalization", false]], "model_std_generalization (ax.telemetry.scheduler.schedulercompletedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCompletedRecord.model_std_generalization", false]], "model_std_quality (ax.telemetry.ax_client.axclientcompletedrecord attribute)": [[17, "ax.telemetry.ax_client.AxClientCompletedRecord.model_std_quality", false]], "model_std_quality (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.model_std_quality", false]], "model_std_quality (ax.telemetry.scheduler.schedulercompletedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCompletedRecord.model_std_quality", false]], "model_to_gen_from_name (ax.modelbridge.generation_node.generationnode property)": [[10, "ax.modelbridge.generation_node.GenerationNode.model_to_gen_from_name", false]], "model_transitions (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.model_transitions", false]], "modelbasedearlystoppingstrategy (class in ax.early_stopping.strategies.base)": [[4, "ax.early_stopping.strategies.base.ModelBasedEarlyStoppingStrategy", false]], "modelbridge (ax.modelbridge.transforms.base.transform attribute)": [[10, "ax.modelbridge.transforms.base.Transform.modelbridge", false]], "modelbridge (class in ax.modelbridge.base)": [[10, "ax.modelbridge.base.ModelBridge", false]], "modelconfig (class in ax.models.torch.botorch_modular.utils)": [[11, "ax.models.torch.botorch_modular.utils.ModelConfig", false]], "modelerror": [[5, "ax.exceptions.model.ModelError", false]], "modelfitmetricprotocol (class in ax.utils.stats.model_fit_stats)": [[18, "ax.utils.stats.model_fit_stats.ModelFitMetricProtocol", false]], "modelregistrybase (class in ax.modelbridge.registry)": [[10, "ax.modelbridge.registry.ModelRegistryBase", false]], "models (class in ax.modelbridge.registry)": [[10, "ax.modelbridge.registry.Models", false]], "modelsetup (class in ax.modelbridge.registry)": [[10, "ax.modelbridge.registry.ModelSetup", false]], "modelspec (class in ax.modelbridge.model_spec)": [[10, "ax.modelbridge.model_spec.ModelSpec", false]], "modelspecjsonencoder (class in ax.modelbridge.model_spec)": [[10, "ax.modelbridge.model_spec.ModelSpecJSONEncoder", false]], "modified_bounds (ax.benchmark.benchmark_test_functions.botorch_test.botorchtestfunction attribute)": [[2, "ax.benchmark.benchmark_test_functions.botorch_test.BoTorchTestFunction.modified_bounds", false]], "module": [[0, "module-ax.analysis", false], [0, "module-ax.analysis.analysis", false], [0, "module-ax.analysis.healthcheck.can_generate_candidates", false], [0, "module-ax.analysis.healthcheck.healthcheck_analysis", false], [0, "module-ax.analysis.healthcheck.should_generate_candidates", false], [0, "module-ax.analysis.markdown.markdown_analysis", false], [0, "module-ax.analysis.plotly.arm_effects.insample_effects", false], [0, "module-ax.analysis.plotly.arm_effects.predicted_effects", false], [0, "module-ax.analysis.plotly.arm_effects.utils", false], [0, "module-ax.analysis.plotly.cross_validation", false], [0, "module-ax.analysis.plotly.parallel_coordinates", false], [0, "module-ax.analysis.plotly.plotly_analysis", false], [0, "module-ax.analysis.plotly.scatter", false], [0, "module-ax.analysis.plotly.utils", false], [0, "module-ax.analysis.summary", false], [2, "module-ax.benchmark", false], [2, "module-ax.benchmark.benchmark", false], [2, "module-ax.benchmark.benchmark_method", false], [2, "module-ax.benchmark.benchmark_metric", false], [2, "module-ax.benchmark.benchmark_problem", false], [2, "module-ax.benchmark.benchmark_result", false], [2, "module-ax.benchmark.benchmark_runner", false], [2, "module-ax.benchmark.benchmark_test_function", false], [2, "module-ax.benchmark.benchmark_test_functions.botorch_test", false], [2, "module-ax.benchmark.benchmark_test_functions.surrogate", false], [2, "module-ax.benchmark.methods.modular_botorch", false], [2, "module-ax.benchmark.methods.sobol", false], [2, "module-ax.benchmark.problems.hd_embedding", false], [2, "module-ax.benchmark.problems.hpo.torchvision", false], [2, "module-ax.benchmark.problems.registry", false], [2, "module-ax.benchmark.problems.synthetic.discretized.mixed_integer", false], [2, "module-ax.benchmark.problems.synthetic.hss.jenatton", false], [3, "module-ax.core", false], [3, "module-ax.core.arm", false], [3, "module-ax.core.auxiliary", false], [3, "module-ax.core.base_trial", false], [3, "module-ax.core.batch_trial", false], [3, "module-ax.core.experiment", false], [3, "module-ax.core.formatting_utils", false], [3, "module-ax.core.generation_strategy_interface", false], [3, "module-ax.core.generator_run", false], [3, "module-ax.core.multi_type_experiment", false], [3, "module-ax.core.observation", false], [3, "module-ax.core.optimization_config", false], [3, "module-ax.core.parameter", false], [3, "module-ax.core.parameter_constraint", false], [3, "module-ax.core.parameter_distribution", false], [3, "module-ax.core.risk_measures", false], [3, "module-ax.core.runner", false], [3, "module-ax.core.trial", false], [3, "module-ax.core.types", false], [3, "module-ax.core.utils", false], [4, "module-ax.early_stopping", false], [4, "module-ax.early_stopping.strategies.base", false], [4, "module-ax.early_stopping.strategies.logical", false], [4, "module-ax.early_stopping.strategies.percentile", false], [4, "module-ax.early_stopping.strategies.threshold", false], [4, "module-ax.early_stopping.utils", false], [5, "module-ax.exceptions", false], [5, "module-ax.exceptions.constants", false], [5, "module-ax.exceptions.core", false], [5, "module-ax.exceptions.data_provider", false], [5, "module-ax.exceptions.generation_strategy", false], [5, "module-ax.exceptions.model", false], [5, "module-ax.exceptions.storage", false], [6, "module-ax.global_stopping", false], [6, "module-ax.global_stopping.strategies.base", false], [6, "module-ax.global_stopping.strategies.improvement", false], [7, "module-ax.health_check", false], [7, "module-ax.health_check.search_space", false], [9, "module-ax.metrics", false], [9, "module-ax.metrics.branin", false], [9, "module-ax.metrics.branin_map", false], [9, "module-ax.metrics.chemistry", false], [9, "module-ax.metrics.curve", false], [9, "module-ax.metrics.factorial", false], [9, "module-ax.metrics.hartmann6", false], [9, "module-ax.metrics.l2norm", false], [9, "module-ax.metrics.noisy_function", false], [9, "module-ax.metrics.noisy_function_map", false], [9, "module-ax.metrics.sklearn", false], [9, "module-ax.metrics.tensorboard", false], [9, "module-ax.metrics.torchx", false], [10, "module-ax.modelbridge", false], [10, "module-ax.modelbridge.base", false], [10, "module-ax.modelbridge.best_model_selector", false], [10, "module-ax.modelbridge.cross_validation", false], [10, "module-ax.modelbridge.discrete", false], [10, "module-ax.modelbridge.dispatch_utils", false], [10, "module-ax.modelbridge.external_generation_node", false], [10, "module-ax.modelbridge.factory", false], [10, "module-ax.modelbridge.generation_node", false], [10, "module-ax.modelbridge.generation_strategy", false], [10, "module-ax.modelbridge.map_torch", false], [10, "module-ax.modelbridge.model_spec", false], [10, "module-ax.modelbridge.modelbridge_utils", false], [10, "module-ax.modelbridge.pairwise", false], [10, "module-ax.modelbridge.prediction_utils", false], [10, "module-ax.modelbridge.registry", false], [10, "module-ax.modelbridge.torch", false], [10, "module-ax.modelbridge.transforms.base", false], [10, "module-ax.modelbridge.transforms.cast", false], [10, "module-ax.modelbridge.transforms.choice_encode", false], [10, "module-ax.modelbridge.transforms.convert_metric_names", false], [10, "module-ax.modelbridge.transforms.deprecated_transform_mixin", false], [10, "module-ax.modelbridge.transforms.derelativize", false], [10, "module-ax.modelbridge.transforms.fill_missing_parameters", false], [10, "module-ax.modelbridge.transforms.int_range_to_choice", false], [10, "module-ax.modelbridge.transforms.int_to_float", false], [10, "module-ax.modelbridge.transforms.ivw", false], [10, "module-ax.modelbridge.transforms.log", false], [10, "module-ax.modelbridge.transforms.log_y", false], [10, "module-ax.modelbridge.transforms.logit", false], [10, "module-ax.modelbridge.transforms.map_unit_x", false], [10, "module-ax.modelbridge.transforms.merge_repeated_measurements", false], [10, "module-ax.modelbridge.transforms.metrics_as_task", false], [10, "module-ax.modelbridge.transforms.one_hot", false], [10, "module-ax.modelbridge.transforms.power_transform_y", false], [10, "module-ax.modelbridge.transforms.relativize", false], [10, "module-ax.modelbridge.transforms.remove_fixed", false], [10, "module-ax.modelbridge.transforms.rounding", false], [10, "module-ax.modelbridge.transforms.search_space_to_choice", false], [10, "module-ax.modelbridge.transforms.standardize_y", false], [10, "module-ax.modelbridge.transforms.stratified_standardize_y", false], [10, "module-ax.modelbridge.transforms.task_encode", false], [10, "module-ax.modelbridge.transforms.time_as_feature", false], [10, "module-ax.modelbridge.transforms.transform_to_new_sq", false], [10, "module-ax.modelbridge.transforms.trial_as_task", false], [10, "module-ax.modelbridge.transforms.unit_x", false], [10, "module-ax.modelbridge.transforms.utils", false], [10, "module-ax.modelbridge.transforms.winsorize", false], [11, "module-ax.models", false], [11, "module-ax.models.base", false], [11, "module-ax.models.discrete.eb_thompson", false], [11, "module-ax.models.discrete.full_factorial", false], [11, "module-ax.models.discrete.thompson", false], [11, "module-ax.models.discrete_base", false], [11, "module-ax.models.model_utils", false], [11, "module-ax.models.random.base", false], [11, "module-ax.models.random.sobol", false], [11, "module-ax.models.random.uniform", false], [11, "module-ax.models.torch.botorch", false], [11, "module-ax.models.torch.botorch_defaults", false], [11, "module-ax.models.torch.botorch_modular.acquisition", false], [11, "module-ax.models.torch.botorch_modular.input_constructors.covar_modules", false], [11, "module-ax.models.torch.botorch_modular.input_constructors.input_transforms", false], [11, "module-ax.models.torch.botorch_modular.input_constructors.outcome_transform", false], [11, "module-ax.models.torch.botorch_modular.kernels", false], [11, "module-ax.models.torch.botorch_modular.model", false], [11, "module-ax.models.torch.botorch_modular.optimizer_argparse", false], [11, "module-ax.models.torch.botorch_modular.sebo", false], [11, "module-ax.models.torch.botorch_modular.surrogate", false], [11, "module-ax.models.torch.botorch_modular.utils", false], [11, "module-ax.models.torch.botorch_moo", false], [11, "module-ax.models.torch.botorch_moo_defaults", false], [11, "module-ax.models.torch.cbo_lcea", false], [11, "module-ax.models.torch.cbo_lcem", false], [11, "module-ax.models.torch.cbo_sac", false], [11, "module-ax.models.torch.randomforest", false], [11, "module-ax.models.torch.utils", false], [11, "module-ax.models.torch_base", false], [11, "module-ax.models.types", false], [11, "module-ax.models.winsorization_config", false], [12, "module-ax.plot", false], [12, "module-ax.plot.bandit_rollout", false], [12, "module-ax.plot.base", false], [12, "module-ax.plot.color", false], [12, "module-ax.plot.contour", false], [12, "module-ax.plot.diagnostic", false], [12, "module-ax.plot.feature_importances", false], [12, "module-ax.plot.helper", false], [12, "module-ax.plot.marginal_effects", false], [12, "module-ax.plot.parallel_coordinates", false], [12, "module-ax.plot.pareto_frontier", false], [12, "module-ax.plot.pareto_utils", false], [12, "module-ax.plot.render", false], [12, "module-ax.plot.scatter", false], [12, "module-ax.plot.slice", false], [12, "module-ax.plot.table_view", false], [12, "module-ax.plot.trace", false], [13, "module-ax.preview", false], [13, "module-ax.preview.api.configs", false], [14, "module-ax.runners", false], [14, "module-ax.runners.simulated_backend", false], [14, "module-ax.runners.single_running_trial_mixin", false], [14, "module-ax.runners.synthetic", false], [14, "module-ax.runners.torchx", false], [15, "module-ax.service", false], [15, "module-ax.service.ax_client", false], [15, "module-ax.service.interactive_loop", false], [15, "module-ax.service.managed_loop", false], [15, "module-ax.service.scheduler", false], [15, "module-ax.service.utils.best_point", false], [15, "module-ax.service.utils.best_point_mixin", false], [15, "module-ax.service.utils.early_stopping", false], [15, "module-ax.service.utils.instantiation", false], [15, "module-ax.service.utils.report_utils", false], [15, "module-ax.service.utils.scheduler_options", false], [15, "module-ax.service.utils.with_db_settings_base", false], [16, "module-ax.storage", false], [16, "module-ax.storage.botorch_modular_registry", false], [16, "module-ax.storage.json_store.decoder", false], [16, "module-ax.storage.json_store.decoders", false], [16, "module-ax.storage.json_store.encoder", false], [16, "module-ax.storage.json_store.encoders", false], [16, "module-ax.storage.json_store.load", false], [16, "module-ax.storage.json_store.registry", false], [16, "module-ax.storage.json_store.save", false], [16, "module-ax.storage.metric_registry", false], [16, "module-ax.storage.registry_bundle", false], [16, "module-ax.storage.runner_registry", false], [16, "module-ax.storage.sqa_store.db", false], [16, "module-ax.storage.sqa_store.decoder", false], [16, "module-ax.storage.sqa_store.delete", false], [16, "module-ax.storage.sqa_store.encoder", false], [16, "module-ax.storage.sqa_store.json", false], [16, "module-ax.storage.sqa_store.load", false], [16, "module-ax.storage.sqa_store.reduced_state", false], [16, "module-ax.storage.sqa_store.save", false], [16, "module-ax.storage.sqa_store.sqa_classes", false], [16, "module-ax.storage.sqa_store.sqa_enum", false], [16, "module-ax.storage.sqa_store.structs", false], [16, "module-ax.storage.sqa_store.timestamp", false], [16, "module-ax.storage.sqa_store.utils", false], [16, "module-ax.storage.sqa_store.validation", false], [16, "module-ax.storage.transform_registry", false], [16, "module-ax.storage.utils", false], [17, "module-ax.telemetry", false], [17, "module-ax.telemetry.ax_client", false], [17, "module-ax.telemetry.common", false], [17, "module-ax.telemetry.experiment", false], [17, "module-ax.telemetry.generation_strategy", false], [17, "module-ax.telemetry.optimization", false], [17, "module-ax.telemetry.scheduler", false], [18, "module-ax.utils", false], [18, "module-ax.utils.common.base", false], [18, "module-ax.utils.common.constants", false], [18, "module-ax.utils.common.decorator", false], [18, "module-ax.utils.common.deprecation", false], [18, "module-ax.utils.common.docutils", false], [18, "module-ax.utils.common.equality", false], [18, "module-ax.utils.common.executils", false], [18, "module-ax.utils.common.func_enum", false], [18, "module-ax.utils.common.kwargs", false], [18, "module-ax.utils.common.logger", false], [18, "module-ax.utils.common.mock", false], [18, "module-ax.utils.common.random", false], [18, "module-ax.utils.common.result", false], [18, "module-ax.utils.common.serialization", false], [18, "module-ax.utils.common.testutils", false], [18, "module-ax.utils.common.timeutils", false], [18, "module-ax.utils.common.typeutils", false], [18, "module-ax.utils.common.typeutils_nonnative", false], [18, "module-ax.utils.common.typeutils_torch", false], [18, "module-ax.utils.flake8_plugins.docstring_checker", false], [18, "module-ax.utils.measurement.synthetic_functions", false], [18, "module-ax.utils.notebook.plotting", false], [18, "module-ax.utils.report.render", false], [18, "module-ax.utils.sensitivity.derivative_gp", false], [18, "module-ax.utils.sensitivity.derivative_measures", false], [18, "module-ax.utils.sensitivity.sobol_measures", false], [18, "module-ax.utils.stats.model_fit_stats", false], [18, "module-ax.utils.stats.statstools", false], [18, "module-ax.utils.testing.backend_simulator", false], [18, "module-ax.utils.testing.benchmark_stubs", false], [18, "module-ax.utils.testing.core_stubs", false], [18, "module-ax.utils.testing.metrics.backend_simulator_map", false], [18, "module-ax.utils.testing.metrics.branin_backend_map", false], [18, "module-ax.utils.testing.mock", false], [18, "module-ax.utils.testing.modeling_stubs", false], [18, "module-ax.utils.testing.preference_stubs", false], [18, "module-ax.utils.testing.test_init_files", false], [18, "module-ax.utils.testing.torch_stubs", false], [18, "module-ax.utils.testing.utils", false], [18, "module-ax.utils.tutorials.cnn_utils", false]], "mt_experiment_trial_type (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.mt_experiment_trial_type", false], [15, "id16", false]], "multi_objective (ax.storage.utils.metricintent attribute)": [[16, "ax.storage.utils.MetricIntent.MULTI_OBJECTIVE", false]], "multi_objective_optimization_config_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.multi_objective_optimization_config_to_dict", false]], "multi_objective_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.multi_objective_to_dict", false]], "multi_objective_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.multi_objective_to_sqa", false]], "multi_type_experiment_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.multi_type_experiment_from_json", false]], "multi_type_experiment_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.multi_type_experiment_to_dict", false]], "multiobjectivebotorchmodel (class in ax.models.torch.botorch_moo)": [[11, "ax.models.torch.botorch_moo.MultiObjectiveBotorchModel", false]], "multiobjectiveoptimizationconfig (class in ax.core.optimization_config)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig", false]], "multitypeexperiment (class in ax.core.multi_type_experiment)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment", false]], "n_best_points (ax.benchmark.benchmark_problem.benchmarkproblem attribute)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.n_best_points", false]], "name (ax.analysis.analysis.analysis property)": [[0, "ax.analysis.analysis.Analysis.name", false]], "name (ax.analysis.analysis.analysiscard attribute)": [[0, "ax.analysis.analysis.AnalysisCard.name", false]], "name (ax.analysis.plotly.arm_effects.insample_effects.insampleeffectsplot property)": [[0, "ax.analysis.plotly.arm_effects.insample_effects.InSampleEffectsPlot.name", false]], "name (ax.benchmark.benchmark_method.benchmarkmethod attribute)": [[2, "ax.benchmark.benchmark_method.BenchmarkMethod.name", false]], "name (ax.benchmark.benchmark_problem.benchmarkproblem attribute)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.name", false]], "name (ax.benchmark.benchmark_result.aggregatedbenchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.AggregatedBenchmarkResult.name", false]], "name (ax.benchmark.benchmark_result.benchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.BenchmarkResult.name", false]], "name (ax.benchmark.benchmark_test_functions.surrogate.surrogatetestfunction attribute)": [[2, "ax.benchmark.benchmark_test_functions.surrogate.SurrogateTestFunction.name", false]], "name (ax.benchmark.problems.hpo.torchvision.pytorchcnntorchvisionbenchmarktestfunction attribute)": [[2, "ax.benchmark.problems.hpo.torchvision.PyTorchCNNTorchvisionBenchmarkTestFunction.name", false]], "name (ax.core.arm.arm property)": [[3, "ax.core.arm.Arm.name", false]], "name (ax.core.batch_trial.abandonedarm attribute)": [[3, "ax.core.batch_trial.AbandonedArm.name", false]], "name (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.name", false]], "name (ax.core.generation_strategy_interface.generationstrategyinterface property)": [[3, "ax.core.generation_strategy_interface.GenerationStrategyInterface.name", false]], "name (ax.core.multi_type_experiment.multitypeexperiment attribute)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.name", false]], "name (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.name", false]], "name (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.name", false]], "name (ax.plot.base.plotinsamplearm attribute)": [[12, "ax.plot.base.PlotInSampleArm.name", false]], "name (ax.plot.base.plotoutofsamplearm attribute)": [[12, "ax.plot.base.PlotOutOfSampleArm.name", false]], "name (ax.preview.api.configs.choiceparameterconfig attribute)": [[13, "ax.preview.api.configs.ChoiceParameterConfig.name", false]], "name (ax.preview.api.configs.experimentconfig attribute)": [[13, "ax.preview.api.configs.ExperimentConfig.name", false]], "name (ax.preview.api.configs.rangeparameterconfig attribute)": [[13, "ax.preview.api.configs.RangeParameterConfig.name", false]], "name (ax.utils.flake8_plugins.docstring_checker.docstringchecker attribute)": [[18, "ax.utils.flake8_plugins.docstring_checker.DocstringChecker.name", false]], "name (ax.utils.measurement.synthetic_functions.frombotorch property)": [[18, "ax.utils.measurement.synthetic_functions.FromBotorch.name", false]], "name (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[18, "ax.utils.measurement.synthetic_functions.SyntheticFunction.name", false]], "name_or_short_signature (ax.core.arm.arm property)": [[3, "ax.core.arm.Arm.name_or_short_signature", false]], "named_tuple_to_dict() (in module ax.utils.common.serialization)": [[18, "ax.utils.common.serialization.named_tuple_to_dict", false]], "negativebraninmetric (class in ax.metrics.branin)": [[9, "ax.metrics.branin.NegativeBraninMetric", false]], "new_batch_trial() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.new_batch_trial", false]], "new_error() (in module ax.utils.flake8_plugins.docstring_checker)": [[18, "ax.utils.flake8_plugins.docstring_checker.new_error", false]], "new_trial() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.new_trial", false]], "new_trial() (ax.utils.testing.backend_simulator.backendsimulator method)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.new_trial", false]], "nn (ax.metrics.sklearn.sklearnmodeltype attribute)": [[9, "ax.metrics.sklearn.SklearnModelType.NN", false]], "nodataerror": [[5, "ax.exceptions.core.NoDataError", false]], "node_name (ax.modelbridge.generation_node.generationnode property)": [[10, "ax.modelbridge.generation_node.GenerationNode.node_name", false]], "node_that_generated_last_gr (ax.modelbridge.generation_node.generationnode property)": [[10, "ax.modelbridge.generation_node.GenerationNode.node_that_generated_last_gr", false]], "nodes_dict (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.nodes_dict", false]], "noise_std (ax.benchmark.benchmark_problem.benchmarkproblem attribute)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.noise_std", false]], "noise_std (ax.benchmark.benchmark_runner.benchmarkrunner attribute)": [[2, "ax.benchmark.benchmark_runner.BenchmarkRunner.noise_std", false]], "noiseless (ax.metrics.chemistry.chemistrymetric attribute)": [[9, "ax.metrics.chemistry.ChemistryMetric.noiseless", false]], "noisyfunctionmapmetric (class in ax.metrics.noisy_function_map)": [[9, "ax.metrics.noisy_function_map.NoisyFunctionMapMetric", false]], "noisyfunctionmetric (class in ax.metrics.noisy_function)": [[9, "ax.metrics.noisy_function.NoisyFunctionMetric", false]], "norm_to_lognorm() (in module ax.modelbridge.transforms.log_y)": [[10, "ax.modelbridge.transforms.log_y.norm_to_lognorm", false]], "normalize_indices() (in module ax.models.torch.utils)": [[11, "ax.models.torch.utils.normalize_indices", false]], "normalized_arm_weights() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.normalized_arm_weights", false]], "not_saved_model_kwargs (ax.modelbridge.registry.modelsetup attribute)": [[10, "ax.modelbridge.registry.ModelSetup.not_saved_model_kwargs", false]], "num_abandoned_arms (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.num_abandoned_arms", false]], "num_abandoned_trials (ax.telemetry.experiment.experimentcompletedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord.num_abandoned_trials", false]], "num_abandoned_trials (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.num_abandoned_trials", false]], "num_bayesopt_trials (ax.telemetry.experiment.experimentcompletedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord.num_bayesopt_trials", false]], "num_bayesopt_trials (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.num_bayesopt_trials", false]], "num_completed (ax.utils.testing.backend_simulator.backendsimulator property)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.num_completed", false]], "num_completed_trials (ax.telemetry.experiment.experimentcompletedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord.num_completed_trials", false]], "num_completed_trials (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.num_completed_trials", false]], "num_continuous_range_parameters (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_continuous_range_parameters", false]], "num_continuous_range_parameters (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_continuous_range_parameters", false]], "num_custom_trials (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_custom_trials", false]], "num_early_stopped_trials (ax.telemetry.experiment.experimentcompletedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord.num_early_stopped_trials", false]], "num_early_stopped_trials (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.num_early_stopped_trials", false]], "num_failed (ax.utils.testing.backend_simulator.backendsimulator property)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.num_failed", false]], "num_failed_trials (ax.telemetry.experiment.experimentcompletedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord.num_failed_trials", false]], "num_failed_trials (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.num_failed_trials", false]], "num_fantasies (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.NUM_FANTASIES", false]], "num_fixed_parameters (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_fixed_parameters", false]], "num_fixed_parameters (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_fixed_parameters", false]], "num_initialization_trials (ax.preview.api.configs.generationstrategyconfig attribute)": [[13, "ax.preview.api.configs.GenerationStrategyConfig.num_initialization_trials", false]], "num_initialization_trials (ax.telemetry.experiment.experimentcompletedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord.num_initialization_trials", false]], "num_initialization_trials (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.num_initialization_trials", false]], "num_inner_restarts (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.NUM_INNER_RESTARTS", false]], "num_int_range_parameters_large (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_int_range_parameters_large", false]], "num_int_range_parameters_large (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_int_range_parameters_large", false]], "num_int_range_parameters_medium (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_int_range_parameters_medium", false]], "num_int_range_parameters_medium (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_int_range_parameters_medium", false]], "num_int_range_parameters_small (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_int_range_parameters_small", false]], "num_int_range_parameters_small (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_int_range_parameters_small", false]], "num_log_scale_range_parameters (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_log_scale_range_parameters", false]], "num_log_scale_range_parameters (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_log_scale_range_parameters", false]], "num_map_metrics (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_map_metrics", false]], "num_map_metrics (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_map_metrics", false]], "num_metric_fetch_e_encountered (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.num_metric_fetch_e_encountered", false]], "num_metric_fetch_e_encountered (ax.telemetry.scheduler.schedulercompletedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCompletedRecord.num_metric_fetch_e_encountered", false]], "num_objectives (ax.telemetry.experiment.experimentcompletedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord.num_objectives", false]], "num_objectives (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_objectives", false]], "num_objectives (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.num_objectives", false]], "num_objectives (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_objectives", false]], "num_other_trials (ax.telemetry.experiment.experimentcompletedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord.num_other_trials", false]], "num_other_trials (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.num_other_trials", false]], "num_outcome_constraints (ax.telemetry.experiment.experimentcompletedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord.num_outcome_constraints", false]], "num_outcome_constraints (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_outcome_constraints", false]], "num_outcome_constraints (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.num_outcome_constraints", false]], "num_outcome_constraints (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_outcome_constraints", false]], "num_outcomes (ax.utils.testing.benchmark_stubs.dummytestfunction attribute)": [[18, "ax.utils.testing.benchmark_stubs.DummyTestFunction.num_outcomes", false]], "num_parameter_constraints (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_parameter_constraints", false]], "num_parameter_constraints (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_parameter_constraints", false]], "num_queued (ax.utils.testing.backend_simulator.backendsimulator property)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.num_queued", false]], "num_requested_bayesopt_trials (ax.telemetry.generation_strategy.generationstrategycreatedrecord attribute)": [[17, "ax.telemetry.generation_strategy.GenerationStrategyCreatedRecord.num_requested_bayesopt_trials", false]], "num_requested_bayesopt_trials (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_requested_bayesopt_trials", false]], "num_requested_initialization_trials (ax.telemetry.generation_strategy.generationstrategycreatedrecord attribute)": [[17, "ax.telemetry.generation_strategy.GenerationStrategyCreatedRecord.num_requested_initialization_trials", false]], "num_requested_initialization_trials (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_requested_initialization_trials", false]], "num_requested_other_trials (ax.telemetry.generation_strategy.generationstrategycreatedrecord attribute)": [[17, "ax.telemetry.generation_strategy.GenerationStrategyCreatedRecord.num_requested_other_trials", false]], "num_requested_other_trials (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_requested_other_trials", false]], "num_restarts (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.NUM_RESTARTS", false]], "num_running (ax.utils.testing.backend_simulator.backendsimulator property)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.num_running", false]], "num_trace_observations (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.NUM_TRACE_OBSERVATIONS", false]], "num_tracking_metrics (ax.telemetry.experiment.experimentcompletedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord.num_tracking_metrics", false]], "num_tracking_metrics (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_tracking_metrics", false]], "num_tracking_metrics (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.num_tracking_metrics", false]], "num_tracking_metrics (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_tracking_metrics", false]], "num_trials (ax.benchmark.benchmark_problem.benchmarkproblem attribute)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.num_trials", false]], "num_trials (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.num_trials", false]], "num_trials (ax.preview.api.configs.generationstrategyconfig attribute)": [[13, "ax.preview.api.configs.GenerationStrategyConfig.num_trials", false]], "num_trials_bad_due_to_err (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.num_trials_bad_due_to_err", false]], "num_trials_bad_due_to_err (ax.telemetry.scheduler.schedulercompletedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCompletedRecord.num_trials_bad_due_to_err", false]], "num_unordered_choice_parameters_large (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_unordered_choice_parameters_large", false]], "num_unordered_choice_parameters_large (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_unordered_choice_parameters_large", false]], "num_unordered_choice_parameters_medium (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_unordered_choice_parameters_medium", false]], "num_unordered_choice_parameters_medium (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_unordered_choice_parameters_medium", false]], "num_unordered_choice_parameters_small (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.num_unordered_choice_parameters_small", false]], "num_unordered_choice_parameters_small (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.num_unordered_choice_parameters_small", false]], "numpy_type_to_python_type() (in module ax.utils.common.typeutils_nonnative)": [[18, "ax.utils.common.typeutils_nonnative.numpy_type_to_python_type", false]], "object_attribute_dicts_equal() (in module ax.utils.common.equality)": [[18, "ax.utils.common.equality.object_attribute_dicts_equal", false]], "object_attribute_dicts_find_unequal_fields() (in module ax.utils.common.equality)": [[18, "ax.utils.common.equality.object_attribute_dicts_find_unequal_fields", false]], "object_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.object_from_json", false]], "object_to_json() (in module ax.storage.json_store.encoder)": [[16, "ax.storage.json_store.encoder.object_to_json", false]], "objective (ax.core.optimization_config.multiobjectiveoptimizationconfig property)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig.objective", false]], "objective (ax.core.optimization_config.optimizationconfig property)": [[3, "ax.core.optimization_config.OptimizationConfig.objective", false]], "objective (ax.core.utils.missingmetrics attribute)": [[3, "ax.core.utils.MissingMetrics.objective", false]], "objective (ax.service.ax_client.axclient property)": [[15, "ax.service.ax_client.AxClient.objective", false]], "objective (ax.storage.utils.metricintent attribute)": [[16, "ax.storage.utils.MetricIntent.OBJECTIVE", false]], "objective (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.OBJECTIVE", false]], "objective_dict (ax.metrics.chemistry.chemistrydata attribute)": [[9, "ax.metrics.chemistry.ChemistryData.objective_dict", false]], "objective_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.objective_from_json", false]], "objective_mean (ax.core.trial.trial property)": [[3, "ax.core.trial.Trial.objective_mean", false]], "objective_name (ax.service.ax_client.axclient property)": [[15, "ax.service.ax_client.AxClient.objective_name", false]], "objective_names (ax.service.ax_client.axclient property)": [[15, "ax.service.ax_client.AxClient.objective_names", false]], "objective_threshold (ax.storage.utils.metricintent attribute)": [[16, "ax.storage.utils.MetricIntent.OBJECTIVE_THRESHOLD", false]], "objective_threshold_constraint_from_str() (ax.service.utils.instantiation.instantiationbase class method)": [[15, "ax.service.utils.instantiation.InstantiationBase.objective_threshold_constraint_from_str", false]], "objective_threshold_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.objective_threshold_to_sqa", false]], "objective_thresholds (ax.core.optimization_config.multiobjectiveoptimizationconfig property)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig.objective_thresholds", false]], "objective_thresholds (ax.models.torch.botorch_modular.acquisition.acquisition property)": [[11, "ax.models.torch.botorch_modular.acquisition.Acquisition.objective_thresholds", false]], "objective_thresholds (ax.models.torch.utils.subsetmodeldata attribute)": [[11, "ax.models.torch.utils.SubsetModelData.objective_thresholds", false]], "objective_thresholds (ax.models.torch_base.torchoptconfig attribute)": [[11, "ax.models.torch_base.TorchOptConfig.objective_thresholds", false], [11, "id4", false]], "objective_thresholds (ax.plot.pareto_utils.paretofrontierresults attribute)": [[12, "ax.plot.pareto_utils.ParetoFrontierResults.objective_thresholds", false]], "objective_thresholds_dict (ax.core.optimization_config.multiobjectiveoptimizationconfig property)": [[3, "ax.core.optimization_config.MultiObjectiveOptimizationConfig.objective_thresholds_dict", false]], "objective_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.objective_to_dict", false]], "objective_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.objective_to_sqa", false]], "objective_weights (ax.models.torch.botorch_modular.acquisition.acquisition property)": [[11, "ax.models.torch.botorch_modular.acquisition.Acquisition.objective_weights", false]], "objective_weights (ax.models.torch.utils.subsetmodeldata attribute)": [[11, "ax.models.torch.utils.SubsetModelData.objective_weights", false]], "objective_weights (ax.models.torch_base.torchoptconfig attribute)": [[11, "ax.models.torch_base.TorchOptConfig.objective_weights", false], [11, "id5", false]], "objectiveproperties (class in ax.service.utils.instantiation)": [[15, "ax.service.utils.instantiation.ObjectiveProperties", false]], "objectnotfounderror": [[5, "ax.exceptions.core.ObjectNotFoundError", false]], "observation (class in ax.core.observation)": [[3, "ax.core.observation.Observation", false]], "observation_data_to_array() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.observation_data_to_array", false]], "observation_features (ax.modelbridge.base.genresults attribute)": [[10, "ax.modelbridge.base.GenResults.observation_features", false]], "observation_features_to_array() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.observation_features_to_array", false]], "observation_features_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.observation_features_to_dict", false]], "observationdata (class in ax.core.observation)": [[3, "ax.core.observation.ObservationData", false]], "observationfeatures (class in ax.core.observation)": [[3, "ax.core.observation.ObservationFeatures", false]], "observations_from_data() (in module ax.core.observation)": [[3, "ax.core.observation.observations_from_data", false]], "observations_from_map_data() (in module ax.core.observation)": [[3, "ax.core.observation.observations_from_map_data", false]], "observed (ax.modelbridge.cross_validation.cvresult attribute)": [[10, "ax.modelbridge.cross_validation.CVResult.observed", false]], "observed_hypervolume() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.observed_hypervolume", false]], "observed_pareto_frontier() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.observed_pareto_frontier", false]], "offline_optimized (ax.core.batch_trial.lifecyclestage attribute)": [[3, "ax.core.batch_trial.LifecycleStage.OFFLINE_OPTIMIZED", false]], "ok (ax.utils.common.result.err property)": [[18, "ax.utils.common.result.Err.ok", false]], "ok (ax.utils.common.result.ok property)": [[18, "ax.utils.common.result.Ok.ok", false]], "ok (ax.utils.common.result.result property)": [[18, "ax.utils.common.result.Result.ok", false]], "ok (class in ax.utils.common.result)": [[18, "ax.utils.common.result.Ok", false]], "onehot (class in ax.modelbridge.transforms.one_hot)": [[10, "ax.modelbridge.transforms.one_hot.OneHot", false]], "onehotencoder (class in ax.modelbridge.transforms.one_hot)": [[10, "ax.modelbridge.transforms.one_hot.OneHotEncoder", false]], "op (ax.core.parameter_constraint.sumconstraint property)": [[3, "ax.core.parameter_constraint.SumConstraint.op", false]], "opt_config_and_tracking_metrics_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.opt_config_and_tracking_metrics_from_sqa", false]], "opt_config_metrics (ax.models.torch_base.torchoptconfig attribute)": [[11, "ax.models.torch_base.TorchOptConfig.opt_config_metrics", false], [11, "id6", false]], "optimal_value (ax.benchmark.benchmark_problem.benchmarkproblem attribute)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.optimal_value", false]], "optimization_complete (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.optimization_complete", false]], "optimization_config (ax.benchmark.benchmark_problem.benchmarkproblem attribute)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.optimization_config", false]], "optimization_config (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.optimization_config", false]], "optimization_config (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.optimization_config", false]], "optimization_config (ax.core.multi_type_experiment.multitypeexperiment property)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.optimization_config", false]], "optimization_config (ax.modelbridge.base.basegenargs attribute)": [[10, "ax.modelbridge.base.BaseGenArgs.optimization_config", false]], "optimization_config_from_objectives() (ax.service.utils.instantiation.instantiationbase static method)": [[15, "ax.service.utils.instantiation.InstantiationBase.optimization_config_from_objectives", false]], "optimization_config_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.optimization_config_to_dict", false]], "optimization_config_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.optimization_config_to_sqa", false]], "optimization_times() (in module ax.plot.trace)": [[12, "ax.plot.trace.optimization_times", false]], "optimization_trace (ax.benchmark.benchmark_result.aggregatedbenchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.AggregatedBenchmarkResult.optimization_trace", false]], "optimization_trace (ax.benchmark.benchmark_result.benchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.BenchmarkResult.optimization_trace", false]], "optimization_trace_all_methods() (in module ax.plot.trace)": [[12, "ax.plot.trace.optimization_trace_all_methods", false]], "optimization_trace_single_method() (in module ax.plot.trace)": [[12, "ax.plot.trace.optimization_trace_single_method", false]], "optimization_trace_single_method_plotly() (in module ax.plot.trace)": [[12, "ax.plot.trace.optimization_trace_single_method_plotly", false]], "optimizationcomplete": [[5, "ax.exceptions.core.OptimizationComplete", false]], "optimizationcompletedrecord (class in ax.telemetry.optimization)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord", false]], "optimizationconfig (class in ax.core.optimization_config)": [[3, "ax.core.optimization_config.OptimizationConfig", false]], "optimizationconfigrequired": [[5, "ax.exceptions.generation_strategy.OptimizationConfigRequired", false]], "optimizationcreatedrecord (class in ax.telemetry.optimization)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord", false]], "optimizationloop (class in ax.service.managed_loop)": [[15, "ax.service.managed_loop.OptimizationLoop", false]], "optimizationresult (class in ax.service.scheduler)": [[15, "ax.service.scheduler.OptimizationResult", false]], "optimizationshouldstop": [[5, "ax.exceptions.core.OptimizationShouldStop", false]], "optimize() (ax.models.torch.botorch_modular.acquisition.acquisition method)": [[11, "ax.models.torch.botorch_modular.acquisition.Acquisition.optimize", false]], "optimize() (ax.models.torch.botorch_modular.sebo.seboacquisition method)": [[11, "ax.models.torch.botorch_modular.sebo.SEBOAcquisition.optimize", false]], "optimize() (in module ax.service.managed_loop)": [[15, "ax.service.managed_loop.optimize", false]], "optimizer_argparse() (in module ax.models.torch.botorch_modular.optimizer_argparse)": [[11, "ax.models.torch.botorch_modular.optimizer_argparse.optimizer_argparse", false]], "optimizer_kwargs (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.OPTIMIZER_KWARGS", false]], "optimum_objective_scatter() (in module ax.plot.trace)": [[12, "ax.plot.trace.optimum_objective_scatter", false]], "options (ax.models.torch.botorch_modular.acquisition.acquisition attribute)": [[11, "ax.models.torch.botorch_modular.acquisition.Acquisition.options", false]], "options (ax.service.scheduler.scheduler attribute)": [[15, "ax.service.scheduler.Scheduler.options", false]], "options (ax.service.scheduler.scheduler property)": [[15, "id2", false]], "options (ax.utils.testing.backend_simulator.backendsimulatorstate attribute)": [[18, "ax.utils.testing.backend_simulator.BackendSimulatorState.options", false]], "oracle_trace (ax.benchmark.benchmark_result.benchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.BenchmarkResult.oracle_trace", false]], "orange (ax.plot.color.colors attribute)": [[12, "ax.plot.color.COLORS.ORANGE", false]], "orchestrationconfig (class in ax.preview.api.configs)": [[13, "ax.preview.api.configs.OrchestrationConfig", false]], "order (ax.storage.utils.parameterconstrainttype attribute)": [[16, "ax.storage.utils.ParameterConstraintType.ORDER", false]], "order_parameter_constraint_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.order_parameter_constraint_to_dict", false]], "orderconstraint (class in ax.core.parameter_constraint)": [[3, "ax.core.parameter_constraint.OrderConstraint", false]], "orderedchoiceencode (class in ax.modelbridge.transforms.choice_encode)": [[10, "ax.modelbridge.transforms.choice_encode.OrderedChoiceEncode", false]], "orderedchoicetointegerrange (class in ax.modelbridge.transforms.choice_encode)": [[10, "ax.modelbridge.transforms.choice_encode.OrderedChoiceToIntegerRange", false]], "orearlystoppingstrategy (class in ax.early_stopping.strategies.logical)": [[4, "ax.early_stopping.strategies.logical.OrEarlyStoppingStrategy", false]], "out_of_sample (ax.plot.base.plotdata attribute)": [[12, "ax.plot.base.PlotData.out_of_sample", false]], "outcome_constraint (ax.storage.utils.metricintent attribute)": [[16, "ax.storage.utils.MetricIntent.OUTCOME_CONSTRAINT", false]], "outcome_constraint_from_str() (ax.service.utils.instantiation.instantiationbase class method)": [[15, "ax.service.utils.instantiation.InstantiationBase.outcome_constraint_from_str", false]], "outcome_constraint_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.outcome_constraint_to_dict", false]], "outcome_constraint_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.outcome_constraint_to_sqa", false]], "outcome_constraints (ax.core.optimization_config.optimizationconfig property)": [[3, "ax.core.optimization_config.OptimizationConfig.outcome_constraints", false]], "outcome_constraints (ax.core.utils.missingmetrics attribute)": [[3, "ax.core.utils.MissingMetrics.outcome_constraints", false]], "outcome_constraints (ax.models.torch.utils.subsetmodeldata attribute)": [[11, "ax.models.torch.utils.SubsetModelData.outcome_constraints", false]], "outcome_constraints (ax.models.torch_base.torchoptconfig attribute)": [[11, "ax.models.torch_base.TorchOptConfig.outcome_constraints", false], [11, "id7", false]], "outcome_names (ax.benchmark.benchmark_runner.benchmarkrunner property)": [[2, "ax.benchmark.benchmark_runner.BenchmarkRunner.outcome_names", false]], "outcome_names (ax.benchmark.benchmark_test_function.benchmarktestfunction attribute)": [[2, "ax.benchmark.benchmark_test_function.BenchmarkTestFunction.outcome_names", false]], "outcome_names (ax.benchmark.benchmark_test_functions.botorch_test.botorchtestfunction attribute)": [[2, "ax.benchmark.benchmark_test_functions.botorch_test.BoTorchTestFunction.outcome_names", false]], "outcome_names (ax.benchmark.benchmark_test_functions.surrogate.surrogatetestfunction attribute)": [[2, "ax.benchmark.benchmark_test_functions.surrogate.SurrogateTestFunction.outcome_names", false]], "outcome_names (ax.benchmark.problems.hpo.torchvision.pytorchcnntorchvisionbenchmarktestfunction attribute)": [[2, "ax.benchmark.problems.hpo.torchvision.PyTorchCNNTorchvisionBenchmarkTestFunction.outcome_names", false]], "outcome_names (ax.utils.testing.benchmark_stubs.dummytestfunction attribute)": [[18, "ax.utils.testing.benchmark_stubs.DummyTestFunction.outcome_names", false]], "outcome_transform_classes (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.outcome_transform_classes", false]], "outcome_transform_classes (ax.models.torch.botorch_modular.utils.modelconfig attribute)": [[11, "ax.models.torch.botorch_modular.utils.ModelConfig.outcome_transform_classes", false]], "outcome_transform_options (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.outcome_transform_options", false]], "outcome_transform_options (ax.models.torch.botorch_modular.utils.modelconfig attribute)": [[11, "ax.models.torch.botorch_modular.utils.ModelConfig.outcome_transform_options", false]], "outcome_transform_registry (in module ax.storage.botorch_modular_registry)": [[16, "ax.storage.botorch_modular_registry.OUTCOME_TRANSFORM_REGISTRY", false]], "outcome_transform_type_from_json() (in module ax.storage.json_store.decoders)": [[16, "ax.storage.json_store.decoders.outcome_transform_type_from_json", false]], "outcomes (ax.modelbridge.discrete.discretemodelbridge attribute)": [[10, "ax.modelbridge.discrete.DiscreteModelBridge.outcomes", false]], "outcomes (ax.modelbridge.torch.torchmodelbridge attribute)": [[10, "ax.modelbridge.torch.TorchModelBridge.outcomes", false]], "outcomes (ax.models.torch.botorch_modular.surrogate.surrogate property)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate.outcomes", false]], "outcomes (ax.models.torch.botorch_modular.surrogate.surrogatespec attribute)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec.outcomes", false]], "overwrite_existing_data() (ax.metrics.noisy_function_map.noisyfunctionmapmetric class method)": [[9, "ax.metrics.noisy_function_map.NoisyFunctionMapMetric.overwrite_existing_data", false]], "owner (ax.preview.api.configs.experimentconfig attribute)": [[13, "ax.preview.api.configs.ExperimentConfig.owner", false]], "owner (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.owner", false]], "p_html() (in module ax.utils.report.render)": [[18, "ax.utils.report.render.p_html", false]], "pairwise_pref_metric_eval() (in module ax.utils.testing.preference_stubs)": [[18, "ax.utils.testing.preference_stubs.pairwise_pref_metric_eval", false]], "pairwise_preference_query (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.PAIRWISE_PREFERENCE_QUERY", false]], "pairwisemodelbridge (class in ax.modelbridge.pairwise)": [[10, "ax.modelbridge.pairwise.PairwiseModelBridge", false]], "parallelcoordinatesplot (class in ax.analysis.plotly.parallel_coordinates)": [[0, "ax.analysis.plotly.parallel_coordinates.ParallelCoordinatesPlot", false]], "parallelism (ax.preview.api.configs.orchestrationconfig attribute)": [[13, "ax.preview.api.configs.OrchestrationConfig.parallelism", false]], "param_df (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.param_df", false]], "param_dicts (ax.plot.pareto_utils.paretofrontierresults attribute)": [[12, "ax.plot.pareto_utils.ParetoFrontierResults.param_dicts", false]], "param_names (ax.metrics.chemistry.chemistrydata attribute)": [[9, "ax.metrics.chemistry.ChemistryData.param_names", false]], "param_names (ax.metrics.noisy_function.genericnoisyfunctionmetric property)": [[9, "ax.metrics.noisy_function.GenericNoisyFunctionMetric.param_names", false]], "parameter (class in ax.core.parameter)": [[3, "ax.core.parameter.Parameter", false]], "parameter_constraint_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.parameter_constraint_from_sqa", false]], "parameter_constraint_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.parameter_constraint_to_dict", false]], "parameter_constraint_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.parameter_constraint_to_sqa", false]], "parameter_constraints (ax.preview.api.configs.experimentconfig attribute)": [[13, "ax.preview.api.configs.ExperimentConfig.parameter_constraints", false]], "parameter_constraints (ax.storage.sqa_store.sqa_classes.sqaexperiment attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAExperiment.parameter_constraints", false]], "parameter_constraints (ax.storage.sqa_store.sqa_classes.sqageneratorrun attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAGeneratorRun.parameter_constraints", false]], "parameter_constraints_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.parameter_constraints_from_json", false]], "parameter_distribution_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.parameter_distribution_to_dict", false]], "parameter_distribution_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.parameter_distribution_to_sqa", false]], "parameter_distributions_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.parameter_distributions_from_sqa", false]], "parameter_from_json() (ax.service.utils.instantiation.instantiationbase class method)": [[15, "ax.service.utils.instantiation.InstantiationBase.parameter_from_json", false]], "parameter_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.parameter_from_sqa", false]], "parameter_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.parameter_to_sqa", false]], "parameter_type (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.parameter_type", false]], "parameter_type (ax.preview.api.configs.choiceparameterconfig attribute)": [[13, "ax.preview.api.configs.ChoiceParameterConfig.parameter_type", false]], "parameter_type (ax.preview.api.configs.rangeparameterconfig attribute)": [[13, "ax.preview.api.configs.RangeParameterConfig.parameter_type", false]], "parameterconstraint (class in ax.core.parameter_constraint)": [[3, "ax.core.parameter_constraint.ParameterConstraint", false]], "parameterconstrainttype (class in ax.storage.utils)": [[16, "ax.storage.utils.ParameterConstraintType", false]], "parameterdistribution (class in ax.core.parameter_distribution)": [[3, "ax.core.parameter_distribution.ParameterDistribution", false]], "parameters (ax.core.arm.arm property)": [[3, "ax.core.arm.Arm.parameters", false]], "parameters (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.parameters", false]], "parameters (ax.core.observation.observationfeatures attribute)": [[3, "ax.core.observation.ObservationFeatures.parameters", false]], "parameters (ax.core.parameter_constraint.orderconstraint property)": [[3, "ax.core.parameter_constraint.OrderConstraint.parameters", false]], "parameters (ax.core.parameter_constraint.sumconstraint property)": [[3, "ax.core.parameter_constraint.SumConstraint.parameters", false]], "parameters (ax.modelbridge.discrete.discretemodelbridge attribute)": [[10, "ax.modelbridge.discrete.DiscreteModelBridge.parameters", false]], "parameters (ax.modelbridge.torch.torchmodelbridge attribute)": [[10, "ax.modelbridge.torch.TorchModelBridge.parameters", false]], "parameters (ax.plot.base.plotinsamplearm attribute)": [[12, "ax.plot.base.PlotInSampleArm.parameters", false]], "parameters (ax.plot.base.plotoutofsamplearm attribute)": [[12, "ax.plot.base.PlotOutOfSampleArm.parameters", false]], "parameters (ax.preview.api.configs.experimentconfig attribute)": [[13, "ax.preview.api.configs.ExperimentConfig.parameters", false]], "parameters (ax.service.utils.instantiation.fixedfeatures attribute)": [[15, "ax.service.utils.instantiation.FixedFeatures.parameters", false]], "parameters (ax.storage.sqa_store.sqa_classes.sqaexperiment attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAExperiment.parameters", false]], "parameters (ax.storage.sqa_store.sqa_classes.sqageneratorrun attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAGeneratorRun.parameters", false]], "parameters_with_map_keys (ax.modelbridge.map_torch.maptorchmodelbridge property)": [[10, "ax.modelbridge.map_torch.MapTorchModelBridge.parameters_with_map_keys", false]], "parameterscaling (class in ax.preview.api.configs)": [[13, "ax.preview.api.configs.ParameterScaling", false]], "parametertype (class in ax.core.parameter)": [[3, "ax.core.parameter.ParameterType", false]], "parametertype (class in ax.preview.api.configs)": [[13, "ax.preview.api.configs.ParameterType", false]], "pareto_frontier() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate.pareto_frontier", false]], "pareto_frontier() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.pareto_frontier", false]], "pareto_frontier_evaluator() (in module ax.models.torch.botorch_moo_defaults)": [[11, "ax.models.torch.botorch_moo_defaults.pareto_frontier_evaluator", false]], "pareto_frontier_scatter_2d_plotly() (in module ax.service.utils.report_utils)": [[15, "ax.service.utils.report_utils.pareto_frontier_scatter_2d_plotly", false]], "paretofrontierresults (class in ax.plot.pareto_utils)": [[12, "ax.plot.pareto_utils.ParetoFrontierResults", false]], "parse_observation_features() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.parse_observation_features", false]], "pass (ax.analysis.healthcheck.healthcheck_analysis.healthcheckstatus attribute)": [[0, "ax.analysis.healthcheck.healthcheck_analysis.HealthcheckStatus.PASS", false]], "pathlib_from_json() (in module ax.storage.json_store.decoders)": [[16, "ax.storage.json_store.decoders.pathlib_from_json", false]], "pathlib_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.pathlib_to_dict", false]], "pending_observations (ax.modelbridge.base.basegenargs attribute)": [[10, "ax.modelbridge.base.BaseGenArgs.pending_observations", false]], "pending_observations (ax.models.torch_base.torchoptconfig attribute)": [[11, "ax.models.torch_base.TorchOptConfig.pending_observations", false], [11, "id8", false]], "pending_observations_as_array_list() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.pending_observations_as_array_list", false]], "pending_trials (ax.service.scheduler.scheduler property)": [[15, "ax.service.scheduler.Scheduler.pending_trials", false]], "percentile_early_stopping_strategy_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.percentile_early_stopping_strategy_to_dict", false]], "percentileearlystoppingstrategy (class in ax.early_stopping.strategies.percentile)": [[4, "ax.early_stopping.strategies.percentile.PercentileEarlyStoppingStrategy", false]], "pick_best_out_of_sample_point_acqf_class() (in module ax.models.torch.utils)": [[11, "ax.models.torch.utils.pick_best_out_of_sample_point_acqf_class", false]], "pink (ax.plot.color.colors attribute)": [[12, "ax.plot.color.COLORS.PINK", false]], "plot_bandit_rollout() (in module ax.plot.bandit_rollout)": [[12, "ax.plot.bandit_rollout.plot_bandit_rollout", false]], "plot_config_to_html() (in module ax.plot.render)": [[12, "ax.plot.render.plot_config_to_html", false]], "plot_contour() (in module ax.plot.contour)": [[12, "ax.plot.contour.plot_contour", false]], "plot_contour_plotly() (in module ax.plot.contour)": [[12, "ax.plot.contour.plot_contour_plotly", false]], "plot_feature_importance() (in module ax.plot.feature_importances)": [[12, "ax.plot.feature_importances.plot_feature_importance", false]], "plot_feature_importance_by_feature() (in module ax.plot.feature_importances)": [[12, "ax.plot.feature_importances.plot_feature_importance_by_feature", false]], "plot_feature_importance_by_feature_plotly() (in module ax.plot.feature_importances)": [[12, "ax.plot.feature_importances.plot_feature_importance_by_feature_plotly", false]], "plot_feature_importance_by_metric() (in module ax.plot.feature_importances)": [[12, "ax.plot.feature_importances.plot_feature_importance_by_metric", false]], "plot_feature_importance_by_metric_plotly() (in module ax.plot.feature_importances)": [[12, "ax.plot.feature_importances.plot_feature_importance_by_metric_plotly", false]], "plot_feature_importance_plotly() (in module ax.plot.feature_importances)": [[12, "ax.plot.feature_importances.plot_feature_importance_plotly", false]], "plot_fitted() (in module ax.plot.scatter)": [[12, "ax.plot.scatter.plot_fitted", false]], "plot_marginal_effects() (in module ax.plot.marginal_effects)": [[12, "ax.plot.marginal_effects.plot_marginal_effects", false]], "plot_multiple_metrics() (in module ax.plot.scatter)": [[12, "ax.plot.scatter.plot_multiple_metrics", false]], "plot_multiple_pareto_frontiers() (in module ax.plot.pareto_frontier)": [[12, "ax.plot.pareto_frontier.plot_multiple_pareto_frontiers", false]], "plot_objective_value_vs_trial_index() (in module ax.plot.trace)": [[12, "ax.plot.trace.plot_objective_value_vs_trial_index", false]], "plot_objective_vs_constraints() (in module ax.plot.scatter)": [[12, "ax.plot.scatter.plot_objective_vs_constraints", false]], "plot_parallel_coordinates() (in module ax.plot.parallel_coordinates)": [[12, "ax.plot.parallel_coordinates.plot_parallel_coordinates", false]], "plot_parallel_coordinates_plotly() (in module ax.plot.parallel_coordinates)": [[12, "ax.plot.parallel_coordinates.plot_parallel_coordinates_plotly", false]], "plot_pareto_frontier() (in module ax.plot.pareto_frontier)": [[12, "ax.plot.pareto_frontier.plot_pareto_frontier", false]], "plot_relative_feature_importance() (in module ax.plot.feature_importances)": [[12, "ax.plot.feature_importances.plot_relative_feature_importance", false]], "plot_relative_feature_importance_plotly() (in module ax.plot.feature_importances)": [[12, "ax.plot.feature_importances.plot_relative_feature_importance_plotly", false]], "plot_slice() (in module ax.plot.slice)": [[12, "ax.plot.slice.plot_slice", false]], "plot_slice_plotly() (in module ax.plot.slice)": [[12, "ax.plot.slice.plot_slice_plotly", false]], "plotdata (class in ax.plot.base)": [[12, "ax.plot.base.PlotData", false]], "plotinsamplearm (class in ax.plot.base)": [[12, "ax.plot.base.PlotInSampleArm", false]], "plotly_color_scale() (in module ax.plot.color)": [[12, "ax.plot.color.plotly_color_scale", false]], "plotlyanalysis (class in ax.analysis.plotly.plotly_analysis)": [[0, "ax.analysis.plotly.plotly_analysis.PlotlyAnalysis", false]], "plotlyanalysiscard (class in ax.analysis.plotly.plotly_analysis)": [[0, "ax.analysis.plotly.plotly_analysis.PlotlyAnalysisCard", false]], "plotmetric (class in ax.plot.base)": [[12, "ax.plot.base.PlotMetric", false]], "plotoutofsamplearm (class in ax.plot.base)": [[12, "ax.plot.base.PlotOutOfSampleArm", false]], "points (ax.models.torch_base.torchgenresults attribute)": [[11, "ax.models.torch_base.TorchGenResults.points", false]], "poll_and_process_results() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.poll_and_process_results", false]], "poll_available_capacity() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.poll_available_capacity", false]], "poll_exception() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.poll_exception", false]], "poll_trial_status() (ax.benchmark.benchmark_runner.benchmarkrunner method)": [[2, "ax.benchmark.benchmark_runner.BenchmarkRunner.poll_trial_status", false]], "poll_trial_status() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.poll_trial_status", false]], "poll_trial_status() (ax.runners.simulated_backend.simulatedbackendrunner method)": [[14, "ax.runners.simulated_backend.SimulatedBackendRunner.poll_trial_status", false]], "poll_trial_status() (ax.runners.single_running_trial_mixin.singlerunningtrialmixin method)": [[14, "ax.runners.single_running_trial_mixin.SingleRunningTrialMixin.poll_trial_status", false]], "poll_trial_status() (ax.runners.synthetic.syntheticrunner method)": [[14, "ax.runners.synthetic.SyntheticRunner.poll_trial_status", false]], "poll_trial_status() (ax.runners.torchx.torchxrunner method)": [[14, "ax.runners.torchx.TorchXRunner.poll_trial_status", false]], "poll_trial_status() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.poll_trial_status", false]], "positive_part_james_stein() (in module ax.utils.stats.statstools)": [[18, "ax.utils.stats.statstools.positive_part_james_stein", false]], "posterior_derivative() (in module ax.utils.sensitivity.derivative_gp)": [[18, "ax.utils.sensitivity.derivative_gp.posterior_derivative", false]], "powertransformy (class in ax.modelbridge.transforms.power_transform_y)": [[10, "ax.modelbridge.transforms.power_transform_y.PowerTransformY", false]], "pred (ax.plot.base.plotmetric attribute)": [[12, "ax.plot.base.PlotMetric.pred", false]], "predict() (ax.modelbridge.base.modelbridge method)": [[10, "ax.modelbridge.base.ModelBridge.predict", false]], "predict() (ax.models.discrete.thompson.thompsonsampler method)": [[11, "ax.models.discrete.thompson.ThompsonSampler.predict", false]], "predict() (ax.models.discrete_base.discretemodel method)": [[11, "ax.models.discrete_base.DiscreteModel.predict", false]], "predict() (ax.models.model_utils.torchmodellike method)": [[11, "ax.models.model_utils.TorchModelLike.predict", false]], "predict() (ax.models.torch.botorch.botorchmodel method)": [[11, "ax.models.torch.botorch.BotorchModel.predict", false]], "predict() (ax.models.torch.botorch_modular.model.botorchmodel method)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.predict", false]], "predict() (ax.models.torch.botorch_modular.surrogate.surrogate method)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate.predict", false]], "predict() (ax.models.torch.randomforest.randomforest method)": [[11, "ax.models.torch.randomforest.RandomForest.predict", false]], "predict() (ax.models.torch_base.torchmodel method)": [[11, "ax.models.torch_base.TorchModel.predict", false]], "predict_at_point() (in module ax.modelbridge.prediction_utils)": [[10, "ax.modelbridge.prediction_utils.predict_at_point", false]], "predict_by_features() (in module ax.modelbridge.prediction_utils)": [[10, "ax.modelbridge.prediction_utils.predict_by_features", false]], "predict_from_model() (in module ax.models.torch.utils)": [[11, "ax.models.torch.utils.predict_from_model", false]], "predicted (ax.modelbridge.cross_validation.cvresult attribute)": [[10, "ax.modelbridge.cross_validation.CVResult.predicted", false]], "predicted_hypervolume() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.predicted_hypervolume", false]], "predicted_pareto_frontier() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.predicted_pareto_frontier", false]], "predictedeffectsplot (class in ax.analysis.plotly.arm_effects.predicted_effects)": [[0, "ax.analysis.plotly.arm_effects.predicted_effects.PredictedEffectsPlot", false]], "preference_data (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.PREFERENCE_DATA", false]], "prepare_arm_effects_plot() (in module ax.analysis.plotly.arm_effects.utils)": [[0, "ax.analysis.plotly.arm_effects.utils.prepare_arm_effects_plot", false]], "prepare_experiment_for_plotting() (in module ax.plot.parallel_coordinates)": [[12, "ax.plot.parallel_coordinates.prepare_experiment_for_plotting", false]], "previous_node (ax.modelbridge.generation_node.generationnode property)": [[10, "ax.modelbridge.generation_node.GenerationNode.previous_node", false]], "primary_metric (ax.plot.pareto_utils.paretofrontierresults attribute)": [[12, "ax.plot.pareto_utils.ParetoFrontierResults.primary_metric", false]], "probitlinkmean() (in module ax.utils.sensitivity.sobol_measures)": [[18, "ax.utils.sensitivity.sobol_measures.ProbitLinkMean", false]], "process_bind_param() (ax.storage.sqa_store.json.jsonencodedobject method)": [[16, "ax.storage.sqa_store.json.JSONEncodedObject.process_bind_param", false]], "process_bind_param() (ax.storage.sqa_store.sqa_enum.basenullableenum method)": [[16, "ax.storage.sqa_store.sqa_enum.BaseNullableEnum.process_bind_param", false]], "process_bind_param() (ax.storage.sqa_store.timestamp.inttimestamp method)": [[16, "ax.storage.sqa_store.timestamp.IntTimestamp.process_bind_param", false]], "process_contextual_datasets() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.process_contextual_datasets", false]], "process_result_value() (ax.storage.sqa_store.json.jsonencodedobject method)": [[16, "ax.storage.sqa_store.json.JSONEncodedObject.process_result_value", false]], "process_result_value() (ax.storage.sqa_store.sqa_enum.basenullableenum method)": [[16, "ax.storage.sqa_store.sqa_enum.BaseNullableEnum.process_result_value", false]], "process_result_value() (ax.storage.sqa_store.timestamp.inttimestamp method)": [[16, "ax.storage.sqa_store.timestamp.IntTimestamp.process_result_value", false]], "product_surface (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.product_surface", false]], "project (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.PROJECT", false]], "python_type (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.python_type", false]], "pytorchcnntorchvisionbenchmarktestfunction (class in ax.benchmark.problems.hpo.torchvision)": [[2, "ax.benchmark.problems.hpo.torchvision.PyTorchCNNTorchvisionBenchmarkTestFunction", false]], "qmc (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.QMC", false]], "queued (ax.utils.testing.backend_simulator.backendsimulatorstate attribute)": [[18, "ax.utils.testing.backend_simulator.BackendSimulatorState.queued", false]], "queued (ax.utils.testing.backend_simulator.simstatus attribute)": [[18, "ax.utils.testing.backend_simulator.SimStatus.queued", false], [18, "id2", false]], "random() (in module ax.metrics.branin_map)": [[9, "ax.metrics.branin_map.random", false]], "random_split (ax.core.observation.observationfeatures attribute)": [[3, "ax.core.observation.ObservationFeatures.random_split", false]], "randomforest (class in ax.models.torch.randomforest)": [[11, "ax.models.torch.randomforest.RandomForest", false]], "randomize_objective_weights() (in module ax.models.torch.utils)": [[11, "ax.models.torch.utils.randomize_objective_weights", false]], "randomized_onehot_round() (in module ax.modelbridge.transforms.rounding)": [[10, "ax.modelbridge.transforms.rounding.randomized_onehot_round", false]], "randomized_round() (in module ax.modelbridge.transforms.rounding)": [[10, "ax.modelbridge.transforms.rounding.randomized_round", false]], "randomized_round_parameters() (in module ax.modelbridge.transforms.rounding)": [[10, "ax.modelbridge.transforms.rounding.randomized_round_parameters", false]], "randommodel (class in ax.models.random.base)": [[11, "ax.models.random.base.RandomModel", false]], "range (ax.storage.utils.domaintype attribute)": [[16, "ax.storage.utils.DomainType.RANGE", false]], "range_parameter_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.range_parameter_to_dict", false]], "rangeparameter (class in ax.core.parameter)": [[3, "ax.core.parameter.RangeParameter", false]], "rangeparameterconfig (class in ax.preview.api.configs)": [[13, "ax.preview.api.configs.RangeParameterConfig", false]], "raw_data_to_evaluation() (in module ax.core.formatting_utils)": [[3, "ax.core.formatting_utils.raw_data_to_evaluation", false]], "raw_inner_samples (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.RAW_INNER_SAMPLES", false]], "raw_samples (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.RAW_SAMPLES", false]], "reason (ax.core.batch_trial.abandonedarm attribute)": [[3, "ax.core.batch_trial.AbandonedArm.reason", false]], "reason_prefix (ax.analysis.healthcheck.can_generate_candidates.cangeneratecandidatesanalysis attribute)": [[0, "ax.analysis.healthcheck.can_generate_candidates.CanGenerateCandidatesAnalysis.REASON_PREFIX", false]], "recombine_observations() (in module ax.core.observation)": [[3, "ax.core.observation.recombine_observations", false]], "recommend_best_observed_point() (in module ax.models.torch.botorch_defaults)": [[11, "ax.models.torch.botorch_defaults.recommend_best_observed_point", false]], "recommend_best_out_of_sample_point() (in module ax.models.torch.botorch_defaults)": [[11, "ax.models.torch.botorch_defaults.recommend_best_out_of_sample_point", false]], "reductioncriterion (class in ax.modelbridge.best_model_selector)": [[10, "ax.modelbridge.best_model_selector.ReductionCriterion", false]], "register_acquisition() (in module ax.storage.botorch_modular_registry)": [[16, "ax.storage.botorch_modular_registry.register_acquisition", false]], "register_acquisition_function() (in module ax.storage.botorch_modular_registry)": [[16, "ax.storage.botorch_modular_registry.register_acquisition_function", false]], "register_kernel() (in module ax.storage.botorch_modular_registry)": [[16, "ax.storage.botorch_modular_registry.register_kernel", false]], "register_metrics() (in module ax.storage.metric_registry)": [[16, "ax.storage.metric_registry.register_metrics", false]], "register_model() (in module ax.storage.botorch_modular_registry)": [[16, "ax.storage.botorch_modular_registry.register_model", false]], "register_runner() (in module ax.storage.runner_registry)": [[16, "ax.storage.runner_registry.register_runner", false]], "register_runners() (in module ax.storage.runner_registry)": [[16, "ax.storage.runner_registry.register_runners", false]], "registrybundle (class in ax.storage.registry_bundle)": [[16, "ax.storage.registry_bundle.RegistryBundle", false]], "registrybundlebase (class in ax.storage.registry_bundle)": [[16, "ax.storage.registry_bundle.RegistryBundleBase", false]], "rejection_sample() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.rejection_sample", false]], "rel (ax.plot.base.plotmetric attribute)": [[12, "ax.plot.base.PlotMetric.rel", false]], "relativize (class in ax.modelbridge.transforms.relativize)": [[10, "ax.modelbridge.transforms.relativize.Relativize", false]], "relativize() (in module ax.plot.helper)": [[12, "ax.plot.helper.relativize", false]], "relativize() (in module ax.utils.stats.statstools)": [[18, "ax.utils.stats.statstools.relativize", false]], "relativize_data() (in module ax.plot.helper)": [[12, "ax.plot.helper.relativize_data", false]], "relativize_data() (in module ax.utils.stats.statstools)": [[18, "ax.utils.stats.statstools.relativize_data", false]], "relativizewithconstantcontrol (class in ax.modelbridge.transforms.relativize)": [[10, "ax.modelbridge.transforms.relativize.RelativizeWithConstantControl", false]], "remove_tracking_metric() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.remove_tracking_metric", false]], "remove_tracking_metric() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.remove_tracking_metric", false]], "remove_tracking_metric() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.remove_tracking_metric", false]], "removefixed (class in ax.modelbridge.transforms.remove_fixed)": [[10, "ax.modelbridge.transforms.remove_fixed.RemoveFixed", false]], "render() (in module ax.utils.notebook.plotting)": [[18, "ax.utils.notebook.plotting.render", false]], "render_report_elements() (in module ax.utils.report.render)": [[18, "ax.utils.report.render.render_report_elements", false]], "report_inference_value_as_trace (ax.benchmark.benchmark_problem.benchmarkproblem attribute)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.report_inference_value_as_trace", false]], "report_results() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.report_results", false]], "required_dimensionality (ax.utils.measurement.synthetic_functions.syntheticfunction property)": [[18, "ax.utils.measurement.synthetic_functions.SyntheticFunction.required_dimensionality", false]], "reset() (ax.utils.testing.backend_simulator.backendsimulator method)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.reset", false]], "reset_runners() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.reset_runners", false]], "reset_runners() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.reset_runners", false]], "resize_subtitles() (in module ax.plot.helper)": [[12, "ax.plot.helper.resize_subtitles", false]], "result (class in ax.utils.common.result)": [[18, "ax.utils.common.result.Result", false]], "results (ax.benchmark.benchmark_result.aggregatedbenchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.AggregatedBenchmarkResult.results", false]], "resumed_from_storage_ts (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.RESUMED_FROM_STORAGE_TS", false]], "retry_on_exception() (in module ax.utils.common.executils)": [[18, "ax.utils.common.executils.retry_on_exception", false]], "reverse_outcome_transform_registry (in module ax.storage.botorch_modular_registry)": [[16, "ax.storage.botorch_modular_registry.REVERSE_OUTCOME_TRANSFORM_REGISTRY", false]], "rf (ax.metrics.sklearn.sklearnmodeltype attribute)": [[9, "ax.metrics.sklearn.SklearnModelType.RF", false]], "rgb() (in module ax.plot.helper)": [[12, "ax.plot.helper.rgb", false]], "rgba() (in module ax.plot.color)": [[12, "ax.plot.color.rgba", false]], "risk_measure (ax.models.torch_base.torchoptconfig attribute)": [[11, "ax.models.torch_base.TorchOptConfig.risk_measure", false], [11, "id9", false]], "risk_measure (ax.storage.utils.metricintent attribute)": [[16, "ax.storage.utils.MetricIntent.RISK_MEASURE", false]], "risk_measure_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.risk_measure_to_dict", false]], "risk_measure_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.risk_measure_to_sqa", false]], "riskmeasure (class in ax.core.risk_measures)": [[3, "ax.core.risk_measures.RiskMeasure", false]], "robust_search_space_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.robust_search_space_to_dict", false]], "robust_search_space_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.robust_search_space_to_sqa", false]], "rounding_func (ax.models.torch_base.torchoptconfig attribute)": [[11, "ax.models.torch_base.TorchOptConfig.rounding_func", false], [11, "id10", false]], "run() (ax.benchmark.benchmark_runner.benchmarkrunner method)": [[2, "ax.benchmark.benchmark_runner.BenchmarkRunner.run", false]], "run() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.run", false]], "run() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.run", false]], "run() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.run", false]], "run() (ax.runners.simulated_backend.simulatedbackendrunner method)": [[14, "ax.runners.simulated_backend.SimulatedBackendRunner.run", false]], "run() (ax.runners.synthetic.syntheticrunner method)": [[14, "ax.runners.synthetic.SyntheticRunner.run", false]], "run() (ax.runners.torchx.torchxrunner method)": [[14, "ax.runners.torchx.TorchXRunner.run", false]], "run() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.run", false]], "run() (ax.utils.flake8_plugins.docstring_checker.docstringchecker method)": [[18, "ax.utils.flake8_plugins.docstring_checker.DocstringChecker.run", false]], "run() (ax.utils.testing.core_stubs.customtestrunner method)": [[18, "ax.utils.testing.core_stubs.CustomTestRunner.run", false]], "run_all_trials() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.run_all_trials", false]], "run_branin_experiment_with_generation_strategy() (in module ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.run_branin_experiment_with_generation_strategy", false]], "run_metadata (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.run_metadata", false]], "run_metadata_report_keys (ax.core.runner.runner property)": [[3, "ax.core.runner.Runner.run_metadata_report_keys", false]], "run_metadata_report_keys (ax.runners.synthetic.syntheticrunner property)": [[14, "ax.runners.synthetic.SyntheticRunner.run_metadata_report_keys", false]], "run_multiple() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.run_multiple", false]], "run_n_trials() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.run_n_trials", false]], "run_trial() (ax.service.managed_loop.optimizationloop method)": [[15, "ax.service.managed_loop.OptimizationLoop.run_trial", false]], "run_trial() (ax.utils.testing.backend_simulator.backendsimulator method)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.run_trial", false]], "run_trials() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.run_trials", false]], "run_trials_and_yield_results() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.run_trials_and_yield_results", false]], "run_trials_in_batches (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.run_trials_in_batches", false], [15, "id17", false]], "run_trials_with_gs() (in module ax.utils.testing.utils)": [[18, "ax.utils.testing.utils.run_trials_with_gs", false]], "runner (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.runner", false]], "runner (ax.service.scheduler.scheduler property)": [[15, "ax.service.scheduler.Scheduler.runner", false]], "runner (ax.storage.sqa_store.sqa_classes.sqatrial attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQATrial.runner", false]], "runner (class in ax.core.runner)": [[3, "ax.core.runner.Runner", false]], "runner_cls (ax.telemetry.experiment.experimentcreatedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCreatedRecord.runner_cls", false]], "runner_cls (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.runner_cls", false]], "runner_for_trial() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.runner_for_trial", false]], "runner_for_trial() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.runner_for_trial", false]], "runner_for_trial_type() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.runner_for_trial_type", false]], "runner_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.runner_from_sqa", false]], "runner_registry (ax.storage.registry_bundle.registrybundlebase property)": [[16, "ax.storage.registry_bundle.RegistryBundleBase.runner_registry", false]], "runner_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.runner_to_dict", false]], "runner_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.runner_to_sqa", false]], "runners (ax.storage.sqa_store.sqa_classes.sqaexperiment attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAExperiment.runners", false]], "running (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.RUNNING", false]], "running (ax.utils.testing.backend_simulator.backendsimulatorstate attribute)": [[18, "ax.utils.testing.backend_simulator.BackendSimulatorState.running", false]], "running (ax.utils.testing.backend_simulator.simstatus attribute)": [[18, "ax.utils.testing.backend_simulator.SimStatus.running", false], [18, "id3", false]], "running_trial_indices (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.running_trial_indices", false]], "running_trial_indices (ax.service.scheduler.scheduler property)": [[15, "ax.service.scheduler.Scheduler.running_trial_indices", false]], "running_trials (ax.service.scheduler.scheduler property)": [[15, "ax.service.scheduler.Scheduler.running_trials", false]], "saas_mtgp (ax.modelbridge.registry.models attribute)": [[10, "ax.modelbridge.registry.Models.SAAS_MTGP", false]], "saasbo (ax.modelbridge.registry.models attribute)": [[10, "ax.modelbridge.registry.Models.SAASBO", false]], "sacbo (class in ax.models.torch.cbo_sac)": [[11, "ax.models.torch.cbo_sac.SACBO", false]], "same_elements() (in module ax.utils.common.equality)": [[18, "ax.utils.common.equality.same_elements", false]], "sample_discrete_parameters() (in module ax.utils.sensitivity.derivative_measures)": [[18, "ax.utils.sensitivity.derivative_measures.sample_discrete_parameters", false]], "sample_runtime_unif() (in module ax.runners.simulated_backend)": [[14, "ax.runners.simulated_backend.sample_runtime_unif", false]], "sampler (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.SAMPLER", false]], "samples_gradients (ax.utils.sensitivity.derivative_measures.gpdgsmgpsampling attribute)": [[18, "ax.utils.sensitivity.derivative_measures.GpDGSMGpSampling.samples_gradients", false]], "samples_gradients_btsp (ax.utils.sensitivity.derivative_measures.gpdgsmgpsampling attribute)": [[18, "ax.utils.sensitivity.derivative_measures.GpDGSMGpSampling.samples_gradients_btsp", false]], "save() (ax.service.ax_client.axclient static method)": [[15, "ax.service.ax_client.AxClient.save", false]], "save_analysis_cards() (in module ax.storage.sqa_store.save)": [[16, "ax.storage.sqa_store.save.save_analysis_cards", false]], "save_experiment() (in module ax.storage.json_store.save)": [[16, "ax.storage.json_store.save.save_experiment", false]], "save_experiment() (in module ax.storage.sqa_store.save)": [[16, "ax.storage.sqa_store.save.save_experiment", false]], "save_generation_strategy() (in module ax.storage.sqa_store.save)": [[16, "ax.storage.sqa_store.save.save_generation_strategy", false]], "save_or_update_data_for_trials() (in module ax.storage.sqa_store.save)": [[16, "ax.storage.sqa_store.save.save_or_update_data_for_trials", false]], "save_or_update_trial() (in module ax.storage.sqa_store.save)": [[16, "ax.storage.sqa_store.save.save_or_update_trial", false]], "save_or_update_trials() (in module ax.storage.sqa_store.save)": [[16, "ax.storage.sqa_store.save.save_or_update_trials", false]], "save_to_json_file() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.save_to_json_file", false]], "scalarized_objective (ax.storage.utils.metricintent attribute)": [[16, "ax.storage.utils.MetricIntent.SCALARIZED_OBJECTIVE", false]], "scalarized_objective_children_metrics (ax.storage.sqa_store.sqa_classes.sqametric attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAMetric.scalarized_objective_children_metrics", false]], "scalarized_objective_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.scalarized_objective_to_dict", false]], "scalarized_objective_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.scalarized_objective_to_sqa", false]], "scalarized_outcome_constraint (ax.storage.utils.metricintent attribute)": [[16, "ax.storage.utils.MetricIntent.SCALARIZED_OUTCOME_CONSTRAINT", false]], "scalarized_outcome_constraint_children_metrics (ax.storage.sqa_store.sqa_classes.sqametric attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAMetric.scalarized_outcome_constraint_children_metrics", false]], "scalarized_outcome_constraint_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.scalarized_outcome_constraint_to_sqa", false]], "scalematernkernel (class in ax.models.torch.botorch_modular.kernels)": [[11, "ax.models.torch.botorch_modular.kernels.ScaleMaternKernel", false]], "scaling (ax.preview.api.configs.rangeparameterconfig attribute)": [[13, "ax.preview.api.configs.RangeParameterConfig.scaling", false]], "scatter_plot_with_hypervolume_trace_plotly() (in module ax.plot.pareto_frontier)": [[12, "ax.plot.pareto_frontier.scatter_plot_with_hypervolume_trace_plotly", false]], "scatter_plot_with_pareto_frontier() (in module ax.plot.pareto_frontier)": [[12, "ax.plot.pareto_frontier.scatter_plot_with_pareto_frontier", false]], "scatter_plot_with_pareto_frontier_plotly() (in module ax.plot.pareto_frontier)": [[12, "ax.plot.pareto_frontier.scatter_plot_with_pareto_frontier_plotly", false]], "scatterplot (class in ax.analysis.plotly.scatter)": [[0, "ax.analysis.plotly.scatter.ScatterPlot", false]], "scheduler (class in ax.service.scheduler)": [[15, "ax.service.scheduler.Scheduler", false]], "scheduler_max_pending_trials (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.scheduler_max_pending_trials", false]], "scheduler_max_pending_trials (ax.telemetry.scheduler.schedulercreatedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCreatedRecord.scheduler_max_pending_trials", false]], "scheduler_options (ax.benchmark.benchmark_method.benchmarkmethod attribute)": [[2, "ax.benchmark.benchmark_method.BenchmarkMethod.scheduler_options", false]], "scheduler_total_trials (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.scheduler_total_trials", false]], "scheduler_total_trials (ax.telemetry.scheduler.schedulercreatedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCreatedRecord.scheduler_total_trials", false]], "schedulercompletedrecord (class in ax.telemetry.scheduler)": [[17, "ax.telemetry.scheduler.SchedulerCompletedRecord", false]], "schedulercreatedrecord (class in ax.telemetry.scheduler)": [[17, "ax.telemetry.scheduler.SchedulerCreatedRecord", false]], "schedulerinternalerror": [[15, "ax.service.scheduler.SchedulerInternalError", false]], "scheduleroptions (class in ax.service.utils.scheduler_options)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions", false]], "scipy_optimizer() (in module ax.models.torch.botorch_defaults)": [[11, "ax.models.torch.botorch_defaults.scipy_optimizer", false]], "scipy_optimizer_list() (in module ax.models.torch.botorch_moo_defaults)": [[11, "ax.models.torch.botorch_moo_defaults.scipy_optimizer_list", false]], "score_trace (ax.benchmark.benchmark_result.aggregatedbenchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.AggregatedBenchmarkResult.score_trace", false]], "score_trace (ax.benchmark.benchmark_result.benchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.BenchmarkResult.score_trace", false]], "scramble (ax.models.random.sobol.sobolgenerator attribute)": [[11, "ax.models.random.sobol.SobolGenerator.scramble", false]], "se (ax.plot.base.plotinsamplearm attribute)": [[12, "ax.plot.base.PlotInSampleArm.se", false]], "se_hat (ax.plot.base.plotinsamplearm attribute)": [[12, "ax.plot.base.PlotInSampleArm.se_hat", false]], "se_hat (ax.plot.base.plotoutofsamplearm attribute)": [[12, "ax.plot.base.PlotOutOfSampleArm.se_hat", false]], "search_space (ax.benchmark.benchmark_problem.benchmarkproblem attribute)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.search_space", false]], "search_space (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.search_space", false]], "search_space (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.search_space", false]], "search_space (ax.modelbridge.base.basegenargs attribute)": [[10, "ax.modelbridge.base.BaseGenArgs.search_space", false]], "search_space (ax.modelbridge.discrete.discretemodelbridge attribute)": [[10, "ax.modelbridge.discrete.DiscreteModelBridge.search_space", false]], "search_space_digest (ax.models.torch.botorch.botorchmodel property)": [[11, "ax.models.torch.botorch.BotorchModel.search_space_digest", false]], "search_space_digest (ax.models.torch.botorch_modular.model.botorchmodel property)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.search_space_digest", false]], "search_space_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.search_space_from_json", false]], "search_space_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.search_space_from_sqa", false]], "search_space_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.search_space_to_dict", false]], "search_space_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.search_space_to_sqa", false]], "search_space_update_recommendation() (in module ax.health_check.search_space)": [[7, "ax.health_check.search_space.search_space_update_recommendation", false]], "searchspaceexhausted": [[5, "ax.exceptions.core.SearchSpaceExhausted", false]], "searchspacetochoice (class in ax.modelbridge.transforms.search_space_to_choice)": [[10, "ax.modelbridge.transforms.search_space_to_choice.SearchSpaceToChoice", false]], "seboacquisition (class in ax.models.torch.botorch_modular.sebo)": [[11, "ax.models.torch.botorch_modular.sebo.SEBOAcquisition", false]], "second_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivity method)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivity.second_order_indices", false]], "second_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpmean method)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPMean.second_order_indices", false]], "second_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpsampling method)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPSampling.second_order_indices", false]], "secondary_metric (ax.plot.pareto_utils.paretofrontierresults attribute)": [[12, "ax.plot.pareto_utils.ParetoFrontierResults.secondary_metric", false]], "seconds_between_polls (ax.preview.api.configs.orchestrationconfig attribute)": [[13, "ax.preview.api.configs.OrchestrationConfig.seconds_between_polls", false]], "seconds_between_polls_backoff_factor (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.seconds_between_polls_backoff_factor", false], [15, "id18", false]], "seed (ax.benchmark.benchmark_result.benchmarkresult attribute)": [[2, "ax.benchmark.benchmark_result.BenchmarkResult.seed", false]], "seed (ax.models.random.base.randommodel attribute)": [[11, "ax.models.random.base.RandomModel.seed", false]], "seed_inner (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.SEED_INNER", false]], "select_baseline_arm() (in module ax.service.utils.report_utils)": [[15, "ax.service.utils.report_utils.select_baseline_arm", false]], "select_metric() (in module ax.analysis.plotly.utils)": [[0, "ax.analysis.plotly.utils.select_metric", false]], "sem_range_scatter() (in module ax.plot.trace)": [[12, "ax.plot.trace.sem_range_scatter", false]], "sems (ax.plot.pareto_utils.paretofrontierresults attribute)": [[12, "ax.plot.pareto_utils.ParetoFrontierResults.sems", false]], "separate_observations() (in module ax.core.observation)": [[3, "ax.core.observation.separate_observations", false]], "sequential (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.SEQUENTIAL", false]], "serializationmixin (class in ax.utils.common.serialization)": [[18, "ax.utils.common.serialization.SerializationMixin", false]], "serialize_init_args() (ax.benchmark.benchmark_runner.benchmarkrunner class method)": [[2, "ax.benchmark.benchmark_runner.BenchmarkRunner.serialize_init_args", false]], "serialize_init_args() (ax.utils.common.serialization.serializationmixin class method)": [[18, "ax.utils.common.serialization.SerializationMixin.serialize_init_args", false]], "serialize_init_args() (in module ax.utils.common.serialization)": [[18, "ax.utils.common.serialization.serialize_init_args", false]], "serialize_state() (ax.models.base.model class method)": [[11, "ax.models.base.Model.serialize_state", false]], "session_scope() (in module ax.storage.sqa_store.db)": [[16, "ax.storage.sqa_store.db.session_scope", false]], "set_digits() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.set_digits", false]], "set_log_scale() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.set_log_scale", false]], "set_logit_scale() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.set_logit_scale", false]], "set_optimization_config() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.set_optimization_config", false]], "set_rng_seed() (in module ax.utils.common.random)": [[18, "ax.utils.common.random.set_rng_seed", false]], "set_search_space() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.set_search_space", false]], "set_status_quo() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.set_status_quo", false]], "set_status_quo_and_optimize_power() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.set_status_quo_and_optimize_power", false]], "set_status_quo_with_weight() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.set_status_quo_with_weight", false]], "set_stderr_log_level() (in module ax.utils.common.logger)": [[18, "ax.utils.common.logger.set_stderr_log_level", false]], "set_surrogate_and_datasets() (ax.benchmark.benchmark_test_functions.surrogate.surrogatetestfunction method)": [[2, "ax.benchmark.benchmark_test_functions.surrogate.SurrogateTestFunction.set_surrogate_and_datasets", false]], "set_value() (ax.core.parameter.fixedparameter method)": [[3, "ax.core.parameter.FixedParameter.set_value", false]], "set_values() (ax.core.parameter.choiceparameter method)": [[3, "ax.core.parameter.ChoiceParameter.set_values", false]], "setup() (ax.utils.common.testutils.testcase method)": [[18, "ax.utils.common.testutils.TestCase.setUp", false]], "setup_import_mocks() (in module ax.utils.common.testutils)": [[18, "ax.utils.common.testutils.setup_import_mocks", false]], "short_name() (in module ax.plot.contour)": [[12, "ax.plot.contour.short_name", false]], "short_run (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.SHORT_RUN", false]], "should_abort_optimization() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.should_abort_optimization", false]], "should_check() (in module ax.utils.flake8_plugins.docstring_checker)": [[18, "ax.utils.flake8_plugins.docstring_checker.should_check", false]], "should_consider_optimization_complete() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.should_consider_optimization_complete", false]], "should_deduplicate (ax.modelbridge.generation_node.generationnode attribute)": [[10, "ax.modelbridge.generation_node.GenerationNode.should_deduplicate", false]], "should_stop_optimization() (ax.global_stopping.strategies.base.baseglobalstoppingstrategy method)": [[6, "ax.global_stopping.strategies.base.BaseGlobalStoppingStrategy.should_stop_optimization", false]], "should_stop_trials_early() (ax.early_stopping.strategies.base.baseearlystoppingstrategy method)": [[4, "ax.early_stopping.strategies.base.BaseEarlyStoppingStrategy.should_stop_trials_early", false]], "should_stop_trials_early() (ax.early_stopping.strategies.logical.andearlystoppingstrategy method)": [[4, "ax.early_stopping.strategies.logical.AndEarlyStoppingStrategy.should_stop_trials_early", false]], "should_stop_trials_early() (ax.early_stopping.strategies.logical.orearlystoppingstrategy method)": [[4, "ax.early_stopping.strategies.logical.OrEarlyStoppingStrategy.should_stop_trials_early", false]], "should_stop_trials_early() (ax.early_stopping.strategies.percentile.percentileearlystoppingstrategy method)": [[4, "ax.early_stopping.strategies.percentile.PercentileEarlyStoppingStrategy.should_stop_trials_early", false]], "should_stop_trials_early() (ax.early_stopping.strategies.threshold.thresholdearlystoppingstrategy method)": [[4, "ax.early_stopping.strategies.threshold.ThresholdEarlyStoppingStrategy.should_stop_trials_early", false]], "should_stop_trials_early() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.should_stop_trials_early", false]], "should_stop_trials_early() (ax.utils.testing.core_stubs.dummyearlystoppingstrategy method)": [[18, "ax.utils.testing.core_stubs.DummyEarlyStoppingStrategy.should_stop_trials_early", false]], "should_stop_trials_early() (in module ax.service.utils.early_stopping)": [[15, "ax.service.utils.early_stopping.should_stop_trials_early", false]], "should_transition_to_next_node() (ax.modelbridge.generation_node.generationnode method)": [[10, "ax.modelbridge.generation_node.GenerationNode.should_transition_to_next_node", false]], "shouldgeneratecandidates (class in ax.analysis.healthcheck.should_generate_candidates)": [[0, "ax.analysis.healthcheck.should_generate_candidates.ShouldGenerateCandidates", false]], "signature (ax.core.arm.arm property)": [[3, "ax.core.arm.Arm.signature", false]], "silence_stderr() (ax.utils.common.testutils.testcase static method)": [[18, "ax.utils.common.testutils.TestCase.silence_stderr", false]], "sim_completed_time (ax.utils.testing.backend_simulator.simtrial attribute)": [[18, "ax.utils.testing.backend_simulator.SimTrial.sim_completed_time", false], [18, "id5", false]], "sim_queued_time (ax.utils.testing.backend_simulator.simtrial attribute)": [[18, "ax.utils.testing.backend_simulator.SimTrial.sim_queued_time", false], [18, "id6", false]], "sim_runtime (ax.utils.testing.backend_simulator.simtrial attribute)": [[18, "ax.utils.testing.backend_simulator.SimTrial.sim_runtime", false], [18, "id7", false]], "sim_start_time (ax.utils.testing.backend_simulator.simtrial attribute)": [[18, "ax.utils.testing.backend_simulator.SimTrial.sim_start_time", false], [18, "id8", false]], "simstatus (class in ax.utils.testing.backend_simulator)": [[18, "ax.utils.testing.backend_simulator.SimStatus", false]], "simtrial (class in ax.utils.testing.backend_simulator)": [[18, "ax.utils.testing.backend_simulator.SimTrial", false]], "simulatedbackendrunner (class in ax.runners.simulated_backend)": [[14, "ax.runners.simulated_backend.SimulatedBackendRunner", false]], "singlediagnosticbestmodelselector (class in ax.modelbridge.best_model_selector)": [[10, "ax.modelbridge.best_model_selector.SingleDiagnosticBestModelSelector", false]], "singlerunningtrialmixin (class in ax.runners.single_running_trial_mixin)": [[14, "ax.runners.single_running_trial_mixin.SingleRunningTrialMixin", false]], "skip_fit_gpytorch_mll() (in module ax.utils.testing.mock)": [[18, "ax.utils.testing.mock.skip_fit_gpytorch_mll", false]], "skip_fit_gpytorch_mll_context_manager() (in module ax.utils.testing.mock)": [[18, "ax.utils.testing.mock.skip_fit_gpytorch_mll_context_manager", false]], "sklearndataset (class in ax.metrics.sklearn)": [[9, "ax.metrics.sklearn.SklearnDataset", false]], "sklearnmetric (class in ax.metrics.sklearn)": [[9, "ax.metrics.sklearn.SklearnMetric", false]], "sklearnmodeltype (class in ax.metrics.sklearn)": [[9, "ax.metrics.sklearn.SklearnModelType", false]], "slice (ax.plot.base.axplottypes attribute)": [[12, "ax.plot.base.AxPlotTypes.SLICE", false]], "slice_config_to_trace() (in module ax.plot.helper)": [[12, "ax.plot.helper.slice_config_to_trace", false]], "sobol (ax.modelbridge.registry.models attribute)": [[10, "ax.modelbridge.registry.Models.SOBOL", false]], "sobol_gpei_generation_node_gs() (in module ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.sobol_gpei_generation_node_gs", false]], "sobolgenerator (class in ax.models.random.sobol)": [[11, "ax.models.random.sobol.SobolGenerator", false]], "sobolsensitivity (class in ax.utils.sensitivity.sobol_measures)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivity", false]], "sobolsensitivitygpmean (class in ax.utils.sensitivity.sobol_measures)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPMean", false]], "sobolsensitivitygpsampling (class in ax.utils.sensitivity.sobol_measures)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPSampling", false]], "sort_values (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.sort_values", false]], "sortablebase (class in ax.utils.common.base)": [[18, "ax.utils.common.base.SortableBase", false]], "specialgenerationstrategy (class in ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.SpecialGenerationStrategy", false]], "split_dataset() (in module ax.utils.tutorials.cnn_utils)": [[18, "ax.utils.tutorials.cnn_utils.split_dataset", false]], "sqa_config (ax.storage.registry_bundle.registrybundle property)": [[16, "ax.storage.registry_bundle.RegistryBundle.sqa_config", false]], "sqa_config (ax.storage.registry_bundle.registrybundlebase property)": [[16, "ax.storage.registry_bundle.RegistryBundleBase.sqa_config", false]], "sqaabandonedarm (class in ax.storage.sqa_store.sqa_classes)": [[16, "ax.storage.sqa_store.sqa_classes.SQAAbandonedArm", false]], "sqaanalysiscard (class in ax.storage.sqa_store.sqa_classes)": [[16, "ax.storage.sqa_store.sqa_classes.SQAAnalysisCard", false]], "sqaarm (class in ax.storage.sqa_store.sqa_classes)": [[16, "ax.storage.sqa_store.sqa_classes.SQAArm", false]], "sqabase (class in ax.storage.sqa_store.db)": [[16, "ax.storage.sqa_store.db.SQABase", false]], "sqadata (class in ax.storage.sqa_store.sqa_classes)": [[16, "ax.storage.sqa_store.sqa_classes.SQAData", false]], "sqadecodeerror": [[5, "ax.exceptions.storage.SQADecodeError", false]], "sqaencodeerror": [[5, "ax.exceptions.storage.SQAEncodeError", false]], "sqaexperiment (class in ax.storage.sqa_store.sqa_classes)": [[16, "ax.storage.sqa_store.sqa_classes.SQAExperiment", false]], "sqagenerationstrategy (class in ax.storage.sqa_store.sqa_classes)": [[16, "ax.storage.sqa_store.sqa_classes.SQAGenerationStrategy", false]], "sqageneratorrun (class in ax.storage.sqa_store.sqa_classes)": [[16, "ax.storage.sqa_store.sqa_classes.SQAGeneratorRun", false]], "sqametric (class in ax.storage.sqa_store.sqa_classes)": [[16, "ax.storage.sqa_store.sqa_classes.SQAMetric", false]], "sqaparameter (class in ax.storage.sqa_store.sqa_classes)": [[16, "ax.storage.sqa_store.sqa_classes.SQAParameter", false]], "sqaparameterconstraint (class in ax.storage.sqa_store.sqa_classes)": [[16, "ax.storage.sqa_store.sqa_classes.SQAParameterConstraint", false]], "sqarunner (class in ax.storage.sqa_store.sqa_classes)": [[16, "ax.storage.sqa_store.sqa_classes.SQARunner", false]], "sqatrial (class in ax.storage.sqa_store.sqa_classes)": [[16, "ax.storage.sqa_store.sqa_classes.SQATrial", false]], "st_mtgp (ax.modelbridge.registry.models attribute)": [[10, "ax.modelbridge.registry.Models.ST_MTGP", false]], "stable_hash() (in module ax.storage.utils)": [[16, "ax.storage.utils.stable_hash", false]], "staged (ax.core.base_trial.trialstatus attribute)": [[3, "ax.core.base_trial.TrialStatus.STAGED", false]], "staging_required (ax.core.runner.runner property)": [[3, "ax.core.runner.Runner.staging_required", false]], "standard_bridge_kwargs (ax.modelbridge.registry.modelsetup attribute)": [[10, "ax.modelbridge.registry.ModelSetup.standard_bridge_kwargs", false]], "standard_generation_strategy (ax.service.scheduler.scheduler property)": [[15, "ax.service.scheduler.Scheduler.standard_generation_strategy", false]], "standardizey (class in ax.modelbridge.transforms.standardize_y)": [[10, "ax.modelbridge.transforms.standardize_y.StandardizeY", false]], "start_time (ax.core.observation.observationfeatures attribute)": [[3, "ax.core.observation.ObservationFeatures.start_time", false]], "state() (ax.utils.testing.backend_simulator.backendsimulator method)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.state", false]], "state_dict (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.STATE_DICT", false]], "status (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.status", false]], "status() (ax.utils.testing.backend_simulator.backendsimulator method)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.status", false]], "status_quo (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.status_quo", false]], "status_quo (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.status_quo", false]], "status_quo (ax.core.generator_run.generatorruntype attribute)": [[3, "ax.core.generator_run.GeneratorRunType.STATUS_QUO", false]], "status_quo (ax.modelbridge.base.modelbridge property)": [[10, "ax.modelbridge.base.ModelBridge.status_quo", false]], "status_quo (ax.service.ax_client.axclient property)": [[15, "ax.service.ax_client.AxClient.status_quo", false]], "status_quo_data_by_trial (ax.modelbridge.base.modelbridge property)": [[10, "ax.modelbridge.base.ModelBridge.status_quo_data_by_trial", false]], "status_quo_name (ax.modelbridge.base.modelbridge property)": [[10, "ax.modelbridge.base.ModelBridge.status_quo_name", false]], "status_quo_name (ax.plot.base.plotdata attribute)": [[12, "ax.plot.base.PlotData.status_quo_name", false]], "status_quo_weight (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.status_quo_weight", false], [15, "id19", false]], "statuses_to_fit (ax.modelbridge.base.modelbridge property)": [[10, "ax.modelbridge.base.ModelBridge.statuses_to_fit", false]], "statuses_to_fit_map_metric (ax.modelbridge.base.modelbridge property)": [[10, "ax.modelbridge.base.ModelBridge.statuses_to_fit_map_metric", false]], "statuses_to_fit_map_metric (ax.modelbridge.map_torch.maptorchmodelbridge property)": [[10, "ax.modelbridge.map_torch.MapTorchModelBridge.statuses_to_fit_map_metric", false]], "std_of_the_standardized_error() (in module ax.utils.stats.model_fit_stats)": [[18, "ax.utils.stats.model_fit_stats.std_of_the_standardized_error", false]], "steelblue (ax.plot.color.colors attribute)": [[12, "ax.plot.color.COLORS.STEELBLUE", false]], "step_based_gs_only() (in module ax.modelbridge.generation_strategy)": [[10, "ax.modelbridge.generation_strategy.step_based_gs_only", false]], "step_size (ax.preview.api.configs.rangeparameterconfig attribute)": [[13, "ax.preview.api.configs.RangeParameterConfig.step_size", false]], "stop() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.stop", false]], "stop() (ax.core.runner.runner method)": [[3, "ax.core.runner.Runner.stop", false]], "stop() (ax.runners.simulated_backend.simulatedbackendrunner method)": [[14, "ax.runners.simulated_backend.SimulatedBackendRunner.stop", false]], "stop() (ax.runners.torchx.torchxrunner method)": [[14, "ax.runners.torchx.TorchXRunner.stop", false]], "stop_metadata (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.stop_metadata", false]], "stop_trial() (ax.utils.testing.backend_simulator.backendsimulator method)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.stop_trial", false]], "stop_trial_early() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.stop_trial_early", false]], "stop_trial_runs() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.stop_trial_runs", false]], "stratifiedstandardizey (class in ax.modelbridge.transforms.stratified_standardize_y)": [[10, "ax.modelbridge.transforms.stratified_standardize_y.StratifiedStandardizeY", false]], "strict_onehot_round() (in module ax.modelbridge.transforms.rounding)": [[10, "ax.modelbridge.transforms.rounding.strict_onehot_round", false]], "string (ax.core.parameter.parametertype attribute)": [[3, "ax.core.parameter.ParameterType.STRING", false]], "string (ax.preview.api.configs.parametertype attribute)": [[13, "ax.preview.api.configs.ParameterType.STRING", false]], "stringenum (class in ax.storage.sqa_store.sqa_enum)": [[16, "ax.storage.sqa_store.sqa_enum.StringEnum", false]], "subclass (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.SUBCLASS", false]], "subset_model (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.SUBSET_MODEL", false]], "subset_model() (in module ax.models.torch.utils)": [[11, "ax.models.torch.utils.subset_model", false]], "subset_state_dict() (in module ax.models.torch.botorch_modular.utils)": [[11, "ax.models.torch.botorch_modular.utils.subset_state_dict", false]], "subsetmodeldata (class in ax.models.torch.utils)": [[11, "ax.models.torch.utils.SubsetModelData", false]], "subtitle (ax.analysis.analysis.analysiscard attribute)": [[0, "ax.analysis.analysis.AnalysisCard.subtitle", false]], "sum (ax.storage.utils.parameterconstrainttype attribute)": [[16, "ax.storage.utils.ParameterConstraintType.SUM", false]], "sum_parameter_constraint_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.sum_parameter_constraint_to_dict", false]], "sum_trial_sizes (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.sum_trial_sizes", false]], "sum_utility() (in module ax.utils.testing.preference_stubs)": [[18, "ax.utils.testing.preference_stubs.sum_utility", false]], "sumconstraint (class in ax.core.parameter_constraint)": [[3, "ax.core.parameter_constraint.SumConstraint", false]], "summarize_final_result() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.summarize_final_result", false]], "summary (class in ax.analysis.summary)": [[0, "ax.analysis.summary.Summary", false]], "summary_dict (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.summary_dict", false]], "support_tier (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.support_tier", false]], "supports_trial_type() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.supports_trial_type", false]], "supports_trial_type() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.supports_trial_type", false]], "suppress_storage_errors_after_retries (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.suppress_storage_errors_after_retries", false], [15, "id20", false]], "surrogate (ax.benchmark.benchmark_test_functions.surrogate.surrogatetestfunction property)": [[2, "ax.benchmark.benchmark_test_functions.surrogate.SurrogateTestFunction.surrogate", false]], "surrogate (ax.models.torch.botorch_modular.acquisition.acquisition attribute)": [[11, "ax.models.torch.botorch_modular.acquisition.Acquisition.surrogate", false]], "surrogate (ax.models.torch.botorch_modular.model.botorchmodel property)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.surrogate", false]], "surrogate (class in ax.models.torch.botorch_modular.surrogate)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate", false]], "surrogate_from_list_surrogate_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.surrogate_from_list_surrogate_json", false]], "surrogate_spec (ax.models.torch.botorch_modular.model.botorchmodel attribute)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.surrogate_spec", false]], "surrogate_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.surrogate_to_dict", false]], "surrogatespec (class in ax.models.torch.botorch_modular.surrogate)": [[11, "ax.models.torch.botorch_modular.surrogate.SurrogateSpec", false]], "surrogatetestfunction (class in ax.benchmark.benchmark_test_functions.surrogate)": [[2, "ax.benchmark.benchmark_test_functions.surrogate.SurrogateTestFunction", false]], "suzuki (ax.metrics.chemistry.chemistryproblemtype attribute)": [[9, "ax.metrics.chemistry.ChemistryProblemType.SUZUKI", false]], "syntheticfunction (class in ax.utils.measurement.synthetic_functions)": [[18, "ax.utils.measurement.synthetic_functions.SyntheticFunction", false]], "syntheticrunner (class in ax.runners.synthetic)": [[14, "ax.runners.synthetic.SyntheticRunner", false]], "table_cell_html() (in module ax.utils.report.render)": [[18, "ax.utils.report.render.table_cell_html", false]], "table_heading_cell_html() (in module ax.utils.report.render)": [[18, "ax.utils.report.render.table_heading_cell_html", false]], "table_html() (in module ax.utils.report.render)": [[18, "ax.utils.report.render.table_html", false]], "table_row_html() (in module ax.utils.report.render)": [[18, "ax.utils.report.render.table_row_html", false]], "table_view_plot() (in module ax.plot.table_view)": [[12, "ax.plot.table_view.table_view_plot", false]], "tacqfconstructor (class in ax.models.torch.botorch_defaults)": [[11, "ax.models.torch.botorch_defaults.TAcqfConstructor", false]], "target_fidelity_and_task (ax.benchmark.benchmark_problem.benchmarkproblem attribute)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.target_fidelity_and_task", false]], "target_lb (ax.modelbridge.transforms.map_unit_x.mapunitx attribute)": [[10, "ax.modelbridge.transforms.map_unit_x.MapUnitX.target_lb", false]], "target_lb (ax.modelbridge.transforms.unit_x.unitx attribute)": [[10, "ax.modelbridge.transforms.unit_x.UnitX.target_lb", false]], "target_range (ax.modelbridge.transforms.map_unit_x.mapunitx attribute)": [[10, "ax.modelbridge.transforms.map_unit_x.MapUnitX.target_range", false]], "target_range (ax.modelbridge.transforms.unit_x.unitx attribute)": [[10, "ax.modelbridge.transforms.unit_x.UnitX.target_range", false]], "target_value (ax.core.parameter.parameter property)": [[3, "ax.core.parameter.Parameter.target_value", false]], "target_value (ax.storage.sqa_store.sqa_classes.sqaparameter attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAParameter.target_value", false]], "task_features (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.TASK_FEATURES", false]], "taskchoicetointtaskchoice (class in ax.modelbridge.transforms.task_encode)": [[10, "ax.modelbridge.transforms.task_encode.TaskChoiceToIntTaskChoice", false]], "taskencode (class in ax.modelbridge.transforms.task_encode)": [[10, "ax.modelbridge.transforms.task_encode.TaskEncode", false]], "tb_str() (ax.utils.common.result.exceptione method)": [[18, "ax.utils.common.result.ExceptionE.tb_str", false]], "tconfig_from_mt_experiment() (in module ax.modelbridge.transforms.convert_metric_names)": [[10, "ax.modelbridge.transforms.convert_metric_names.tconfig_from_mt_experiment", false]], "teal (ax.plot.color.colors attribute)": [[12, "ax.plot.color.COLORS.TEAL", false]], "temporalkernel (class in ax.models.torch.botorch_modular.kernels)": [[11, "ax.models.torch.botorch_modular.kernels.TemporalKernel", false]], "tensor_callable_to_array_callable() (in module ax.models.torch.utils)": [[11, "ax.models.torch.utils.tensor_callable_to_array_callable", false]], "tensor_from_json() (in module ax.storage.json_store.decoders)": [[16, "ax.storage.json_store.decoders.tensor_from_json", false]], "tensor_or_size_from_json() (in module ax.storage.json_store.decoders)": [[16, "ax.storage.json_store.decoders.tensor_or_size_from_json", false]], "tensor_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.tensor_to_dict", false]], "tensorboardmetric (class in ax.metrics.tensorboard)": [[9, "ax.metrics.tensorboard.TensorboardMetric", false]], "tensorize_params() (ax.benchmark.benchmark_test_functions.botorch_test.botorchtestfunction method)": [[2, "ax.benchmark.benchmark_test_functions.botorch_test.BoTorchTestFunction.tensorize_params", false]], "test_function (ax.benchmark.benchmark_problem.benchmarkproblem attribute)": [[2, "ax.benchmark.benchmark_problem.BenchmarkProblem.test_function", false]], "test_function (ax.benchmark.benchmark_runner.benchmarkrunner attribute)": [[2, "ax.benchmark.benchmark_runner.BenchmarkRunner.test_function", false]], "test_initfiles() (ax.utils.testing.test_init_files.inittest method)": [[18, "ax.utils.testing.test_init_files.InitTest.test_InitFiles", false]], "test_loader (ax.benchmark.problems.hpo.torchvision.pytorchcnntorchvisionbenchmarktestfunction attribute)": [[2, "ax.benchmark.problems.hpo.torchvision.PyTorchCNNTorchvisionBenchmarkTestFunction.test_loader", false]], "testcase (class in ax.utils.common.testutils)": [[18, "ax.utils.common.testutils.TestCase", false]], "testdataset (class in ax.utils.testing.benchmark_stubs)": [[18, "ax.utils.testing.benchmark_stubs.TestDataset", false]], "testtrial (class in ax.utils.testing.core_stubs)": [[18, "ax.utils.testing.core_stubs.TestTrial", false]], "thompson (ax.modelbridge.registry.models attribute)": [[10, "ax.modelbridge.registry.Models.THOMPSON", false]], "thompsonsampler (class in ax.models.discrete.thompson)": [[11, "ax.models.discrete.thompson.ThompsonSampler", false]], "threshold (ax.service.utils.instantiation.objectiveproperties attribute)": [[15, "ax.service.utils.instantiation.ObjectiveProperties.threshold", false]], "threshold_early_stopping_strategy_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.threshold_early_stopping_strategy_to_dict", false]], "thresholdearlystoppingstrategy (class in ax.early_stopping.strategies.threshold)": [[4, "ax.early_stopping.strategies.threshold.ThresholdEarlyStoppingStrategy", false]], "tile_cross_validation() (in module ax.plot.diagnostic)": [[12, "ax.plot.diagnostic.tile_cross_validation", false]], "tile_fitted() (in module ax.plot.scatter)": [[12, "ax.plot.scatter.tile_fitted", false]], "tile_observations() (in module ax.plot.scatter)": [[12, "ax.plot.scatter.tile_observations", false]], "time (ax.core.batch_trial.abandonedarm attribute)": [[3, "ax.core.batch_trial.AbandonedArm.time", false]], "time (ax.utils.testing.backend_simulator.backendsimulator property)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.time", false]], "time_abandoned (ax.storage.sqa_store.sqa_classes.sqaabandonedarm attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAAbandonedArm.time_abandoned", false]], "time_completed (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.time_completed", false]], "time_completed (ax.storage.sqa_store.sqa_classes.sqatrial attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQATrial.time_completed", false]], "time_created (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.time_created", false]], "time_created (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.time_created", false]], "time_created (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.time_created", false]], "time_created (ax.storage.sqa_store.sqa_classes.sqaanalysiscard attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAAnalysisCard.time_created", false]], "time_created (ax.storage.sqa_store.sqa_classes.sqaexperiment attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAExperiment.time_created", false]], "time_created (ax.storage.sqa_store.sqa_classes.sqageneratorrun attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAGeneratorRun.time_created", false]], "time_created (ax.storage.sqa_store.sqa_classes.sqatrial attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQATrial.time_created", false]], "time_remaining (ax.utils.testing.backend_simulator.simstatus attribute)": [[18, "ax.utils.testing.backend_simulator.SimStatus.time_remaining", false], [18, "id4", false]], "time_run_started (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.time_run_started", false]], "time_run_started (ax.storage.sqa_store.sqa_classes.sqatrial attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQATrial.time_run_started", false]], "time_scaling (ax.utils.testing.backend_simulator.backendsimulatoroptions attribute)": [[18, "ax.utils.testing.backend_simulator.BackendSimulatorOptions.time_scaling", false]], "time_staged (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.time_staged", false]], "time_staged (ax.storage.sqa_store.sqa_classes.sqatrial attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQATrial.time_staged", false]], "timeasfeature (class in ax.modelbridge.transforms.time_as_feature)": [[10, "ax.modelbridge.transforms.time_as_feature.TimeAsFeature", false]], "timeout_hours (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.timeout_hours", false], [15, "id21", false]], "timestamps_in_range() (in module ax.utils.common.timeutils)": [[18, "ax.utils.common.timeutils.timestamps_in_range", false]], "title (ax.analysis.analysis.analysiscard attribute)": [[0, "ax.analysis.analysis.AnalysisCard.title", false]], "to_ds() (in module ax.utils.common.timeutils)": [[18, "ax.utils.common.timeutils.to_ds", false]], "to_json_snapshot() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.to_json_snapshot", false]], "to_nonrobust_search_space() (in module ax.plot.pareto_utils)": [[12, "ax.plot.pareto_utils.to_nonrobust_search_space", false]], "to_ts() (in module ax.utils.common.timeutils)": [[18, "ax.utils.common.timeutils.to_ts", false]], "tolerated_trial_failure_rate (ax.preview.api.configs.orchestrationconfig attribute)": [[13, "ax.preview.api.configs.OrchestrationConfig.tolerated_trial_failure_rate", false]], "tolerated_trial_failure_rate (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.tolerated_trial_failure_rate", false], [15, "id22", false]], "torch_type_from_str() (in module ax.utils.common.typeutils_torch)": [[18, "ax.utils.common.typeutils_torch.torch_type_from_str", false]], "torch_type_to_str() (in module ax.utils.common.typeutils_torch)": [[18, "ax.utils.common.typeutils_torch.torch_type_to_str", false]], "torchgenresults (class in ax.models.torch_base)": [[11, "ax.models.torch_base.TorchGenResults", false]], "torchmodel (class in ax.models.torch_base)": [[11, "ax.models.torch_base.TorchModel", false]], "torchmodelbridge (class in ax.modelbridge.torch)": [[10, "ax.modelbridge.torch.TorchModelBridge", false]], "torchmodellike (class in ax.models.model_utils)": [[11, "ax.models.model_utils.TorchModelLike", false]], "torchoptconfig (class in ax.models.torch_base)": [[11, "ax.models.torch_base.TorchOptConfig", false]], "torchxmetric (class in ax.metrics.torchx)": [[9, "ax.metrics.torchx.TorchXMetric", false]], "torchxrunner (class in ax.runners.torchx)": [[14, "ax.runners.torchx.TorchXRunner", false]], "total_fit_time (ax.telemetry.experiment.experimentcompletedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord.total_fit_time", false]], "total_fit_time (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.total_fit_time", false]], "total_gen_time (ax.telemetry.experiment.experimentcompletedrecord attribute)": [[17, "ax.telemetry.experiment.ExperimentCompletedRecord.total_gen_time", false]], "total_gen_time (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.total_gen_time", false]], "total_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivity method)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivity.total_order_indices", false]], "total_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpmean method)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPMean.total_order_indices", false]], "total_order_indices() (ax.utils.sensitivity.sobol_measures.sobolsensitivitygpsampling method)": [[18, "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPSampling.total_order_indices", false]], "total_trials (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.total_trials", false], [15, "id23", false]], "total_variance() (in module ax.utils.stats.statstools)": [[18, "ax.utils.stats.statstools.total_variance", false]], "tracking (ax.storage.utils.metricintent attribute)": [[16, "ax.storage.utils.MetricIntent.TRACKING", false]], "tracking_metrics (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.tracking_metrics", false]], "tracking_metrics (ax.core.utils.missingmetrics attribute)": [[3, "ax.core.utils.MissingMetrics.tracking_metrics", false]], "train() (in module ax.utils.tutorials.cnn_utils)": [[18, "ax.utils.tutorials.cnn_utils.train", false]], "train_and_evaluate() (in module ax.benchmark.problems.hpo.torchvision)": [[2, "ax.benchmark.problems.hpo.torchvision.train_and_evaluate", false]], "train_eval() (ax.metrics.sklearn.sklearnmetric method)": [[9, "ax.metrics.sklearn.SklearnMetric.train_eval", false]], "train_loader (ax.benchmark.problems.hpo.torchvision.pytorchcnntorchvisionbenchmarktestfunction attribute)": [[2, "ax.benchmark.problems.hpo.torchvision.PyTorchCNNTorchvisionBenchmarkTestFunction.train_loader", false]], "training_data (ax.models.torch.botorch_modular.surrogate.surrogate property)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate.training_data", false]], "training_in_design (ax.modelbridge.base.modelbridge property)": [[10, "ax.modelbridge.base.ModelBridge.training_in_design", false]], "transform (class in ax.modelbridge.transforms.base)": [[10, "ax.modelbridge.transforms.base.Transform", false]], "transform() (ax.modelbridge.transforms.one_hot.onehotencoder method)": [[10, "ax.modelbridge.transforms.one_hot.OneHotEncoder.transform", false]], "transform_1 (class in ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.transform_1", false]], "transform_2 (class in ax.utils.testing.modeling_stubs)": [[18, "ax.utils.testing.modeling_stubs.transform_2", false]], "transform_callback() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.transform_callback", false]], "transform_choice_values() (in module ax.modelbridge.transforms.choice_encode)": [[10, "ax.modelbridge.transforms.choice_encode.transform_choice_values", false]], "transform_observation_features() (ax.modelbridge.base.modelbridge method)": [[10, "ax.modelbridge.base.ModelBridge.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.base.transform method)": [[10, "ax.modelbridge.transforms.base.Transform.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.cast.cast method)": [[10, "ax.modelbridge.transforms.cast.Cast.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.choice_encode.choicetonumericchoice method)": [[10, "ax.modelbridge.transforms.choice_encode.ChoiceToNumericChoice.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.fill_missing_parameters.fillmissingparameters method)": [[10, "ax.modelbridge.transforms.fill_missing_parameters.FillMissingParameters.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.int_to_float.inttofloat method)": [[10, "ax.modelbridge.transforms.int_to_float.IntToFloat.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.log.log method)": [[10, "ax.modelbridge.transforms.log.Log.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.logit.logit method)": [[10, "ax.modelbridge.transforms.logit.Logit.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.metrics_as_task.metricsastask method)": [[10, "ax.modelbridge.transforms.metrics_as_task.MetricsAsTask.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.one_hot.onehot method)": [[10, "ax.modelbridge.transforms.one_hot.OneHot.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.remove_fixed.removefixed method)": [[10, "ax.modelbridge.transforms.remove_fixed.RemoveFixed.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.search_space_to_choice.searchspacetochoice method)": [[10, "ax.modelbridge.transforms.search_space_to_choice.SearchSpaceToChoice.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.time_as_feature.timeasfeature method)": [[10, "ax.modelbridge.transforms.time_as_feature.TimeAsFeature.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.trial_as_task.trialastask method)": [[10, "ax.modelbridge.transforms.trial_as_task.TrialAsTask.transform_observation_features", false]], "transform_observation_features() (ax.modelbridge.transforms.unit_x.unitx method)": [[10, "ax.modelbridge.transforms.unit_x.UnitX.transform_observation_features", false]], "transform_observation_features() (ax.utils.testing.modeling_stubs.transform_1 method)": [[18, "ax.utils.testing.modeling_stubs.transform_1.transform_observation_features", false]], "transform_observation_features() (ax.utils.testing.modeling_stubs.transform_2 method)": [[18, "ax.utils.testing.modeling_stubs.transform_2.transform_observation_features", false]], "transform_observations() (ax.modelbridge.base.modelbridge method)": [[10, "ax.modelbridge.base.ModelBridge.transform_observations", false]], "transform_observations() (ax.modelbridge.transforms.base.transform method)": [[10, "ax.modelbridge.transforms.base.Transform.transform_observations", false]], "transform_observations() (ax.modelbridge.transforms.merge_repeated_measurements.mergerepeatedmeasurements method)": [[10, "ax.modelbridge.transforms.merge_repeated_measurements.MergeRepeatedMeasurements.transform_observations", false]], "transform_observations() (ax.modelbridge.transforms.metrics_as_task.metricsastask method)": [[10, "ax.modelbridge.transforms.metrics_as_task.MetricsAsTask.transform_observations", false]], "transform_observations() (ax.modelbridge.transforms.relativize.baserelativize method)": [[10, "ax.modelbridge.transforms.relativize.BaseRelativize.transform_observations", false]], "transform_observations() (ax.modelbridge.transforms.stratified_standardize_y.stratifiedstandardizey method)": [[10, "ax.modelbridge.transforms.stratified_standardize_y.StratifiedStandardizeY.transform_observations", false]], "transform_optimization_config() (ax.modelbridge.transforms.base.transform method)": [[10, "ax.modelbridge.transforms.base.Transform.transform_optimization_config", false]], "transform_optimization_config() (ax.modelbridge.transforms.derelativize.derelativize method)": [[10, "ax.modelbridge.transforms.derelativize.Derelativize.transform_optimization_config", false]], "transform_optimization_config() (ax.modelbridge.transforms.log_y.logy method)": [[10, "ax.modelbridge.transforms.log_y.LogY.transform_optimization_config", false]], "transform_optimization_config() (ax.modelbridge.transforms.power_transform_y.powertransformy method)": [[10, "ax.modelbridge.transforms.power_transform_y.PowerTransformY.transform_optimization_config", false]], "transform_optimization_config() (ax.modelbridge.transforms.relativize.baserelativize method)": [[10, "ax.modelbridge.transforms.relativize.BaseRelativize.transform_optimization_config", false]], "transform_optimization_config() (ax.modelbridge.transforms.standardize_y.standardizey method)": [[10, "ax.modelbridge.transforms.standardize_y.StandardizeY.transform_optimization_config", false]], "transform_optimization_config() (ax.modelbridge.transforms.stratified_standardize_y.stratifiedstandardizey method)": [[10, "ax.modelbridge.transforms.stratified_standardize_y.StratifiedStandardizeY.transform_optimization_config", false]], "transform_optimization_config() (ax.modelbridge.transforms.transform_to_new_sq.transformtonewsq method)": [[10, "ax.modelbridge.transforms.transform_to_new_sq.TransformToNewSQ.transform_optimization_config", false]], "transform_optimization_config() (ax.utils.testing.modeling_stubs.transform_1 method)": [[18, "ax.utils.testing.modeling_stubs.transform_1.transform_optimization_config", false]], "transform_optimization_config() (ax.utils.testing.modeling_stubs.transform_2 method)": [[18, "ax.utils.testing.modeling_stubs.transform_2.transform_optimization_config", false]], "transform_registry (in module ax.storage.transform_registry)": [[16, "ax.storage.transform_registry.TRANSFORM_REGISTRY", false]], "transform_search_space() (ax.modelbridge.transforms.base.transform method)": [[10, "ax.modelbridge.transforms.base.Transform.transform_search_space", false]], "transform_search_space() (ax.utils.testing.modeling_stubs.transform_1 method)": [[18, "ax.utils.testing.modeling_stubs.transform_1.transform_search_space", false]], "transform_search_space() (ax.utils.testing.modeling_stubs.transform_2 method)": [[18, "ax.utils.testing.modeling_stubs.transform_2.transform_search_space", false]], "transform_search_space() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.transform_search_space", false]], "transform_type_from_json() (in module ax.storage.json_store.decoders)": [[16, "ax.storage.json_store.decoders.transform_type_from_json", false]], "transform_type_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.transform_type_to_dict", false]], "transformed_dimensionality (ax.telemetry.ax_client.axclientcreatedrecord attribute)": [[17, "ax.telemetry.ax_client.AxClientCreatedRecord.transformed_dimensionality", false]], "transformed_dimensionality (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.transformed_dimensionality", false]], "transformed_dimensionality (ax.telemetry.scheduler.schedulercreatedrecord attribute)": [[17, "ax.telemetry.scheduler.SchedulerCreatedRecord.transformed_dimensionality", false]], "transforms (ax.modelbridge.registry.modelsetup attribute)": [[10, "ax.modelbridge.registry.ModelSetup.transforms", false]], "transformtonewsq (class in ax.modelbridge.transforms.transform_to_new_sq)": [[10, "ax.modelbridge.transforms.transform_to_new_sq.TransformToNewSQ", false]], "transition_criteria (ax.modelbridge.generation_node.generationnode property)": [[10, "ax.modelbridge.generation_node.GenerationNode.transition_criteria", false]], "transition_criterion_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.transition_criterion_to_dict", false]], "transition_edges (ax.modelbridge.generation_node.generationnode property)": [[10, "ax.modelbridge.generation_node.GenerationNode.transition_edges", false]], "tree (ax.utils.flake8_plugins.docstring_checker.docstringchecker attribute)": [[18, "ax.utils.flake8_plugins.docstring_checker.DocstringChecker.tree", false]], "trial (ax.service.utils.scheduler_options.trialtype attribute)": [[15, "ax.service.utils.scheduler_options.TrialType.TRIAL", false]], "trial (class in ax.core.trial)": [[3, "ax.core.trial.Trial", false]], "trial_completion_timestamp (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.TRIAL_COMPLETION_TIMESTAMP", false]], "trial_evaluation_identifier (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.trial_evaluation_identifier", false]], "trial_from_json() (in module ax.storage.json_store.decoders)": [[16, "ax.storage.json_store.decoders.trial_from_json", false]], "trial_from_sqa() (ax.storage.sqa_store.decoder.decoder method)": [[16, "ax.storage.sqa_store.decoder.Decoder.trial_from_sqa", false]], "trial_index (ax.analysis.plotly.arm_effects.predicted_effects.predictedeffectsplot attribute)": [[0, "ax.analysis.plotly.arm_effects.predicted_effects.PredictedEffectsPlot.trial_index", false]], "trial_index (ax.core.observation.observationfeatures attribute)": [[3, "ax.core.observation.ObservationFeatures.trial_index", false]], "trial_index (ax.service.utils.instantiation.fixedfeatures attribute)": [[15, "ax.service.utils.instantiation.FixedFeatures.trial_index", false]], "trial_index (ax.utils.testing.backend_simulator.simtrial attribute)": [[18, "ax.utils.testing.backend_simulator.SimTrial.trial_index", false], [18, "id9", false]], "trial_indices_by_status (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.trial_indices_by_status", false]], "trial_indices_expecting_data (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.trial_indices_expecting_data", false]], "trial_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.trial_to_dict", false]], "trial_to_sqa() (ax.storage.sqa_store.encoder.encoder method)": [[16, "ax.storage.sqa_store.encoder.Encoder.trial_to_sqa", false]], "trial_type (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.trial_type", false]], "trial_type (ax.service.scheduler.scheduler property)": [[15, "ax.service.scheduler.Scheduler.trial_type", false]], "trial_type (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.trial_type", false], [15, "id24", false]], "trialastask (class in ax.modelbridge.transforms.trial_as_task)": [[10, "ax.modelbridge.transforms.trial_as_task.TrialAsTask", false]], "trials (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.trials", false]], "trials (ax.service.scheduler.scheduler property)": [[15, "ax.service.scheduler.Scheduler.trials", false]], "trials (ax.storage.sqa_store.sqa_classes.sqaexperiment attribute)": [[16, "ax.storage.sqa_store.sqa_classes.SQAExperiment.trials", false]], "trials_as_df (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.trials_as_df", false]], "trials_by_status (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.trials_by_status", false]], "trials_expecting_data (ax.core.experiment.experiment property)": [[3, "ax.core.experiment.Experiment.trials_expecting_data", false]], "trials_expecting_data (ax.service.scheduler.scheduler property)": [[15, "ax.service.scheduler.Scheduler.trials_expecting_data", false]], "trials_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.trials_from_json", false]], "trials_from_node (ax.modelbridge.generation_node.generationnode property)": [[10, "ax.modelbridge.generation_node.GenerationNode.trials_from_node", false]], "trialstatus (class in ax.core.base_trial)": [[3, "ax.core.base_trial.TrialStatus", false]], "trialtype (class in ax.service.utils.scheduler_options)": [[15, "ax.service.utils.scheduler_options.TrialType", false]], "try_load_generation_strategy() (in module ax.service.utils.with_db_settings_base)": [[15, "ax.service.utils.with_db_settings_base.try_load_generation_strategy", false]], "ttl_seconds (ax.core.base_trial.basetrial property)": [[3, "ax.core.base_trial.BaseTrial.ttl_seconds", false]], "ttl_seconds_for_trials (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.ttl_seconds_for_trials", false], [15, "id25", false]], "tunable_feature_indices() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.tunable_feature_indices", false]], "type (ax.utils.flake8_plugins.docstring_checker.error attribute)": [[18, "ax.utils.flake8_plugins.docstring_checker.Error.type", false]], "uniform (ax.modelbridge.registry.models attribute)": [[10, "ax.modelbridge.registry.Models.UNIFORM", false]], "uniformgenerator (class in ax.models.random.uniform)": [[11, "ax.models.random.uniform.UniformGenerator", false]], "unique_identifier (ax.telemetry.optimization.optimizationcompletedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCompletedRecord.unique_identifier", false]], "unique_identifier (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.unique_identifier", false]], "unitx (class in ax.modelbridge.transforms.unit_x)": [[10, "ax.modelbridge.transforms.unit_x.UnitX", false]], "unixtime_to_pandas_ts() (in module ax.utils.common.timeutils)": [[18, "ax.utils.common.timeutils.unixtime_to_pandas_ts", false]], "unordered_list_html() (in module ax.utils.report.render)": [[18, "ax.utils.report.render.unordered_list_html", false]], "unpack_transition_criteria_from_json() (in module ax.storage.json_store.decoder)": [[16, "ax.storage.json_store.decoder.unpack_transition_criteria_from_json", false]], "unrelativize() (in module ax.utils.stats.statstools)": [[18, "ax.utils.stats.statstools.unrelativize", false]], "unset_status_quo() (ax.core.batch_trial.batchtrial method)": [[3, "ax.core.batch_trial.BatchTrial.unset_status_quo", false]], "unsupportederror": [[5, "ax.exceptions.core.UnsupportedError", false]], "unsupportedploterror": [[5, "ax.exceptions.core.UnsupportedPlotError", false]], "untransform_observation_features() (ax.modelbridge.transforms.base.transform method)": [[10, "ax.modelbridge.transforms.base.Transform.untransform_observation_features", false]], "untransform_observation_features() (ax.modelbridge.transforms.cast.cast method)": [[10, "ax.modelbridge.transforms.cast.Cast.untransform_observation_features", false]], "untransform_observation_features() (ax.modelbridge.transforms.choice_encode.choicetonumericchoice method)": [[10, "ax.modelbridge.transforms.choice_encode.ChoiceToNumericChoice.untransform_observation_features", false]], "untransform_observation_features() (ax.modelbridge.transforms.int_to_float.inttofloat method)": [[10, "ax.modelbridge.transforms.int_to_float.IntToFloat.untransform_observation_features", false]], "untransform_observation_features() (ax.modelbridge.transforms.log.log method)": [[10, "ax.modelbridge.transforms.log.Log.untransform_observation_features", false]], "untransform_observation_features() (ax.modelbridge.transforms.logit.logit method)": [[10, "ax.modelbridge.transforms.logit.Logit.untransform_observation_features", false]], "untransform_observation_features() (ax.modelbridge.transforms.map_unit_x.mapunitx method)": [[10, "ax.modelbridge.transforms.map_unit_x.MapUnitX.untransform_observation_features", false]], "untransform_observation_features() (ax.modelbridge.transforms.metrics_as_task.metricsastask method)": [[10, "ax.modelbridge.transforms.metrics_as_task.MetricsAsTask.untransform_observation_features", false]], "untransform_observation_features() (ax.modelbridge.transforms.one_hot.onehot method)": [[10, "ax.modelbridge.transforms.one_hot.OneHot.untransform_observation_features", false]], "untransform_observation_features() (ax.modelbridge.transforms.remove_fixed.removefixed method)": [[10, "ax.modelbridge.transforms.remove_fixed.RemoveFixed.untransform_observation_features", false]], "untransform_observation_features() (ax.modelbridge.transforms.search_space_to_choice.searchspacetochoice method)": [[10, "ax.modelbridge.transforms.search_space_to_choice.SearchSpaceToChoice.untransform_observation_features", false]], "untransform_observation_features() (ax.modelbridge.transforms.time_as_feature.timeasfeature method)": [[10, "ax.modelbridge.transforms.time_as_feature.TimeAsFeature.untransform_observation_features", false]], "untransform_observation_features() (ax.modelbridge.transforms.trial_as_task.trialastask method)": [[10, "ax.modelbridge.transforms.trial_as_task.TrialAsTask.untransform_observation_features", false]], "untransform_observation_features() (ax.modelbridge.transforms.unit_x.unitx method)": [[10, "ax.modelbridge.transforms.unit_x.UnitX.untransform_observation_features", false]], "untransform_observation_features() (ax.utils.testing.modeling_stubs.transform_1 method)": [[18, "ax.utils.testing.modeling_stubs.transform_1.untransform_observation_features", false]], "untransform_observation_features() (ax.utils.testing.modeling_stubs.transform_2 method)": [[18, "ax.utils.testing.modeling_stubs.transform_2.untransform_observation_features", false]], "untransform_observations() (ax.modelbridge.transforms.base.transform method)": [[10, "ax.modelbridge.transforms.base.Transform.untransform_observations", false]], "untransform_observations() (ax.modelbridge.transforms.convert_metric_names.convertmetricnames method)": [[10, "ax.modelbridge.transforms.convert_metric_names.ConvertMetricNames.untransform_observations", false]], "untransform_observations() (ax.modelbridge.transforms.metrics_as_task.metricsastask method)": [[10, "ax.modelbridge.transforms.metrics_as_task.MetricsAsTask.untransform_observations", false]], "untransform_observations() (ax.modelbridge.transforms.relativize.baserelativize method)": [[10, "ax.modelbridge.transforms.relativize.BaseRelativize.untransform_observations", false]], "untransform_observations() (ax.modelbridge.transforms.stratified_standardize_y.stratifiedstandardizey method)": [[10, "ax.modelbridge.transforms.stratified_standardize_y.StratifiedStandardizeY.untransform_observations", false]], "untransform_outcome_constraints() (ax.modelbridge.transforms.base.transform method)": [[10, "ax.modelbridge.transforms.base.Transform.untransform_outcome_constraints", false]], "untransform_outcome_constraints() (ax.modelbridge.transforms.derelativize.derelativize method)": [[10, "ax.modelbridge.transforms.derelativize.Derelativize.untransform_outcome_constraints", false]], "untransform_outcome_constraints() (ax.modelbridge.transforms.log_y.logy method)": [[10, "ax.modelbridge.transforms.log_y.LogY.untransform_outcome_constraints", false]], "untransform_outcome_constraints() (ax.modelbridge.transforms.power_transform_y.powertransformy method)": [[10, "ax.modelbridge.transforms.power_transform_y.PowerTransformY.untransform_outcome_constraints", false]], "untransform_outcome_constraints() (ax.modelbridge.transforms.relativize.baserelativize method)": [[10, "ax.modelbridge.transforms.relativize.BaseRelativize.untransform_outcome_constraints", false]], "untransform_outcome_constraints() (ax.modelbridge.transforms.standardize_y.standardizey method)": [[10, "ax.modelbridge.transforms.standardize_y.StandardizeY.untransform_outcome_constraints", false]], "untransform_outcome_constraints() (ax.modelbridge.transforms.stratified_standardize_y.stratifiedstandardizey method)": [[10, "ax.modelbridge.transforms.stratified_standardize_y.StratifiedStandardizeY.untransform_outcome_constraints", false]], "untransform_outcome_constraints() (ax.modelbridge.transforms.transform_to_new_sq.transformtonewsq method)": [[10, "ax.modelbridge.transforms.transform_to_new_sq.TransformToNewSQ.untransform_outcome_constraints", false]], "unwrap() (ax.utils.common.result.err method)": [[18, "ax.utils.common.result.Err.unwrap", false]], "unwrap() (ax.utils.common.result.ok method)": [[18, "ax.utils.common.result.Ok.unwrap", false]], "unwrap() (ax.utils.common.result.result method)": [[18, "ax.utils.common.result.Result.unwrap", false]], "unwrap_err() (ax.utils.common.result.err method)": [[18, "ax.utils.common.result.Err.unwrap_err", false]], "unwrap_err() (ax.utils.common.result.ok method)": [[18, "ax.utils.common.result.Ok.unwrap_err", false]], "unwrap_err() (ax.utils.common.result.result method)": [[18, "ax.utils.common.result.Result.unwrap_err", false]], "unwrap_observation_data() (in module ax.modelbridge.base)": [[10, "ax.modelbridge.base.unwrap_observation_data", false]], "unwrap_or() (ax.utils.common.result.err method)": [[18, "ax.utils.common.result.Err.unwrap_or", false]], "unwrap_or() (ax.utils.common.result.ok method)": [[18, "ax.utils.common.result.Ok.unwrap_or", false]], "unwrap_or() (ax.utils.common.result.result method)": [[18, "ax.utils.common.result.Result.unwrap_or", false]], "unwrap_or_else() (ax.utils.common.result.err method)": [[18, "ax.utils.common.result.Err.unwrap_or_else", false]], "unwrap_or_else() (ax.utils.common.result.ok method)": [[18, "ax.utils.common.result.Ok.unwrap_or_else", false]], "unwrap_or_else() (ax.utils.common.result.result method)": [[18, "ax.utils.common.result.Result.unwrap_or_else", false]], "unwraperror": [[18, "ax.utils.common.result.UnwrapError", false]], "update() (ax.modelbridge.base.modelbridge method)": [[10, "ax.modelbridge.base.ModelBridge.update", false]], "update() (ax.models.torch_base.torchmodel method)": [[11, "ax.models.torch_base.TorchModel.update", false]], "update() (ax.utils.testing.backend_simulator.backendsimulator method)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.update", false]], "update_features() (ax.core.observation.observationfeatures method)": [[3, "ax.core.observation.ObservationFeatures.update_features", false]], "update_generation_strategy() (in module ax.storage.sqa_store.save)": [[16, "ax.storage.sqa_store.save.update_generation_strategy", false]], "update_generator_state() (ax.modelbridge.external_generation_node.externalgenerationnode method)": [[10, "ax.modelbridge.external_generation_node.ExternalGenerationNode.update_generator_state", false]], "update_outcome_constraint_on_experiment() (in module ax.storage.sqa_store.save)": [[16, "ax.storage.sqa_store.save.update_outcome_constraint_on_experiment", false]], "update_properties_on_experiment() (in module ax.storage.sqa_store.save)": [[16, "ax.storage.sqa_store.save.update_properties_on_experiment", false]], "update_properties_on_trial() (in module ax.storage.sqa_store.save)": [[16, "ax.storage.sqa_store.save.update_properties_on_trial", false]], "update_range() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.update_range", false]], "update_run_metadata() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.update_run_metadata", false]], "update_runner() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.update_runner", false]], "update_runner_on_experiment() (in module ax.storage.sqa_store.save)": [[16, "ax.storage.sqa_store.save.update_runner_on_experiment", false]], "update_running_trial_with_intermediate_data() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.update_running_trial_with_intermediate_data", false]], "update_stop_metadata() (ax.core.base_trial.basetrial method)": [[3, "ax.core.base_trial.BaseTrial.update_stop_metadata", false]], "update_tracking_metric() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.update_tracking_metric", false]], "update_tracking_metric() (ax.core.multi_type_experiment.multitypeexperiment method)": [[3, "ax.core.multi_type_experiment.MultiTypeExperiment.update_tracking_metric", false]], "update_trial_data() (ax.core.trial.trial method)": [[3, "ax.core.trial.Trial.update_trial_data", false]], "update_trial_data() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.update_trial_data", false]], "update_trial_status() (in module ax.storage.sqa_store.save)": [[16, "ax.storage.sqa_store.save.update_trial_status", false]], "upper (ax.core.parameter.rangeparameter property)": [[3, "ax.core.parameter.RangeParameter.upper", false]], "upper_boundary (ax.models.winsorization_config.winsorizationconfig attribute)": [[11, "ax.models.winsorization_config.WinsorizationConfig.upper_boundary", false]], "upper_parameter (ax.core.parameter_constraint.orderconstraint property)": [[3, "ax.core.parameter_constraint.OrderConstraint.upper_parameter", false]], "upper_quantile_margin (ax.models.winsorization_config.winsorizationconfig attribute)": [[11, "ax.models.winsorization_config.WinsorizationConfig.upper_quantile_margin", false]], "url (ax.preview.api.configs.databaseconfig attribute)": [[13, "ax.preview.api.configs.DatabaseConfig.url", false]], "url (ax.storage.sqa_store.structs.dbsettings attribute)": [[16, "ax.storage.sqa_store.structs.DBSettings.url", false]], "use_internal_clock (ax.utils.testing.backend_simulator.backendsimulator property)": [[18, "ax.utils.testing.backend_simulator.BackendSimulator.use_internal_clock", false]], "use_model_list() (in module ax.models.torch.botorch_modular.utils)": [[11, "ax.models.torch.botorch_modular.utils.use_model_list", false]], "use_model_predictions_for_best_point (ax.benchmark.benchmark_method.benchmarkmethod attribute)": [[2, "ax.benchmark.benchmark_method.BenchmarkMethod.use_model_predictions_for_best_point", false]], "use_update_as_start_time (ax.utils.testing.backend_simulator.backendsimulatoroptions attribute)": [[18, "ax.utils.testing.backend_simulator.BackendSimulatorOptions.use_update_as_start_time", false]], "userinputerror": [[5, "ax.exceptions.core.UserInputError", false]], "uses_non_registered_models (ax.modelbridge.generation_strategy.generationstrategy property)": [[10, "ax.modelbridge.generation_strategy.GenerationStrategy.uses_non_registered_models", false]], "validate() (ax.core.parameter.choiceparameter method)": [[3, "ax.core.parameter.ChoiceParameter.validate", false]], "validate() (ax.core.parameter.fixedparameter method)": [[3, "ax.core.parameter.FixedParameter.validate", false]], "validate() (ax.core.parameter.parameter method)": [[3, "ax.core.parameter.Parameter.validate", false]], "validate() (ax.core.parameter.rangeparameter method)": [[3, "ax.core.parameter.RangeParameter.validate", false]], "validate_and_apply_final_transform() (in module ax.modelbridge.modelbridge_utils)": [[10, "ax.modelbridge.modelbridge_utils.validate_and_apply_final_transform", false]], "validate_bounds() (in module ax.models.model_utils)": [[11, "ax.models.model_utils.validate_bounds", false]], "validate_constraint_parameters() (in module ax.core.parameter_constraint)": [[3, "ax.core.parameter_constraint.validate_constraint_parameters", false]], "validate_data_for_trial() (ax.core.trial.trial method)": [[3, "ax.core.trial.Trial.validate_data_for_trial", false]], "validate_evaluation_outcome() (in module ax.core.types)": [[3, "ax.core.types.validate_evaluation_outcome", false]], "validate_experiment_metadata() (ax.storage.sqa_store.encoder.encoder class method)": [[16, "ax.storage.sqa_store.encoder.Encoder.validate_experiment_metadata", false]], "validate_fidelity_trial_evaluation() (in module ax.core.types)": [[3, "ax.core.types.validate_fidelity_trial_evaluation", false]], "validate_floatlike() (in module ax.core.types)": [[3, "ax.core.types.validate_floatlike", false]], "validate_map_dict() (in module ax.core.types)": [[3, "ax.core.types.validate_map_dict", false]], "validate_map_trial_evaluation() (in module ax.core.types)": [[3, "ax.core.types.validate_map_trial_evaluation", false]], "validate_metrics (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.validate_metrics", false], [15, "id26", false]], "validate_optimization_config() (in module ax.modelbridge.torch)": [[10, "ax.modelbridge.torch.validate_optimization_config", false]], "validate_param_value() (in module ax.core.types)": [[3, "ax.core.types.validate_param_value", false]], "validate_parameterization() (in module ax.core.types)": [[3, "ax.core.types.validate_parameterization", false]], "validate_single_metric_data() (in module ax.core.types)": [[3, "ax.core.types.validate_single_metric_data", false]], "validate_trial_evaluation() (in module ax.core.types)": [[3, "ax.core.types.validate_trial_evaluation", false]], "validate_trials() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.validate_trials", false]], "value (ax.core.parameter.fixedparameter property)": [[3, "ax.core.parameter.FixedParameter.value", false]], "value (ax.utils.common.result.err property)": [[18, "ax.utils.common.result.Err.value", false]], "value (ax.utils.common.result.ok property)": [[18, "ax.utils.common.result.Ok.value", false]], "value (ax.utils.common.result.result property)": [[18, "ax.utils.common.result.Result.value", false]], "values (ax.core.parameter.choiceparameter property)": [[3, "ax.core.parameter.ChoiceParameter.values", false]], "values (ax.preview.api.configs.choiceparameterconfig attribute)": [[13, "ax.preview.api.configs.ChoiceParameterConfig.values", false]], "verbose_logging (ax.utils.testing.backend_simulator.backendsimulatorstate attribute)": [[18, "ax.utils.testing.backend_simulator.BackendSimulatorState.verbose_logging", false]], "verify_trial_parameterization() (ax.service.ax_client.axclient method)": [[15, "ax.service.ax_client.AxClient.verify_trial_parameterization", false]], "version (ax.utils.flake8_plugins.docstring_checker.docstringchecker attribute)": [[18, "ax.utils.flake8_plugins.docstring_checker.DocstringChecker.version", false]], "view_defaults() (ax.modelbridge.registry.modelregistrybase method)": [[10, "ax.modelbridge.registry.ModelRegistryBase.view_defaults", false]], "view_kwargs() (ax.modelbridge.registry.modelregistrybase method)": [[10, "ax.modelbridge.registry.ModelRegistryBase.view_kwargs", false]], "visit_asyncfunctiondef() (ax.utils.flake8_plugins.docstring_checker.docstringcheckervisitor method)": [[18, "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor.visit_AsyncFunctionDef", false]], "visit_classdef() (ax.utils.flake8_plugins.docstring_checker.docstringcheckervisitor method)": [[18, "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor.visit_ClassDef", false]], "visit_functiondef() (ax.utils.flake8_plugins.docstring_checker.docstringcheckervisitor method)": [[18, "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor.visit_FunctionDef", false]], "wait_for_completed_trials_and_report_results() (ax.service.scheduler.scheduler method)": [[15, "ax.service.scheduler.Scheduler.wait_for_completed_trials_and_report_results", false]], "wait_for_running_trials (ax.service.utils.scheduler_options.scheduleroptions attribute)": [[15, "ax.service.utils.scheduler_options.SchedulerOptions.wait_for_running_trials", false], [15, "id27", false]], "warm_start_from_old_experiment() (ax.core.experiment.experiment method)": [[3, "ax.core.experiment.Experiment.warm_start_from_old_experiment", false]], "warm_start_refitting (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.WARM_START_REFITTING", false]], "warm_started_from (ax.telemetry.optimization.optimizationcreatedrecord attribute)": [[17, "ax.telemetry.optimization.OptimizationCreatedRecord.warm_started_from", false]], "warn_if_unpredictable_metrics() (in module ax.service.utils.report_utils)": [[15, "ax.service.utils.report_utils.warn_if_unpredictable_metrics", false]], "warn_on_kwargs() (in module ax.utils.common.kwargs)": [[18, "ax.utils.common.kwargs.warn_on_kwargs", false]], "warning (ax.analysis.healthcheck.healthcheck_analysis.healthcheckstatus attribute)": [[0, "ax.analysis.healthcheck.healthcheck_analysis.HealthcheckStatus.WARNING", false]], "weight (ax.core.batch_trial.generatorrunstruct attribute)": [[3, "ax.core.batch_trial.GeneratorRunStruct.weight", false]], "weight (ax.core.generator_run.armweight attribute)": [[3, "ax.core.generator_run.ArmWeight.weight", false]], "weights (ax.core.batch_trial.batchtrial property)": [[3, "ax.core.batch_trial.BatchTrial.weights", false]], "weights (ax.core.generator_run.generatorrun property)": [[3, "ax.core.generator_run.GeneratorRun.weights", false]], "weights (ax.modelbridge.base.genresults attribute)": [[10, "ax.modelbridge.base.GenResults.weights", false]], "weights (ax.models.torch_base.torchgenresults attribute)": [[11, "ax.models.torch_base.TorchGenResults.weights", false]], "winsorization_config_to_dict() (in module ax.storage.json_store.encoders)": [[16, "ax.storage.json_store.encoders.winsorization_config_to_dict", false]], "winsorizationconfig (class in ax.models.winsorization_config)": [[11, "ax.models.winsorization_config.WinsorizationConfig", false]], "winsorize (class in ax.modelbridge.transforms.winsorize)": [[10, "ax.modelbridge.transforms.winsorize.Winsorize", false]], "with_evaluation_function() (ax.service.managed_loop.optimizationloop static method)": [[15, "ax.service.managed_loop.OptimizationLoop.with_evaluation_function", false]], "with_rng_seed() (in module ax.utils.common.random)": [[18, "ax.utils.common.random.with_rng_seed", false]], "with_runners_and_metrics() (ax.service.managed_loop.optimizationloop class method)": [[15, "ax.service.managed_loop.OptimizationLoop.with_runners_and_metrics", false]], "withdbsettingsbase (class in ax.service.utils.with_db_settings_base)": [[15, "ax.service.utils.with_db_settings_base.WithDBSettingsBase", false]], "x (ax.early_stopping.strategies.base.earlystoppingtrainingdata attribute)": [[4, "ax.early_stopping.strategies.base.EarlyStoppingTrainingData.X", false]], "x_baseline (ax.utils.common.constants.keys attribute)": [[18, "ax.utils.common.constants.Keys.X_BASELINE", false]], "xs (ax.models.torch.botorch.botorchmodel attribute)": [[11, "ax.models.torch.botorch.BotorchModel.Xs", false]], "xs (ax.models.torch.botorch_modular.model.botorchmodel property)": [[11, "ax.models.torch.botorch_modular.model.BoTorchModel.Xs", false]], "xs (ax.models.torch.botorch_modular.surrogate.surrogate property)": [[11, "ax.models.torch.botorch_modular.surrogate.Surrogate.Xs", false]], "xs (ax.models.torch.botorch_moo.multiobjectivebotorchmodel attribute)": [[11, "ax.models.torch.botorch_moo.MultiObjectiveBotorchModel.Xs", false]], "y (ax.early_stopping.strategies.base.earlystoppingtrainingdata attribute)": [[4, "ax.early_stopping.strategies.base.EarlyStoppingTrainingData.Y", false]], "y (ax.plot.base.plotinsamplearm attribute)": [[12, "ax.plot.base.PlotInSampleArm.y", false]], "y_hat (ax.plot.base.plotinsamplearm attribute)": [[12, "ax.plot.base.PlotInSampleArm.y_hat", false]], "y_hat (ax.plot.base.plotoutofsamplearm attribute)": [[12, "ax.plot.base.PlotOutOfSampleArm.y_hat", false]], "ys (ax.models.torch.botorch.botorchmodel attribute)": [[11, "ax.models.torch.botorch.BotorchModel.Ys", false]], "ys (ax.models.torch.botorch_moo.multiobjectivebotorchmodel attribute)": [[11, "ax.models.torch.botorch_moo.MultiObjectiveBotorchModel.Ys", false]], "yvar (ax.early_stopping.strategies.base.earlystoppingtrainingdata attribute)": [[4, "ax.early_stopping.strategies.base.EarlyStoppingTrainingData.Yvar", false]], "yvars (ax.models.torch.botorch.botorchmodel attribute)": [[11, "ax.models.torch.botorch.BotorchModel.Yvars", false]], "yvars (ax.models.torch.botorch_moo.multiobjectivebotorchmodel attribute)": [[11, "ax.models.torch.botorch_moo.MultiObjectiveBotorchModel.Yvars", false]]}, "objects": {"ax": [[0, 0, 0, "-", "analysis"], [2, 0, 0, "-", "benchmark"], [3, 0, 0, "-", "core"], [4, 0, 0, "-", "early_stopping"], [5, 0, 0, "-", "exceptions"], [6, 0, 0, "-", "global_stopping"], [7, 0, 0, "-", "health_check"], [9, 0, 0, "-", "metrics"], [10, 0, 0, "-", "modelbridge"], [11, 0, 0, "-", "models"], [12, 0, 0, "-", "plot"], [13, 0, 0, "-", "preview"], [14, 0, 0, "-", "runners"], [15, 0, 0, "-", "service"], [16, 0, 0, "-", "storage"], [17, 0, 0, "-", "telemetry"], [18, 0, 0, "-", "utils"]], "ax.analysis": [[0, 0, 0, "-", "analysis"], [0, 0, 0, "-", "summary"]], "ax.analysis.analysis": [[0, 1, 1, "", "Analysis"], [0, 1, 1, "", "AnalysisCard"], [0, 1, 1, "", "AnalysisCardLevel"], [0, 1, 1, "", "AnalysisE"], [0, 5, 1, "", "display_cards"]], "ax.analysis.analysis.Analysis": [[0, 2, 1, "", "attributes"], [0, 3, 1, "", "compute"], [0, 3, 1, "", "compute_result"], [0, 2, 1, "", "name"]], "ax.analysis.analysis.AnalysisCard": [[0, 4, 1, "", "attributes"], [0, 4, 1, "", "blob"], [0, 4, 1, "", "blob_annotation"], [0, 4, 1, "", "df"], [0, 4, 1, "", "level"], [0, 4, 1, "", "name"], [0, 4, 1, "", "subtitle"], [0, 4, 1, "", "title"]], "ax.analysis.analysis.AnalysisCardLevel": [[0, 4, 1, "", "CRITICAL"], [0, 4, 1, "", "DEBUG"], [0, 4, 1, "", "HIGH"], [0, 4, 1, "", "LOW"], [0, 4, 1, "", "MID"]], "ax.analysis.analysis.AnalysisE": [[0, 4, 1, "", "analysis"]], "ax.analysis.healthcheck": [[0, 0, 0, "-", "can_generate_candidates"], [0, 0, 0, "-", "healthcheck_analysis"], [0, 0, 0, "-", "should_generate_candidates"]], "ax.analysis.healthcheck.can_generate_candidates": [[0, 1, 1, "", "CanGenerateCandidatesAnalysis"]], "ax.analysis.healthcheck.can_generate_candidates.CanGenerateCandidatesAnalysis": [[0, 4, 1, "", "LAST_RUN_TEMPLATE"], [0, 4, 1, "", "REASON_PREFIX"], [0, 3, 1, "", "compute"]], "ax.analysis.healthcheck.healthcheck_analysis": [[0, 1, 1, "", "HealthcheckAnalysis"], [0, 1, 1, "", "HealthcheckAnalysisCard"], [0, 1, 1, "", "HealthcheckStatus"]], "ax.analysis.healthcheck.healthcheck_analysis.HealthcheckAnalysis": [[0, 3, 1, "", "compute"]], "ax.analysis.healthcheck.healthcheck_analysis.HealthcheckAnalysisCard": [[0, 4, 1, "", "blob_annotation"], [0, 3, 1, "", "get_status"]], "ax.analysis.healthcheck.healthcheck_analysis.HealthcheckStatus": [[0, 4, 1, "", "FAIL"], [0, 4, 1, "", "PASS"], [0, 4, 1, "", "WARNING"]], "ax.analysis.healthcheck.should_generate_candidates": [[0, 1, 1, "", "ShouldGenerateCandidates"]], "ax.analysis.healthcheck.should_generate_candidates.ShouldGenerateCandidates": [[0, 3, 1, "", "compute"]], "ax.analysis.markdown": [[0, 0, 0, "-", "markdown_analysis"]], "ax.analysis.markdown.markdown_analysis": [[0, 1, 1, "", "MarkdownAnalysis"], [0, 1, 1, "", "MarkdownAnalysisCard"]], "ax.analysis.markdown.markdown_analysis.MarkdownAnalysis": [[0, 3, 1, "", "compute"]], "ax.analysis.markdown.markdown_analysis.MarkdownAnalysisCard": [[0, 4, 1, "", "blob_annotation"], [0, 3, 1, "", "get_markdown"]], "ax.analysis.plotly": [[0, 0, 0, "-", "cross_validation"], [0, 0, 0, "-", "parallel_coordinates"], [0, 0, 0, "-", "plotly_analysis"], [0, 0, 0, "-", "scatter"], [0, 0, 0, "-", "utils"]], "ax.analysis.plotly.arm_effects": [[0, 0, 0, "-", "insample_effects"], [0, 0, 0, "-", "predicted_effects"], [0, 0, 0, "-", "utils"]], "ax.analysis.plotly.arm_effects.insample_effects": [[0, 1, 1, "", "InSampleEffectsPlot"]], "ax.analysis.plotly.arm_effects.insample_effects.InSampleEffectsPlot": [[0, 3, 1, "", "compute"], [0, 2, 1, "", "name"]], "ax.analysis.plotly.arm_effects.predicted_effects": [[0, 1, 1, "", "PredictedEffectsPlot"]], "ax.analysis.plotly.arm_effects.predicted_effects.PredictedEffectsPlot": [[0, 4, 1, "", "CARD_NAME"], [0, 3, 1, "", "compute"], [0, 4, 1, "", "trial_index"]], "ax.analysis.plotly.arm_effects.utils": [[0, 5, 1, "", "format_parameters_for_effects_by_arm_plot"], [0, 5, 1, "", "get_predictions_by_arm"], [0, 5, 1, "", "prepare_arm_effects_plot"]], "ax.analysis.plotly.cross_validation": [[0, 1, 1, "", "CrossValidationPlot"]], "ax.analysis.plotly.cross_validation.CrossValidationPlot": [[0, 3, 1, "", "compute"]], "ax.analysis.plotly.parallel_coordinates": [[0, 1, 1, "", "ParallelCoordinatesPlot"]], "ax.analysis.plotly.parallel_coordinates.ParallelCoordinatesPlot": [[0, 3, 1, "", "compute"]], "ax.analysis.plotly.plotly_analysis": [[0, 1, 1, "", "PlotlyAnalysis"], [0, 1, 1, "", "PlotlyAnalysisCard"]], "ax.analysis.plotly.plotly_analysis.PlotlyAnalysis": [[0, 3, 1, "", "compute"]], "ax.analysis.plotly.plotly_analysis.PlotlyAnalysisCard": [[0, 4, 1, "", "blob_annotation"], [0, 3, 1, "", "get_figure"]], "ax.analysis.plotly.scatter": [[0, 1, 1, "", "ScatterPlot"]], "ax.analysis.plotly.scatter.ScatterPlot": [[0, 3, 1, "", "compute"]], "ax.analysis.plotly.utils": [[0, 5, 1, "", "format_constraint_violated_probabilities"], [0, 5, 1, "", "get_constraint_violated_probabilities"], [0, 5, 1, "", "is_predictive"], [0, 5, 1, "", "select_metric"]], "ax.analysis.summary": [[0, 1, 1, "", "Summary"]], "ax.analysis.summary.Summary": [[0, 3, 1, "", "compute"]], "ax.benchmark": [[2, 0, 0, "-", "benchmark"], [2, 0, 0, "-", "benchmark_method"], [2, 0, 0, "-", "benchmark_metric"], [2, 0, 0, "-", "benchmark_problem"], [2, 0, 0, "-", "benchmark_result"], [2, 0, 0, "-", "benchmark_runner"], [2, 0, 0, "-", "benchmark_test_function"]], "ax.benchmark.benchmark": [[2, 5, 1, "", "benchmark_multiple_problems_methods"], [2, 5, 1, "", "benchmark_one_method_problem"], [2, 5, 1, "", "benchmark_replication"], [2, 5, 1, "", "compute_score_trace"], [2, 5, 1, "", "get_benchmark_runner"]], "ax.benchmark.benchmark_method": [[2, 1, 1, "", "BenchmarkMethod"], [2, 5, 1, "", "get_benchmark_scheduler_options"]], "ax.benchmark.benchmark_method.BenchmarkMethod": [[2, 4, 1, "", "distribute_replications"], [2, 4, 1, "", "generation_strategy"], [2, 3, 1, "", "get_best_parameters"], [2, 4, 1, "", "name"], [2, 4, 1, "", "scheduler_options"], [2, 4, 1, "", "use_model_predictions_for_best_point"]], "ax.benchmark.benchmark_metric": [[2, 1, 1, "", "BenchmarkMetric"]], "ax.benchmark.benchmark_metric.BenchmarkMetric": [[2, 3, 1, "", "fetch_trial_data"]], "ax.benchmark.benchmark_problem": [[2, 1, 1, "", "BenchmarkProblem"], [2, 5, 1, "", "create_problem_from_botorch"], [2, 5, 1, "", "get_continuous_search_space"], [2, 5, 1, "", "get_moo_opt_config_and_outcome_names"], [2, 5, 1, "", "get_soo_config_and_outcome_names"]], "ax.benchmark.benchmark_problem.BenchmarkProblem": [[2, 3, 1, "", "evaluate_oracle"], [2, 3, 1, "", "get_oracle_experiment_from_experiment"], [2, 3, 1, "", "get_oracle_experiment_from_params"], [2, 2, 1, "", "is_moo"], [2, 4, 1, "", "n_best_points"], [2, 4, 1, "", "name"], [2, 4, 1, "", "noise_std"], [2, 4, 1, "", "num_trials"], [2, 4, 1, "", "optimal_value"], [2, 4, 1, "", "optimization_config"], [2, 4, 1, "", "report_inference_value_as_trace"], [2, 4, 1, "", "search_space"], [2, 4, 1, "", "target_fidelity_and_task"], [2, 4, 1, "", "test_function"]], "ax.benchmark.benchmark_result": [[2, 1, 1, "", "AggregatedBenchmarkResult"], [2, 1, 1, "", "BenchmarkResult"]], "ax.benchmark.benchmark_result.AggregatedBenchmarkResult": [[2, 4, 1, "", "fit_time"], [2, 3, 1, "", "from_benchmark_results"], [2, 4, 1, "", "gen_time"], [2, 4, 1, "", "name"], [2, 4, 1, "", "optimization_trace"], [2, 4, 1, "", "results"], [2, 4, 1, "", "score_trace"]], "ax.benchmark.benchmark_result.BenchmarkResult": [[2, 4, 1, "", "experiment"], [2, 4, 1, "", "experiment_storage_id"], [2, 4, 1, "", "fit_time"], [2, 4, 1, "", "gen_time"], [2, 4, 1, "", "inference_trace"], [2, 4, 1, "", "name"], [2, 4, 1, "", "optimization_trace"], [2, 4, 1, "", "oracle_trace"], [2, 4, 1, "", "score_trace"], [2, 4, 1, "", "seed"]], "ax.benchmark.benchmark_runner": [[2, 1, 1, "", "BenchmarkRunner"]], "ax.benchmark.benchmark_runner.BenchmarkRunner": [[2, 3, 1, "", "deserialize_init_args"], [2, 3, 1, "", "get_Y_true"], [2, 3, 1, "", "get_noise_stds"], [2, 4, 1, "", "noise_std"], [2, 2, 1, "", "outcome_names"], [2, 3, 1, "", "poll_trial_status"], [2, 3, 1, "", "run"], [2, 3, 1, "", "serialize_init_args"], [2, 4, 1, "", "test_function"]], "ax.benchmark.benchmark_test_function": [[2, 1, 1, "", "BenchmarkTestFunction"]], "ax.benchmark.benchmark_test_function.BenchmarkTestFunction": [[2, 3, 1, "", "evaluate_true"], [2, 4, 1, "", "outcome_names"]], "ax.benchmark.benchmark_test_functions": [[2, 0, 0, "-", "botorch_test"], [2, 0, 0, "-", "surrogate"]], "ax.benchmark.benchmark_test_functions.botorch_test": [[2, 1, 1, "", "BoTorchTestFunction"]], "ax.benchmark.benchmark_test_functions.botorch_test.BoTorchTestFunction": [[2, 4, 1, "", "botorch_problem"], [2, 3, 1, "", "evaluate_true"], [2, 4, 1, "", "modified_bounds"], [2, 4, 1, "", "outcome_names"], [2, 3, 1, "", "tensorize_params"]], "ax.benchmark.benchmark_test_functions.surrogate": [[2, 1, 1, "", "SurrogateTestFunction"]], "ax.benchmark.benchmark_test_functions.surrogate.SurrogateTestFunction": [[2, 2, 1, "", "datasets"], [2, 3, 1, "", "evaluate_true"], [2, 4, 1, "", "get_surrogate_and_datasets"], [2, 4, 1, "", "name"], [2, 4, 1, "", "outcome_names"], [2, 3, 1, "", "set_surrogate_and_datasets"], [2, 2, 1, "", "surrogate"]], "ax.benchmark.methods": [[2, 0, 0, "-", "modular_botorch"], [2, 0, 0, "-", "sobol"]], "ax.benchmark.methods.modular_botorch": [[2, 5, 1, "", "get_sobol_botorch_modular_acquisition"]], "ax.benchmark.methods.sobol": [[2, 5, 1, "", "get_sobol_benchmark_method"]], "ax.benchmark.problems": [[2, 0, 0, "-", "hd_embedding"], [2, 0, 0, "-", "registry"]], "ax.benchmark.problems.hd_embedding": [[2, 5, 1, "", "embed_higher_dimension"]], "ax.benchmark.problems.hpo": [[2, 0, 0, "-", "torchvision"]], "ax.benchmark.problems.hpo.torchvision": [[2, 1, 1, "", "CNN"], [2, 1, 1, "", "PyTorchCNNTorchvisionBenchmarkTestFunction"], [2, 5, 1, "", "get_pytorch_cnn_torchvision_benchmark_problem"], [2, 5, 1, "", "train_and_evaluate"]], "ax.benchmark.problems.hpo.torchvision.CNN": [[2, 3, 1, "", "forward"]], "ax.benchmark.problems.hpo.torchvision.PyTorchCNNTorchvisionBenchmarkTestFunction": [[2, 4, 1, "", "device"], [2, 3, 1, "", "evaluate_true"], [2, 4, 1, "", "name"], [2, 4, 1, "", "outcome_names"], [2, 4, 1, "", "test_loader"], [2, 4, 1, "", "train_loader"]], "ax.benchmark.problems.registry": [[2, 1, 1, "", "BenchmarkProblemRegistryEntry"], [2, 5, 1, "", "get_problem"]], "ax.benchmark.problems.registry.BenchmarkProblemRegistryEntry": [[2, 4, 1, "", "factory_fn"], [2, 4, 1, "", "factory_kwargs"]], "ax.benchmark.problems.synthetic.discretized": [[2, 0, 0, "-", "mixed_integer"]], "ax.benchmark.problems.synthetic.discretized.mixed_integer": [[2, 5, 1, "", "get_discrete_ackley"], [2, 5, 1, "", "get_discrete_hartmann"], [2, 5, 1, "", "get_discrete_rosenbrock"]], "ax.benchmark.problems.synthetic.hss": [[2, 0, 0, "-", "jenatton"]], "ax.benchmark.problems.synthetic.hss.jenatton": [[2, 1, 1, "", "Jenatton"], [2, 5, 1, "", "get_jenatton_benchmark_problem"], [2, 5, 1, "", "jenatton_test_function"]], "ax.benchmark.problems.synthetic.hss.jenatton.Jenatton": [[2, 3, 1, "", "evaluate_true"]], "ax.core": [[3, 0, 0, "-", "arm"], [3, 0, 0, "-", "auxiliary"], [3, 0, 0, "-", "base_trial"], [3, 0, 0, "-", "batch_trial"], [3, 0, 0, "-", "experiment"], [3, 0, 0, "-", "formatting_utils"], [3, 0, 0, "-", "generation_strategy_interface"], [3, 0, 0, "-", "generator_run"], [3, 0, 0, "-", "multi_type_experiment"], [3, 0, 0, "-", "observation"], [3, 0, 0, "-", "optimization_config"], [3, 0, 0, "-", "parameter"], [3, 0, 0, "-", "parameter_constraint"], [3, 0, 0, "-", "parameter_distribution"], [3, 0, 0, "-", "risk_measures"], [3, 0, 0, "-", "runner"], [3, 0, 0, "-", "trial"], [3, 0, 0, "-", "types"], [3, 0, 0, "-", "utils"]], "ax.core.arm": [[3, 1, 1, "", "Arm"]], "ax.core.arm.Arm": [[3, 3, 1, "", "clone"], [3, 2, 1, "", "has_name"], [3, 3, 1, "", "md5hash"], [3, 2, 1, "", "name"], [3, 2, 1, "", "name_or_short_signature"], [3, 2, 1, "", "parameters"], [3, 2, 1, "", "signature"]], "ax.core.auxiliary": [[3, 1, 1, "", "AuxiliaryExperiment"], [3, 1, 1, "", "AuxiliaryExperimentPurpose"]], "ax.core.base_trial": [[3, 1, 1, "", "BaseTrial"], [3, 1, 1, "", "TrialStatus"], [3, 5, 1, "", "immutable_once_run"]], "ax.core.base_trial.BaseTrial": [[3, 2, 1, "", "abandoned_arms"], [3, 2, 1, "", "abandoned_reason"], [3, 2, 1, "", "arms"], [3, 2, 1, "", "arms_by_name"], [3, 3, 1, "", "assign_runner"], [3, 3, 1, "", "complete"], [3, 2, 1, "", "completed_successfully"], [3, 2, 1, "", "deployed_name"], [3, 2, 1, "", "did_not_complete"], [3, 2, 1, "", "experiment"], [3, 2, 1, "", "failed_reason"], [3, 3, 1, "", "fetch_data"], [3, 3, 1, "", "fetch_data_results"], [3, 2, 1, "", "generator_runs"], [3, 2, 1, "", "index"], [3, 2, 1, "", "is_abandoned"], [3, 3, 1, "", "lookup_data"], [3, 3, 1, "", "mark_abandoned"], [3, 3, 1, "", "mark_arm_abandoned"], [3, 3, 1, "", "mark_as"], [3, 3, 1, "", "mark_completed"], [3, 3, 1, "", "mark_early_stopped"], [3, 3, 1, "", "mark_failed"], [3, 3, 1, "", "mark_running"], [3, 3, 1, "", "mark_staged"], [3, 3, 1, "", "run"], [3, 2, 1, "", "run_metadata"], [3, 2, 1, "", "runner"], [3, 2, 1, "", "status"], [3, 3, 1, "", "stop"], [3, 2, 1, "", "stop_metadata"], [3, 2, 1, "", "time_completed"], [3, 2, 1, "", "time_created"], [3, 2, 1, "", "time_run_started"], [3, 2, 1, "", "time_staged"], [3, 2, 1, "", "trial_type"], [3, 2, 1, "", "ttl_seconds"], [3, 3, 1, "", "update_run_metadata"], [3, 3, 1, "", "update_stop_metadata"]], "ax.core.base_trial.TrialStatus": [[3, 4, 1, "", "ABANDONED"], [3, 4, 1, "", "CANDIDATE"], [3, 4, 1, "", "COMPLETED"], [3, 4, 1, "", "DISPATCHED"], [3, 4, 1, "", "EARLY_STOPPED"], [3, 4, 1, "", "FAILED"], [3, 4, 1, "", "RUNNING"], [3, 4, 1, "", "STAGED"], [3, 2, 1, "", "expecting_data"], [3, 2, 1, "", "is_abandoned"], [3, 2, 1, "", "is_candidate"], [3, 2, 1, "", "is_completed"], [3, 2, 1, "", "is_deployed"], [3, 2, 1, "", "is_early_stopped"], [3, 2, 1, "", "is_failed"], [3, 2, 1, "", "is_running"], [3, 2, 1, "", "is_terminal"]], "ax.core.batch_trial": [[3, 1, 1, "", "AbandonedArm"], [3, 1, 1, "", "BatchTrial"], [3, 1, 1, "", "GeneratorRunStruct"], [3, 1, 1, "", "LifecycleStage"]], "ax.core.batch_trial.AbandonedArm": [[3, 4, 1, "", "name"], [3, 4, 1, "", "reason"], [3, 4, 1, "", "time"]], "ax.core.batch_trial.BatchTrial": [[3, 2, 1, "", "abandoned_arm_names"], [3, 2, 1, "", "abandoned_arms"], [3, 2, 1, "", "abandoned_arms_metadata"], [3, 3, 1, "", "add_arm"], [3, 3, 1, "", "add_arms_and_weights"], [3, 3, 1, "", "add_generator_run"], [3, 2, 1, "", "arm_weights"], [3, 2, 1, "", "arms"], [3, 2, 1, "", "arms_by_name"], [3, 3, 1, "", "attach_batch_trial_data"], [3, 3, 1, "", "clone"], [3, 3, 1, "", "clone_to"], [3, 2, 1, "", "experiment"], [3, 2, 1, "", "generator_run_structs"], [3, 2, 1, "", "generator_runs"], [3, 2, 1, "", "in_design_arms"], [3, 2, 1, "", "index"], [3, 2, 1, "", "is_factorial"], [3, 2, 1, "", "lifecycle_stage"], [3, 3, 1, "", "mark_arm_abandoned"], [3, 3, 1, "", "normalized_arm_weights"], [3, 3, 1, "", "run"], [3, 3, 1, "", "set_status_quo_and_optimize_power"], [3, 3, 1, "", "set_status_quo_with_weight"], [3, 2, 1, "", "status_quo"], [3, 3, 1, "", "unset_status_quo"], [3, 2, 1, "", "weights"]], "ax.core.batch_trial.GeneratorRunStruct": [[3, 4, 1, "", "generator_run"], [3, 4, 1, "", "weight"]], "ax.core.batch_trial.LifecycleStage": [[3, 4, 1, "", "BAKEOFF"], [3, 4, 1, "", "EXPLORATION"], [3, 4, 1, "", "EXPLORATION_CONCURRENT"], [3, 4, 1, "", "ITERATION"], [3, 4, 1, "", "OFFLINE_OPTIMIZED"]], "ax.core.experiment": [[3, 1, 1, "", "Experiment"], [3, 5, 1, "", "add_arm_and_prevent_naming_collision"]], "ax.core.experiment.Experiment": [[3, 3, 1, "", "add_tracking_metric"], [3, 3, 1, "", "add_tracking_metrics"], [3, 2, 1, "", "arms_by_name"], [3, 2, 1, "", "arms_by_signature"], [3, 2, 1, "", "arms_by_signature_for_deduplication"], [3, 3, 1, "", "attach_data"], [3, 3, 1, "", "attach_fetch_results"], [3, 3, 1, "", "attach_trial"], [3, 3, 1, "", "clone_with"], [3, 2, 1, "", "completed_trials"], [3, 2, 1, "", "data_by_trial"], [3, 2, 1, "", "default_data_constructor"], [3, 2, 1, "", "default_data_type"], [3, 2, 1, "", "default_trial_type"], [3, 2, 1, "", "experiment_type"], [3, 3, 1, "", "fetch_data"], [3, 3, 1, "", "fetch_data_results"], [3, 3, 1, "", "fetch_trials_data"], [3, 3, 1, "", "fetch_trials_data_results"], [3, 3, 1, "", "get_trials_by_indices"], [3, 2, 1, "", "has_name"], [3, 2, 1, "", "immutable_search_space_and_opt_config"], [3, 2, 1, "", "is_moo_problem"], [3, 2, 1, "", "is_test"], [3, 3, 1, "", "lookup_data"], [3, 3, 1, "", "lookup_data_for_trial"], [3, 3, 1, "", "lookup_data_for_ts"], [3, 2, 1, "", "metric_config_summary_df"], [3, 2, 1, "", "metrics"], [3, 2, 1, "", "name"], [3, 3, 1, "", "new_batch_trial"], [3, 3, 1, "", "new_trial"], [3, 2, 1, "", "num_abandoned_arms"], [3, 2, 1, "", "num_trials"], [3, 2, 1, "", "optimization_config"], [3, 2, 1, "", "parameters"], [3, 3, 1, "", "remove_tracking_metric"], [3, 3, 1, "", "reset_runners"], [3, 3, 1, "", "runner_for_trial"], [3, 2, 1, "", "running_trial_indices"], [3, 2, 1, "", "search_space"], [3, 2, 1, "", "status_quo"], [3, 2, 1, "", "sum_trial_sizes"], [3, 3, 1, "", "supports_trial_type"], [3, 2, 1, "", "time_created"], [3, 2, 1, "", "tracking_metrics"], [3, 2, 1, "", "trial_indices_by_status"], [3, 2, 1, "", "trial_indices_expecting_data"], [3, 2, 1, "", "trials"], [3, 2, 1, "", "trials_by_status"], [3, 2, 1, "", "trials_expecting_data"], [3, 3, 1, "", "update_tracking_metric"], [3, 3, 1, "", "validate_trials"], [3, 3, 1, "", "warm_start_from_old_experiment"]], "ax.core.formatting_utils": [[3, 1, 1, "", "DataType"], [3, 5, 1, "", "data_and_evaluations_from_raw_data"], [3, 5, 1, "", "raw_data_to_evaluation"]], "ax.core.formatting_utils.DataType": [[3, 4, 1, "", "DATA"], [3, 4, 1, "", "MAP_DATA"]], "ax.core.generation_strategy_interface": [[3, 1, 1, "", "GenerationStrategyInterface"]], "ax.core.generation_strategy_interface.GenerationStrategyInterface": [[3, 4, 1, "", "DEFAULT_N"], [3, 3, 1, "", "clone_reset"], [3, 2, 1, "", "experiment"], [3, 3, 1, "", "gen_for_multiple_trials_with_multiple_models"], [3, 2, 1, "", "name"]], "ax.core.generator_run": [[3, 1, 1, "", "ArmWeight"], [3, 1, 1, "", "GeneratorRun"], [3, 1, 1, "", "GeneratorRunType"], [3, 5, 1, "", "extract_arm_predictions"]], "ax.core.generator_run.ArmWeight": [[3, 4, 1, "", "arm"], [3, 4, 1, "", "weight"]], "ax.core.generator_run.GeneratorRun": [[3, 3, 1, "", "add_arm"], [3, 2, 1, "", "arm_signatures"], [3, 2, 1, "", "arm_weights"], [3, 2, 1, "", "arms"], [3, 2, 1, "", "best_arm_predictions"], [3, 2, 1, "", "candidate_metadata_by_arm_signature"], [3, 3, 1, "", "clone"], [3, 2, 1, "", "fit_time"], [3, 2, 1, "", "gen_metadata"], [3, 2, 1, "", "gen_time"], [3, 2, 1, "", "generator_run_type"], [3, 2, 1, "", "index"], [3, 2, 1, "", "model_predictions"], [3, 2, 1, "", "model_predictions_by_arm"], [3, 2, 1, "", "optimization_config"], [3, 2, 1, "", "param_df"], [3, 2, 1, "", "search_space"], [3, 2, 1, "", "time_created"], [3, 2, 1, "", "weights"]], "ax.core.generator_run.GeneratorRunType": [[3, 4, 1, "", "MANUAL"], [3, 4, 1, "", "STATUS_QUO"]], "ax.core.multi_type_experiment": [[3, 1, 1, "", "MultiTypeExperiment"], [3, 5, 1, "", "filter_trials_by_type"], [3, 5, 1, "", "get_trial_indices_for_statuses"]], "ax.core.multi_type_experiment.MultiTypeExperiment": [[3, 3, 1, "", "add_tracking_metric"], [3, 3, 1, "", "add_tracking_metrics"], [3, 3, 1, "", "add_trial_type"], [3, 2, 1, "", "default_trial_type"], [3, 2, 1, "", "default_trials"], [3, 4, 1, "", "description"], [3, 3, 1, "", "fetch_data"], [3, 2, 1, "", "metric_to_trial_type"], [3, 4, 1, "", "name"], [3, 2, 1, "", "optimization_config"], [3, 3, 1, "", "remove_tracking_metric"], [3, 3, 1, "", "reset_runners"], [3, 3, 1, "", "runner_for_trial"], [3, 3, 1, "", "runner_for_trial_type"], [3, 3, 1, "", "supports_trial_type"], [3, 3, 1, "", "update_runner"], [3, 3, 1, "", "update_tracking_metric"]], "ax.core.observation": [[3, 1, 1, "", "Observation"], [3, 1, 1, "", "ObservationData"], [3, 1, 1, "", "ObservationFeatures"], [3, 5, 1, "", "get_feature_cols"], [3, 5, 1, "", "observations_from_data"], [3, 5, 1, "", "observations_from_map_data"], [3, 5, 1, "", "recombine_observations"], [3, 5, 1, "", "separate_observations"]], "ax.core.observation.Observation": [[3, 4, 1, "", "arm_name"], [3, 4, 1, "", "data"], [3, 4, 1, "", "features"]], "ax.core.observation.ObservationData": [[3, 4, 1, "", "covariance"], [3, 2, 1, "", "covariance_matrix"], [3, 4, 1, "", "means"], [3, 2, 1, "", "means_dict"], [3, 4, 1, "", "metric_names"]], "ax.core.observation.ObservationFeatures": [[3, 3, 1, "", "clone"], [3, 4, 1, "", "end_time"], [3, 3, 1, "", "from_arm"], [3, 4, 1, "", "parameters"], [3, 4, 1, "", "random_split"], [3, 4, 1, "", "start_time"], [3, 4, 1, "", "trial_index"], [3, 3, 1, "", "update_features"]], "ax.core.optimization_config": [[3, 1, 1, "", "MultiObjectiveOptimizationConfig"], [3, 1, 1, "", "OptimizationConfig"], [3, 5, 1, "", "check_objective_thresholds_match_objectives"]], "ax.core.optimization_config.MultiObjectiveOptimizationConfig": [[3, 2, 1, "", "all_constraints"], [3, 3, 1, "", "clone_with_args"], [3, 2, 1, "", "metrics"], [3, 2, 1, "", "objective"], [3, 2, 1, "", "objective_thresholds"], [3, 2, 1, "", "objective_thresholds_dict"]], "ax.core.optimization_config.OptimizationConfig": [[3, 2, 1, "", "all_constraints"], [3, 3, 1, "", "clone"], [3, 3, 1, "", "clone_with_args"], [3, 2, 1, "", "is_moo_problem"], [3, 2, 1, "", "metrics"], [3, 2, 1, "", "objective"], [3, 2, 1, "", "outcome_constraints"]], "ax.core.parameter": [[3, 1, 1, "", "ChoiceParameter"], [3, 1, 1, "", "FixedParameter"], [3, 1, 1, "", "Parameter"], [3, 1, 1, "", "ParameterType"], [3, 1, 1, "", "RangeParameter"]], "ax.core.parameter.ChoiceParameter": [[3, 3, 1, "", "add_values"], [3, 2, 1, "", "available_flags"], [3, 3, 1, "", "cardinality"], [3, 3, 1, "", "clone"], [3, 2, 1, "", "dependents"], [3, 2, 1, "", "domain_repr"], [3, 2, 1, "", "is_ordered"], [3, 2, 1, "", "is_task"], [3, 3, 1, "", "set_values"], [3, 2, 1, "", "sort_values"], [3, 3, 1, "", "validate"], [3, 2, 1, "", "values"]], "ax.core.parameter.FixedParameter": [[3, 2, 1, "", "available_flags"], [3, 3, 1, "", "cardinality"], [3, 3, 1, "", "clone"], [3, 2, 1, "", "dependents"], [3, 2, 1, "", "domain_repr"], [3, 3, 1, "", "set_value"], [3, 3, 1, "", "validate"], [3, 2, 1, "", "value"]], "ax.core.parameter.Parameter": [[3, 2, 1, "", "available_flags"], [3, 3, 1, "", "cardinality"], [3, 3, 1, "", "cast"], [3, 3, 1, "", "clone"], [3, 2, 1, "", "dependents"], [3, 2, 1, "", "domain_repr"], [3, 2, 1, "", "is_fidelity"], [3, 2, 1, "", "is_hierarchical"], [3, 2, 1, "", "is_numeric"], [3, 3, 1, "", "is_valid_type"], [3, 2, 1, "", "name"], [3, 2, 1, "", "parameter_type"], [3, 2, 1, "", "python_type"], [3, 2, 1, "", "summary_dict"], [3, 2, 1, "", "target_value"], [3, 3, 1, "", "validate"]], "ax.core.parameter.ParameterType": [[3, 4, 1, "", "BOOL"], [3, 4, 1, "", "FLOAT"], [3, 4, 1, "", "INT"], [3, 4, 1, "", "STRING"], [3, 2, 1, "", "is_numeric"]], "ax.core.parameter.RangeParameter": [[3, 2, 1, "", "available_flags"], [3, 3, 1, "", "cardinality"], [3, 3, 1, "", "cast"], [3, 3, 1, "", "clone"], [3, 2, 1, "", "digits"], [3, 2, 1, "", "domain_repr"], [3, 3, 1, "", "is_valid_type"], [3, 2, 1, "", "log_scale"], [3, 2, 1, "", "logit_scale"], [3, 2, 1, "", "lower"], [3, 3, 1, "", "set_digits"], [3, 3, 1, "", "set_log_scale"], [3, 3, 1, "", "set_logit_scale"], [3, 3, 1, "", "update_range"], [3, 2, 1, "", "upper"], [3, 3, 1, "", "validate"]], "ax.core.parameter_constraint": [[3, 1, 1, "", "OrderConstraint"], [3, 1, 1, "", "ParameterConstraint"], [3, 1, 1, "", "SumConstraint"], [3, 5, 1, "", "validate_constraint_parameters"]], "ax.core.parameter_constraint.OrderConstraint": [[3, 3, 1, "", "clone"], [3, 3, 1, "", "clone_with_transformed_parameters"], [3, 2, 1, "", "constraint_dict"], [3, 2, 1, "", "lower_parameter"], [3, 2, 1, "", "parameters"], [3, 2, 1, "", "upper_parameter"]], "ax.core.parameter_constraint.ParameterConstraint": [[3, 2, 1, "", "bound"], [3, 3, 1, "", "check"], [3, 3, 1, "", "clone"], [3, 3, 1, "", "clone_with_transformed_parameters"], [3, 2, 1, "", "constraint_dict"]], "ax.core.parameter_constraint.SumConstraint": [[3, 3, 1, "", "clone"], [3, 3, 1, "", "clone_with_transformed_parameters"], [3, 2, 1, "", "constraint_dict"], [3, 2, 1, "", "is_upper_bound"], [3, 2, 1, "", "op"], [3, 2, 1, "", "parameters"]], "ax.core.parameter_distribution": [[3, 1, 1, "", "ParameterDistribution"]], "ax.core.parameter_distribution.ParameterDistribution": [[3, 3, 1, "", "clone"], [3, 2, 1, "", "distribution"], [3, 2, 1, "", "distribution_class"], [3, 2, 1, "", "distribution_parameters"], [3, 3, 1, "", "is_environmental"]], "ax.core.risk_measures": [[3, 1, 1, "", "RiskMeasure"]], "ax.core.risk_measures.RiskMeasure": [[3, 3, 1, "", "clone"]], "ax.core.runner": [[3, 1, 1, "", "Runner"]], "ax.core.runner.Runner": [[3, 3, 1, "", "clone"], [3, 3, 1, "", "poll_available_capacity"], [3, 3, 1, "", "poll_exception"], [3, 3, 1, "", "poll_trial_status"], [3, 3, 1, "", "run"], [3, 2, 1, "", "run_metadata_report_keys"], [3, 3, 1, "", "run_multiple"], [3, 2, 1, "", "staging_required"], [3, 3, 1, "", "stop"]], "ax.core.trial": [[3, 1, 1, "", "Trial"]], "ax.core.trial.Trial": [[3, 2, 1, "", "abandoned_arms"], [3, 3, 1, "", "add_arm"], [3, 3, 1, "", "add_generator_run"], [3, 2, 1, "", "arm"], [3, 2, 1, "", "arms"], [3, 2, 1, "", "arms_by_name"], [3, 3, 1, "", "clone_to"], [3, 2, 1, "", "generator_run"], [3, 2, 1, "", "generator_runs"], [3, 3, 1, "", "get_metric_mean"], [3, 2, 1, "", "objective_mean"], [3, 3, 1, "", "update_trial_data"], [3, 3, 1, "", "validate_data_for_trial"]], "ax.core.types": [[3, 1, 1, "", "ComparisonOp"], [3, 5, 1, "", "merge_model_predict"], [3, 5, 1, "", "validate_evaluation_outcome"], [3, 5, 1, "", "validate_fidelity_trial_evaluation"], [3, 5, 1, "", "validate_floatlike"], [3, 5, 1, "", "validate_map_dict"], [3, 5, 1, "", "validate_map_trial_evaluation"], [3, 5, 1, "", "validate_param_value"], [3, 5, 1, "", "validate_parameterization"], [3, 5, 1, "", "validate_single_metric_data"], [3, 5, 1, "", "validate_trial_evaluation"]], "ax.core.types.ComparisonOp": [[3, 4, 1, "", "GEQ"], [3, 4, 1, "", "LEQ"]], "ax.core.utils": [[3, 1, 1, "", "MissingMetrics"], [3, 5, 1, "", "best_feasible_objective"], [3, 5, 1, "", "extend_pending_observations"], [3, 5, 1, "", "extract_pending_observations"], [3, 5, 1, "", "get_missing_metrics"], [3, 5, 1, "", "get_missing_metrics_by_name"], [3, 5, 1, "", "get_model_times"], [3, 5, 1, "", "get_model_trace_of_times"], [3, 5, 1, "", "get_pending_observation_features"], [3, 5, 1, "", "get_pending_observation_features_based_on_trial_status"], [3, 5, 1, "", "get_target_trial_index"]], "ax.core.utils.MissingMetrics": [[3, 4, 1, "", "objective"], [3, 4, 1, "", "outcome_constraints"], [3, 4, 1, "", "tracking_metrics"]], "ax.early_stopping": [[4, 0, 0, "-", "utils"]], "ax.early_stopping.strategies": [[4, 0, 0, "-", "base"], [4, 0, 0, "-", "logical"], [4, 0, 0, "-", "percentile"], [4, 0, 0, "-", "threshold"]], "ax.early_stopping.strategies.base": [[4, 1, 1, "", "BaseEarlyStoppingStrategy"], [4, 1, 1, "", "EarlyStoppingTrainingData"], [4, 1, 1, "", "ModelBasedEarlyStoppingStrategy"], [4, 5, 1, "", "get_transform_helper_model"]], "ax.early_stopping.strategies.base.BaseEarlyStoppingStrategy": [[4, 3, 1, "", "is_eligible"], [4, 3, 1, "", "is_eligible_any"], [4, 3, 1, "", "should_stop_trials_early"]], "ax.early_stopping.strategies.base.EarlyStoppingTrainingData": [[4, 4, 1, "", "X"], [4, 4, 1, "", "Y"], [4, 4, 1, "", "Yvar"], [4, 4, 1, "", "arm_names"]], "ax.early_stopping.strategies.base.ModelBasedEarlyStoppingStrategy": [[4, 3, 1, "", "get_training_data"]], "ax.early_stopping.strategies.logical": [[4, 1, 1, "", "AndEarlyStoppingStrategy"], [4, 1, 1, "", "LogicalEarlyStoppingStrategy"], [4, 1, 1, "", "OrEarlyStoppingStrategy"]], "ax.early_stopping.strategies.logical.AndEarlyStoppingStrategy": [[4, 3, 1, "", "should_stop_trials_early"]], "ax.early_stopping.strategies.logical.OrEarlyStoppingStrategy": [[4, 3, 1, "", "from_early_stopping_strategies"], [4, 3, 1, "", "should_stop_trials_early"]], "ax.early_stopping.strategies.percentile": [[4, 1, 1, "", "PercentileEarlyStoppingStrategy"]], "ax.early_stopping.strategies.percentile.PercentileEarlyStoppingStrategy": [[4, 3, 1, "", "should_stop_trials_early"]], "ax.early_stopping.strategies.threshold": [[4, 1, 1, "", "ThresholdEarlyStoppingStrategy"]], "ax.early_stopping.strategies.threshold.ThresholdEarlyStoppingStrategy": [[4, 3, 1, "", "should_stop_trials_early"]], "ax.early_stopping.utils": [[4, 5, 1, "", "align_partial_results"], [4, 5, 1, "", "estimate_early_stopping_savings"]], "ax.exceptions": [[5, 0, 0, "-", "constants"], [5, 0, 0, "-", "core"], [5, 0, 0, "-", "data_provider"], [5, 0, 0, "-", "generation_strategy"], [5, 0, 0, "-", "model"], [5, 0, 0, "-", "storage"]], "ax.exceptions.core": [[5, 6, 1, "", "AxError"], [5, 6, 1, "", "AxParameterWarning"], [5, 6, 1, "", "AxStorageWarning"], [5, 6, 1, "", "AxWarning"], [5, 6, 1, "", "DataRequiredError"], [5, 6, 1, "", "ExperimentNotFoundError"], [5, 6, 1, "", "ExperimentNotReadyError"], [5, 6, 1, "", "IncompatibleDependencyVersion"], [5, 6, 1, "", "MetricDataNotReadyError"], [5, 6, 1, "", "MisconfiguredExperiment"], [5, 6, 1, "", "NoDataError"], [5, 6, 1, "", "ObjectNotFoundError"], [5, 6, 1, "", "OptimizationComplete"], [5, 6, 1, "", "OptimizationShouldStop"], [5, 6, 1, "", "SearchSpaceExhausted"], [5, 6, 1, "", "UnsupportedError"], [5, 6, 1, "", "UnsupportedPlotError"], [5, 6, 1, "", "UserInputError"]], "ax.exceptions.data_provider": [[5, 6, 1, "", "DataProviderError"], [5, 6, 1, "", "MissingDataError"]], "ax.exceptions.generation_strategy": [[5, 6, 1, "", "AxGenerationException"], [5, 6, 1, "", "GenerationStrategyCompleted"], [5, 6, 1, "", "GenerationStrategyMisconfiguredException"], [5, 6, 1, "", "GenerationStrategyRepeatedPoints"], [5, 6, 1, "", "MaxParallelismReachedException"], [5, 6, 1, "", "OptimizationConfigRequired"]], "ax.exceptions.model": [[5, 6, 1, "", "CVNotSupportedError"], [5, 6, 1, "", "ModelError"]], "ax.exceptions.storage": [[5, 6, 1, "", "ImmutabilityError"], [5, 6, 1, "", "IncorrectDBConfigurationError"], [5, 6, 1, "", "JSONDecodeError"], [5, 6, 1, "", "JSONEncodeError"], [5, 6, 1, "", "SQADecodeError"], [5, 6, 1, "", "SQAEncodeError"]], "ax.global_stopping.strategies": [[6, 0, 0, "-", "base"], [6, 0, 0, "-", "improvement"]], "ax.global_stopping.strategies.base": [[6, 1, 1, "", "BaseGlobalStoppingStrategy"]], "ax.global_stopping.strategies.base.BaseGlobalStoppingStrategy": [[6, 3, 1, "", "should_stop_optimization"]], "ax.global_stopping.strategies.improvement": [[6, 1, 1, "", "ImprovementGlobalStoppingStrategy"], [6, 5, 1, "", "constraint_satisfaction"]], "ax.health_check": [[7, 0, 0, "-", "search_space"]], "ax.health_check.search_space": [[7, 5, 1, "", "search_space_update_recommendation"]], "ax.metrics": [[9, 0, 0, "-", "branin"], [9, 0, 0, "-", "branin_map"], [9, 0, 0, "-", "chemistry"], [9, 0, 0, "-", "curve"], [9, 0, 0, "-", "factorial"], [9, 0, 0, "-", "hartmann6"], [9, 0, 0, "-", "l2norm"], [9, 0, 0, "-", "noisy_function"], [9, 0, 0, "-", "noisy_function_map"], [9, 0, 0, "-", "sklearn"], [9, 0, 0, "-", "tensorboard"], [9, 0, 0, "-", "torchx"]], "ax.metrics.branin": [[9, 1, 1, "", "AugmentedBraninMetric"], [9, 1, 1, "", "BraninMetric"], [9, 1, 1, "", "NegativeBraninMetric"]], "ax.metrics.branin.AugmentedBraninMetric": [[9, 3, 1, "", "f"]], "ax.metrics.branin.BraninMetric": [[9, 3, 1, "", "f"]], "ax.metrics.branin.NegativeBraninMetric": [[9, 3, 1, "", "f"]], "ax.metrics.branin_map": [[9, 1, 1, "", "BraninFidelityMapMetric"], [9, 1, 1, "", "BraninTimestampMapMetric"], [9, 5, 1, "", "random"]], "ax.metrics.branin_map.BraninFidelityMapMetric": [[9, 3, 1, "", "f"], [9, 3, 1, "", "fetch_trial_data"], [9, 4, 1, "", "map_key_info"]], "ax.metrics.branin_map.BraninTimestampMapMetric": [[9, 3, 1, "", "f"], [9, 3, 1, "", "fetch_trial_data"]], "ax.metrics.chemistry": [[9, 1, 1, "", "ChemistryData"], [9, 1, 1, "", "ChemistryMetric"], [9, 1, 1, "", "ChemistryProblemType"]], "ax.metrics.chemistry.ChemistryData": [[9, 3, 1, "", "evaluate"], [9, 4, 1, "", "objective_dict"], [9, 4, 1, "", "param_names"]], "ax.metrics.chemistry.ChemistryMetric": [[9, 3, 1, "", "clone"], [9, 3, 1, "", "fetch_trial_data"], [9, 4, 1, "", "lower_is_better"], [9, 4, 1, "", "noiseless"]], "ax.metrics.chemistry.ChemistryProblemType": [[9, 4, 1, "", "DIRECT_ARYLATION"], [9, 4, 1, "", "SUZUKI"]], "ax.metrics.factorial": [[9, 1, 1, "", "FactorialMetric"], [9, 5, 1, "", "evaluation_function"]], "ax.metrics.factorial.FactorialMetric": [[9, 3, 1, "", "fetch_trial_data"], [9, 3, 1, "", "is_available_while_running"]], "ax.metrics.hartmann6": [[9, 1, 1, "", "AugmentedHartmann6Metric"], [9, 1, 1, "", "Hartmann6Metric"]], "ax.metrics.hartmann6.AugmentedHartmann6Metric": [[9, 3, 1, "", "f"]], "ax.metrics.hartmann6.Hartmann6Metric": [[9, 3, 1, "", "f"]], "ax.metrics.l2norm": [[9, 1, 1, "", "L2NormMetric"]], "ax.metrics.l2norm.L2NormMetric": [[9, 3, 1, "", "f"]], "ax.metrics.noisy_function": [[9, 1, 1, "", "GenericNoisyFunctionMetric"], [9, 1, 1, "", "NoisyFunctionMetric"]], "ax.metrics.noisy_function.GenericNoisyFunctionMetric": [[9, 3, 1, "", "clone"], [9, 2, 1, "", "param_names"]], "ax.metrics.noisy_function.NoisyFunctionMetric": [[9, 3, 1, "", "clone"], [9, 3, 1, "", "f"], [9, 3, 1, "", "fetch_trial_data"], [9, 3, 1, "", "is_available_while_running"]], "ax.metrics.noisy_function_map": [[9, 1, 1, "", "NoisyFunctionMapMetric"]], "ax.metrics.noisy_function_map.NoisyFunctionMapMetric": [[9, 3, 1, "", "clone"], [9, 3, 1, "", "f"], [9, 3, 1, "", "fetch_trial_data"], [9, 3, 1, "", "is_available_while_running"], [9, 4, 1, "", "map_key_info"], [9, 3, 1, "", "overwrite_existing_data"]], "ax.metrics.sklearn": [[9, 1, 1, "", "SklearnDataset"], [9, 1, 1, "", "SklearnMetric"], [9, 1, 1, "", "SklearnModelType"]], "ax.metrics.sklearn.SklearnDataset": [[9, 4, 1, "", "BOSTON"], [9, 4, 1, "", "CANCER"], [9, 4, 1, "", "DIGITS"]], "ax.metrics.sklearn.SklearnMetric": [[9, 3, 1, "", "clone"], [9, 3, 1, "", "fetch_trial_data"], [9, 3, 1, "", "train_eval"]], "ax.metrics.sklearn.SklearnModelType": [[9, 4, 1, "", "NN"], [9, 4, 1, "", "RF"]], "ax.metrics.tensorboard": [[9, 1, 1, "", "TensorboardMetric"]], "ax.metrics.tensorboard.TensorboardMetric": [[9, 3, 1, "", "bulk_fetch_trial_data"], [9, 3, 1, "", "fetch_trial_data"], [9, 3, 1, "", "is_available_while_running"], [9, 4, 1, "", "map_key_info"]], "ax.metrics.torchx": [[9, 1, 1, "", "TorchXMetric"]], "ax.metrics.torchx.TorchXMetric": [[9, 3, 1, "", "fetch_trial_data"]], "ax.modelbridge": [[10, 0, 0, "-", "base"], [10, 0, 0, "-", "best_model_selector"], [10, 0, 0, "-", "cross_validation"], [10, 0, 0, "-", "discrete"], [10, 0, 0, "-", "dispatch_utils"], [10, 0, 0, "-", "external_generation_node"], [10, 0, 0, "-", "factory"], [10, 0, 0, "-", "generation_node"], [10, 0, 0, "-", "generation_strategy"], [10, 0, 0, "-", "map_torch"], [10, 0, 0, "-", "model_spec"], [10, 0, 0, "-", "modelbridge_utils"], [10, 0, 0, "-", "pairwise"], [10, 0, 0, "-", "prediction_utils"], [10, 0, 0, "-", "registry"], [10, 0, 0, "-", "torch"]], "ax.modelbridge.base": [[10, 1, 1, "", "BaseGenArgs"], [10, 1, 1, "", "GenResults"], [10, 1, 1, "", "ModelBridge"], [10, 5, 1, "", "clamp_observation_features"], [10, 5, 1, "", "gen_arms"], [10, 5, 1, "", "unwrap_observation_data"]], "ax.modelbridge.base.BaseGenArgs": [[10, 4, 1, "", "fixed_features"], [10, 4, 1, "", "optimization_config"], [10, 4, 1, "", "pending_observations"], [10, 4, 1, "", "search_space"]], "ax.modelbridge.base.GenResults": [[10, 4, 1, "", "best_observation_features"], [10, 4, 1, "", "gen_metadata"], [10, 4, 1, "", "observation_features"], [10, 4, 1, "", "weights"]], "ax.modelbridge.base.ModelBridge": [[10, 3, 1, "", "cross_validate"], [10, 3, 1, "", "feature_importances"], [10, 3, 1, "", "gen"], [10, 3, 1, "", "get_training_data"], [10, 2, 1, "", "metric_names"], [10, 2, 1, "", "model_space"], [10, 3, 1, "", "predict"], [10, 2, 1, "", "status_quo"], [10, 2, 1, "", "status_quo_data_by_trial"], [10, 2, 1, "", "status_quo_name"], [10, 2, 1, "", "statuses_to_fit"], [10, 2, 1, "", "statuses_to_fit_map_metric"], [10, 2, 1, "", "training_in_design"], [10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "transform_observations"], [10, 3, 1, "", "update"]], "ax.modelbridge.best_model_selector": [[10, 1, 1, "", "BestModelSelector"], [10, 1, 1, "", "ReductionCriterion"], [10, 1, 1, "", "SingleDiagnosticBestModelSelector"]], "ax.modelbridge.best_model_selector.BestModelSelector": [[10, 3, 1, "", "best_model"]], "ax.modelbridge.best_model_selector.ReductionCriterion": [[10, 4, 1, "", "MAX"], [10, 4, 1, "", "MEAN"], [10, 4, 1, "", "MIN"]], "ax.modelbridge.best_model_selector.SingleDiagnosticBestModelSelector": [[10, 3, 1, "", "best_model"]], "ax.modelbridge.cross_validation": [[10, 1, 1, "", "AssessModelFitResult"], [10, 1, 1, "", "CVResult"], [10, 5, 1, "", "assess_model_fit"], [10, 5, 1, "", "compute_diagnostics"], [10, 5, 1, "", "compute_model_fit_metrics_from_modelbridge"], [10, 5, 1, "", "cross_validate"], [10, 5, 1, "", "cross_validate_by_trial"], [10, 5, 1, "", "get_fit_and_std_quality_and_generalization_dict"], [10, 5, 1, "", "has_good_opt_config_model_fit"]], "ax.modelbridge.cross_validation.AssessModelFitResult": [[10, 4, 1, "", "bad_fit_metrics_to_fisher_score"], [10, 4, 1, "", "good_fit_metrics_to_fisher_score"]], "ax.modelbridge.cross_validation.CVResult": [[10, 4, 1, "", "observed"], [10, 4, 1, "", "predicted"]], "ax.modelbridge.discrete": [[10, 1, 1, "", "DiscreteModelBridge"]], "ax.modelbridge.discrete.DiscreteModelBridge": [[10, 4, 1, "", "model"], [10, 4, 1, "", "outcomes"], [10, 4, 1, "", "parameters"], [10, 4, 1, "", "search_space"]], "ax.modelbridge.dispatch_utils": [[10, 5, 1, "", "calculate_num_initialization_trials"], [10, 5, 1, "", "choose_generation_strategy"]], "ax.modelbridge.external_generation_node": [[10, 1, 1, "", "ExternalGenerationNode"]], "ax.modelbridge.external_generation_node.ExternalGenerationNode": [[10, 3, 1, "", "fit"], [10, 3, 1, "", "get_next_candidate"], [10, 2, 1, "", "model_spec_to_gen_from"], [10, 3, 1, "", "update_generator_state"]], "ax.modelbridge.factory": [[10, 7, 1, "", "DEFAULT_EHVI_BATCH_LIMIT"], [10, 5, 1, "", "get_botorch"], [10, 5, 1, "", "get_empirical_bayes_thompson"], [10, 5, 1, "", "get_factorial"], [10, 5, 1, "", "get_sobol"], [10, 5, 1, "", "get_thompson"], [10, 5, 1, "", "get_uniform"]], "ax.modelbridge.generation_node": [[10, 1, 1, "", "GenerationNode"], [10, 1, 1, "", "GenerationStep"]], "ax.modelbridge.generation_node.GenerationNode": [[10, 2, 1, "", "experiment"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "gen"], [10, 2, 1, "", "generation_strategy"], [10, 3, 1, "", "generator_run_limit"], [10, 2, 1, "", "input_constructors"], [10, 2, 1, "", "is_completed"], [10, 2, 1, "", "model_spec_to_gen_from"], [10, 4, 1, "", "model_specs"], [10, 2, 1, "", "model_to_gen_from_name"], [10, 2, 1, "", "node_name"], [10, 2, 1, "", "node_that_generated_last_gr"], [10, 2, 1, "", "previous_node"], [10, 4, 1, "", "should_deduplicate"], [10, 3, 1, "", "should_transition_to_next_node"], [10, 2, 1, "", "transition_criteria"], [10, 2, 1, "", "transition_edges"], [10, 2, 1, "", "trials_from_node"]], "ax.modelbridge.generation_node.GenerationStep": [[10, 3, 1, "", "gen"], [10, 2, 1, "", "model_gen_kwargs"], [10, 2, 1, "", "model_kwargs"], [10, 2, 1, "", "model_spec"]], "ax.modelbridge.generation_strategy": [[10, 1, 1, "", "GenerationStrategy"], [10, 5, 1, "", "step_based_gs_only"]], "ax.modelbridge.generation_strategy.GenerationStrategy": [[10, 3, 1, "", "clone_reset"], [10, 3, 1, "", "current_generator_run_limit"], [10, 2, 1, "", "current_node"], [10, 2, 1, "", "current_node_name"], [10, 2, 1, "", "current_step"], [10, 2, 1, "", "current_step_index"], [10, 2, 1, "", "experiment"], [10, 3, 1, "", "gen"], [10, 3, 1, "", "gen_for_multiple_trials_with_multiple_models"], [10, 3, 1, "", "gen_with_multiple_nodes"], [10, 2, 1, "", "is_node_based"], [10, 2, 1, "", "last_generator_run"], [10, 2, 1, "", "model"], [10, 2, 1, "", "model_transitions"], [10, 2, 1, "", "name"], [10, 2, 1, "", "nodes_dict"], [10, 2, 1, "", "optimization_complete"], [10, 2, 1, "", "trials_as_df"], [10, 2, 1, "", "uses_non_registered_models"]], "ax.modelbridge.map_torch": [[10, 1, 1, "", "MapTorchModelBridge"]], "ax.modelbridge.map_torch.MapTorchModelBridge": [[10, 2, 1, "", "parameters_with_map_keys"], [10, 2, 1, "", "statuses_to_fit_map_metric"]], "ax.modelbridge.model_spec": [[10, 1, 1, "", "FactoryFunctionModelSpec"], [10, 1, 1, "", "ModelSpec"], [10, 1, 1, "", "ModelSpecJSONEncoder"]], "ax.modelbridge.model_spec.FactoryFunctionModelSpec": [[10, 4, 1, "", "factory_function"], [10, 3, 1, "", "fit"], [10, 4, 1, "", "model_enum"]], "ax.modelbridge.model_spec.ModelSpec": [[10, 3, 1, "", "copy"], [10, 3, 1, "", "cross_validate"], [10, 2, 1, "", "cv_results"], [10, 2, 1, "", "diagnostics"], [10, 3, 1, "", "fit"], [10, 2, 1, "", "fitted_model"], [10, 2, 1, "", "fixed_features"], [10, 3, 1, "", "gen"], [10, 4, 1, "", "model_cv_kwargs"], [10, 4, 1, "", "model_enum"], [10, 4, 1, "", "model_gen_kwargs"], [10, 2, 1, "", "model_key"], [10, 4, 1, "", "model_key_override"], [10, 4, 1, "", "model_kwargs"]], "ax.modelbridge.model_spec.ModelSpecJSONEncoder": [[10, 3, 1, "", "default"]], "ax.modelbridge.modelbridge_utils": [[10, 5, 1, "", "array_to_observation_data"], [10, 5, 1, "", "check_has_multi_objective_and_data"], [10, 5, 1, "", "extract_objective_thresholds"], [10, 5, 1, "", "extract_objective_weights"], [10, 5, 1, "", "extract_outcome_constraints"], [10, 5, 1, "", "extract_parameter_constraints"], [10, 5, 1, "", "extract_risk_measure"], [10, 5, 1, "", "extract_robust_digest"], [10, 5, 1, "", "extract_search_space_digest"], [10, 5, 1, "", "feasible_hypervolume"], [10, 5, 1, "", "get_fixed_features"], [10, 5, 1, "", "get_fixed_features_from_experiment"], [10, 5, 1, "", "get_pareto_frontier_and_configs"], [10, 5, 1, "", "hypervolume"], [10, 5, 1, "", "observation_data_to_array"], [10, 5, 1, "", "observation_features_to_array"], [10, 5, 1, "", "observed_hypervolume"], [10, 5, 1, "", "observed_pareto_frontier"], [10, 5, 1, "", "pareto_frontier"], [10, 5, 1, "", "parse_observation_features"], [10, 5, 1, "", "pending_observations_as_array_list"], [10, 5, 1, "", "predicted_hypervolume"], [10, 5, 1, "", "predicted_pareto_frontier"], [10, 5, 1, "", "process_contextual_datasets"], [10, 5, 1, "", "transform_callback"], [10, 5, 1, "", "transform_search_space"], [10, 5, 1, "", "validate_and_apply_final_transform"]], "ax.modelbridge.pairwise": [[10, 1, 1, "", "PairwiseModelBridge"]], "ax.modelbridge.prediction_utils": [[10, 5, 1, "", "predict_at_point"], [10, 5, 1, "", "predict_by_features"]], "ax.modelbridge.registry": [[10, 1, 1, "", "ModelRegistryBase"], [10, 1, 1, "", "ModelSetup"], [10, 1, 1, "", "Models"], [10, 5, 1, "", "get_model_from_generator_run"]], "ax.modelbridge.registry.ModelRegistryBase": [[10, 2, 1, "", "model_bridge_class"], [10, 2, 1, "", "model_class"], [10, 3, 1, "", "view_defaults"], [10, 3, 1, "", "view_kwargs"]], "ax.modelbridge.registry.ModelSetup": [[10, 4, 1, "", "bridge_class"], [10, 4, 1, "", "default_model_kwargs"], [10, 4, 1, "", "model_class"], [10, 4, 1, "", "not_saved_model_kwargs"], [10, 4, 1, "", "standard_bridge_kwargs"], [10, 4, 1, "", "transforms"]], "ax.modelbridge.registry.Models": [[10, 4, 1, "", "BOTORCH_MODULAR"], [10, 4, 1, "", "BO_MIXED"], [10, 4, 1, "", "CONTEXT_SACBO"], [10, 4, 1, "", "EMPIRICAL_BAYES_THOMPSON"], [10, 4, 1, "", "FACTORIAL"], [10, 4, 1, "", "LEGACY_BOTORCH"], [10, 4, 1, "", "SAASBO"], [10, 4, 1, "", "SAAS_MTGP"], [10, 4, 1, "", "SOBOL"], [10, 4, 1, "", "ST_MTGP"], [10, 4, 1, "", "THOMPSON"], [10, 4, 1, "", "UNIFORM"]], "ax.modelbridge.torch": [[10, 1, 1, "", "TorchModelBridge"], [10, 5, 1, "", "validate_optimization_config"]], "ax.modelbridge.torch.TorchModelBridge": [[10, 3, 1, "", "evaluate_acquisition_function"], [10, 3, 1, "", "feature_importances"], [10, 3, 1, "", "infer_objective_thresholds"], [10, 4, 1, "", "model"], [10, 3, 1, "", "model_best_point"], [10, 4, 1, "", "outcomes"], [10, 4, 1, "", "parameters"]], "ax.modelbridge.transforms": [[10, 0, 0, "-", "base"], [10, 0, 0, "-", "cast"], [10, 0, 0, "-", "choice_encode"], [10, 0, 0, "-", "convert_metric_names"], [10, 0, 0, "-", "deprecated_transform_mixin"], [10, 0, 0, "-", "derelativize"], [10, 0, 0, "-", "fill_missing_parameters"], [10, 0, 0, "-", "int_range_to_choice"], [10, 0, 0, "-", "int_to_float"], [10, 0, 0, "-", "ivw"], [10, 0, 0, "-", "log"], [10, 0, 0, "-", "log_y"], [10, 0, 0, "-", "logit"], [10, 0, 0, "-", "map_unit_x"], [10, 0, 0, "-", "merge_repeated_measurements"], [10, 0, 0, "-", "metrics_as_task"], [10, 0, 0, "-", "one_hot"], [10, 0, 0, "-", "power_transform_y"], [10, 0, 0, "-", "relativize"], [10, 0, 0, "-", "remove_fixed"], [10, 0, 0, "-", "rounding"], [10, 0, 0, "-", "search_space_to_choice"], [10, 0, 0, "-", "standardize_y"], [10, 0, 0, "-", "stratified_standardize_y"], [10, 0, 0, "-", "task_encode"], [10, 0, 0, "-", "time_as_feature"], [10, 0, 0, "-", "transform_to_new_sq"], [10, 0, 0, "-", "trial_as_task"], [10, 0, 0, "-", "unit_x"], [10, 0, 0, "-", "utils"], [10, 0, 0, "-", "winsorize"]], "ax.modelbridge.transforms.base": [[10, 1, 1, "", "Transform"]], "ax.modelbridge.transforms.base.Transform": [[10, 4, 1, "", "config"], [10, 4, 1, "", "modelbridge"], [10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "transform_observations"], [10, 3, 1, "", "transform_optimization_config"], [10, 3, 1, "", "transform_search_space"], [10, 3, 1, "", "untransform_observation_features"], [10, 3, 1, "", "untransform_observations"], [10, 3, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.cast": [[10, 1, 1, "", "Cast"]], "ax.modelbridge.transforms.cast.Cast": [[10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.choice_encode": [[10, 1, 1, "", "ChoiceEncode"], [10, 1, 1, "", "ChoiceToNumericChoice"], [10, 1, 1, "", "OrderedChoiceEncode"], [10, 1, 1, "", "OrderedChoiceToIntegerRange"], [10, 5, 1, "", "transform_choice_values"]], "ax.modelbridge.transforms.choice_encode.ChoiceToNumericChoice": [[10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.convert_metric_names": [[10, 1, 1, "", "ConvertMetricNames"], [10, 5, 1, "", "convert_mt_observations"], [10, 5, 1, "", "tconfig_from_mt_experiment"]], "ax.modelbridge.transforms.convert_metric_names.ConvertMetricNames": [[10, 3, 1, "", "untransform_observations"]], "ax.modelbridge.transforms.derelativize": [[10, 1, 1, "", "Derelativize"], [10, 5, 1, "", "derelativize_bound"]], "ax.modelbridge.transforms.derelativize.Derelativize": [[10, 3, 1, "", "transform_optimization_config"], [10, 3, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.fill_missing_parameters": [[10, 1, 1, "", "FillMissingParameters"]], "ax.modelbridge.transforms.fill_missing_parameters.FillMissingParameters": [[10, 3, 1, "", "transform_observation_features"]], "ax.modelbridge.transforms.int_range_to_choice": [[10, 1, 1, "", "IntRangeToChoice"]], "ax.modelbridge.transforms.int_to_float": [[10, 1, 1, "", "IntToFloat"]], "ax.modelbridge.transforms.int_to_float.IntToFloat": [[10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.ivw": [[10, 1, 1, "", "IVW"], [10, 5, 1, "", "ivw_metric_merge"]], "ax.modelbridge.transforms.log": [[10, 1, 1, "", "Log"]], "ax.modelbridge.transforms.log.Log": [[10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.log_y": [[10, 1, 1, "", "LogY"], [10, 5, 1, "", "lognorm_to_norm"], [10, 5, 1, "", "match_ci_width"], [10, 5, 1, "", "norm_to_lognorm"]], "ax.modelbridge.transforms.log_y.LogY": [[10, 3, 1, "", "transform_optimization_config"], [10, 3, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.logit": [[10, 1, 1, "", "Logit"]], "ax.modelbridge.transforms.logit.Logit": [[10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.map_unit_x": [[10, 1, 1, "", "MapUnitX"]], "ax.modelbridge.transforms.map_unit_x.MapUnitX": [[10, 4, 1, "", "target_lb"], [10, 4, 1, "", "target_range"], [10, 3, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.merge_repeated_measurements": [[10, 1, 1, "", "MergeRepeatedMeasurements"]], "ax.modelbridge.transforms.merge_repeated_measurements.MergeRepeatedMeasurements": [[10, 3, 1, "", "transform_observations"]], "ax.modelbridge.transforms.metrics_as_task": [[10, 1, 1, "", "MetricsAsTask"]], "ax.modelbridge.transforms.metrics_as_task.MetricsAsTask": [[10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "transform_observations"], [10, 3, 1, "", "untransform_observation_features"], [10, 3, 1, "", "untransform_observations"]], "ax.modelbridge.transforms.one_hot": [[10, 1, 1, "", "OneHot"], [10, 1, 1, "", "OneHotEncoder"]], "ax.modelbridge.transforms.one_hot.OneHot": [[10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.one_hot.OneHotEncoder": [[10, 3, 1, "", "inverse_transform"], [10, 3, 1, "", "transform"]], "ax.modelbridge.transforms.power_transform_y": [[10, 1, 1, "", "PowerTransformY"]], "ax.modelbridge.transforms.power_transform_y.PowerTransformY": [[10, 3, 1, "", "transform_optimization_config"], [10, 3, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.relativize": [[10, 1, 1, "", "BaseRelativize"], [10, 1, 1, "", "Relativize"], [10, 1, 1, "", "RelativizeWithConstantControl"], [10, 5, 1, "", "get_metric_index"]], "ax.modelbridge.transforms.relativize.BaseRelativize": [[10, 2, 1, "", "control_as_constant"], [10, 3, 1, "", "transform_observations"], [10, 3, 1, "", "transform_optimization_config"], [10, 3, 1, "", "untransform_observations"], [10, 3, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.relativize.Relativize": [[10, 2, 1, "", "control_as_constant"]], "ax.modelbridge.transforms.relativize.RelativizeWithConstantControl": [[10, 2, 1, "", "control_as_constant"]], "ax.modelbridge.transforms.remove_fixed": [[10, 1, 1, "", "RemoveFixed"]], "ax.modelbridge.transforms.remove_fixed.RemoveFixed": [[10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.rounding": [[10, 5, 1, "", "contains_constrained_integer"], [10, 5, 1, "", "randomized_onehot_round"], [10, 5, 1, "", "randomized_round"], [10, 5, 1, "", "randomized_round_parameters"], [10, 5, 1, "", "strict_onehot_round"]], "ax.modelbridge.transforms.search_space_to_choice": [[10, 1, 1, "", "SearchSpaceToChoice"]], "ax.modelbridge.transforms.search_space_to_choice.SearchSpaceToChoice": [[10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.standardize_y": [[10, 1, 1, "", "StandardizeY"], [10, 5, 1, "", "compute_standardization_parameters"]], "ax.modelbridge.transforms.standardize_y.StandardizeY": [[10, 3, 1, "", "transform_optimization_config"], [10, 3, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.stratified_standardize_y": [[10, 1, 1, "", "StratifiedStandardizeY"]], "ax.modelbridge.transforms.stratified_standardize_y.StratifiedStandardizeY": [[10, 3, 1, "", "transform_observations"], [10, 3, 1, "", "transform_optimization_config"], [10, 3, 1, "", "untransform_observations"], [10, 3, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.task_encode": [[10, 1, 1, "", "TaskChoiceToIntTaskChoice"], [10, 1, 1, "", "TaskEncode"]], "ax.modelbridge.transforms.time_as_feature": [[10, 1, 1, "", "TimeAsFeature"]], "ax.modelbridge.transforms.time_as_feature.TimeAsFeature": [[10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.transform_to_new_sq": [[10, 1, 1, "", "TransformToNewSQ"]], "ax.modelbridge.transforms.transform_to_new_sq.TransformToNewSQ": [[10, 2, 1, "", "control_as_constant"], [10, 3, 1, "", "transform_optimization_config"], [10, 3, 1, "", "untransform_outcome_constraints"]], "ax.modelbridge.transforms.trial_as_task": [[10, 1, 1, "", "TrialAsTask"]], "ax.modelbridge.transforms.trial_as_task.TrialAsTask": [[10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.unit_x": [[10, 1, 1, "", "UnitX"]], "ax.modelbridge.transforms.unit_x.UnitX": [[10, 4, 1, "", "target_lb"], [10, 4, 1, "", "target_range"], [10, 3, 1, "", "transform_observation_features"], [10, 3, 1, "", "untransform_observation_features"]], "ax.modelbridge.transforms.utils": [[10, 1, 1, "", "ClosestLookupDict"], [10, 5, 1, "", "construct_new_search_space"], [10, 5, 1, "", "derelativize_optimization_config_with_raw_status_quo"], [10, 5, 1, "", "get_data"], [10, 5, 1, "", "match_ci_width_truncated"]], "ax.modelbridge.transforms.winsorize": [[10, 1, 1, "", "Winsorize"]], "ax.modelbridge.transforms.winsorize.Winsorize": [[10, 4, 1, "", "cutoffs"]], "ax.models": [[11, 0, 0, "-", "base"], [11, 0, 0, "-", "discrete_base"], [11, 0, 0, "-", "model_utils"], [11, 0, 0, "-", "torch_base"], [11, 0, 0, "-", "types"], [11, 0, 0, "-", "winsorization_config"]], "ax.models.base": [[11, 1, 1, "", "Model"]], "ax.models.base.Model": [[11, 3, 1, "", "deserialize_state"], [11, 3, 1, "", "feature_importances"], [11, 3, 1, "", "serialize_state"]], "ax.models.discrete": [[11, 0, 0, "-", "eb_thompson"], [11, 0, 0, "-", "full_factorial"], [11, 0, 0, "-", "thompson"]], "ax.models.discrete.eb_thompson": [[11, 1, 1, "", "EmpiricalBayesThompsonSampler"]], "ax.models.discrete.full_factorial": [[11, 1, 1, "", "FullFactorialGenerator"]], "ax.models.discrete.full_factorial.FullFactorialGenerator": [[11, 3, 1, "", "gen"]], "ax.models.discrete.thompson": [[11, 1, 1, "", "ThompsonSampler"]], "ax.models.discrete.thompson.ThompsonSampler": [[11, 3, 1, "", "fit"], [11, 3, 1, "", "gen"], [11, 3, 1, "", "predict"]], "ax.models.discrete_base": [[11, 1, 1, "", "DiscreteModel"]], "ax.models.discrete_base.DiscreteModel": [[11, 3, 1, "", "best_point"], [11, 3, 1, "", "cross_validate"], [11, 3, 1, "", "fit"], [11, 3, 1, "", "gen"], [11, 3, 1, "", "predict"]], "ax.models.model_utils": [[11, 1, 1, "", "TorchModelLike"], [11, 5, 1, "", "add_fixed_features"], [11, 5, 1, "", "all_ordinal_features_are_integer_valued"], [11, 5, 1, "", "as_array"], [11, 5, 1, "", "best_in_sample_point"], [11, 5, 1, "", "best_observed_point"], [11, 5, 1, "", "check_duplicate"], [11, 5, 1, "", "check_param_constraints"], [11, 5, 1, "", "enumerate_discrete_combinations"], [11, 5, 1, "", "filter_constraints_and_fixed_features"], [11, 5, 1, "", "get_observed"], [11, 5, 1, "", "mk_discrete_choices"], [11, 5, 1, "", "rejection_sample"], [11, 5, 1, "", "tunable_feature_indices"], [11, 5, 1, "", "validate_bounds"]], "ax.models.model_utils.TorchModelLike": [[11, 3, 1, "", "predict"]], "ax.models.random": [[11, 0, 0, "-", "base"], [11, 0, 0, "-", "sobol"], [11, 0, 0, "-", "uniform"]], "ax.models.random.base": [[11, 1, 1, "", "RandomModel"]], "ax.models.random.base.RandomModel": [[11, 4, 1, "", "deduplicate"], [11, 4, 1, "", "fallback_to_sample_polytope"], [11, 3, 1, "", "gen"], [11, 4, 1, "", "generated_points"], [11, 4, 1, "", "init_position"], [11, 4, 1, "", "seed"]], "ax.models.random.sobol": [[11, 1, 1, "", "SobolGenerator"]], "ax.models.random.sobol.SobolGenerator": [[11, 2, 1, "", "engine"], [11, 3, 1, "", "gen"], [11, 3, 1, "", "init_engine"], [11, 4, 1, "", "scramble"]], "ax.models.random.uniform": [[11, 1, 1, "", "UniformGenerator"]], "ax.models.torch": [[11, 0, 0, "-", "botorch"], [11, 0, 0, "-", "botorch_defaults"], [11, 0, 0, "-", "botorch_moo"], [11, 0, 0, "-", "botorch_moo_defaults"], [11, 0, 0, "-", "cbo_lcea"], [11, 0, 0, "-", "cbo_lcem"], [11, 0, 0, "-", "cbo_sac"], [11, 0, 0, "-", "randomforest"], [11, 0, 0, "-", "utils"]], "ax.models.torch.botorch": [[11, 1, 1, "", "BotorchModel"], [11, 5, 1, "", "get_feature_importances_from_botorch_model"], [11, 5, 1, "", "get_rounding_func"]], "ax.models.torch.botorch.BotorchModel": [[11, 4, 1, "", "Xs"], [11, 4, 1, "", "Ys"], [11, 4, 1, "", "Yvars"], [11, 3, 1, "", "best_point"], [11, 3, 1, "", "cross_validate"], [11, 3, 1, "", "feature_importances"], [11, 3, 1, "", "fit"], [11, 3, 1, "", "gen"], [11, 2, 1, "", "model"], [11, 3, 1, "", "predict"], [11, 2, 1, "", "search_space_digest"]], "ax.models.torch.botorch_defaults": [[11, 1, 1, "", "TAcqfConstructor"], [11, 5, 1, "", "get_NEI"], [11, 5, 1, "", "get_acqf"], [11, 5, 1, "", "get_and_fit_model"], [11, 5, 1, "", "get_qEI"], [11, 5, 1, "", "get_qLogEI"], [11, 5, 1, "", "get_qLogNEI"], [11, 5, 1, "", "get_warping_transform"], [11, 5, 1, "", "recommend_best_observed_point"], [11, 5, 1, "", "recommend_best_out_of_sample_point"], [11, 5, 1, "", "scipy_optimizer"]], "ax.models.torch.botorch_modular": [[11, 0, 0, "-", "acquisition"], [11, 0, 0, "-", "kernels"], [11, 0, 0, "-", "model"], [11, 0, 0, "-", "optimizer_argparse"], [11, 0, 0, "-", "sebo"], [11, 0, 0, "-", "surrogate"], [11, 0, 0, "-", "utils"]], "ax.models.torch.botorch_modular.acquisition": [[11, 1, 1, "", "Acquisition"]], "ax.models.torch.botorch_modular.acquisition.Acquisition": [[11, 4, 1, "", "acqf"], [11, 2, 1, "", "botorch_acqf_class"], [11, 2, 1, "", "device"], [11, 2, 1, "", "dtype"], [11, 3, 1, "", "evaluate"], [11, 3, 1, "", "get_botorch_objective_and_transform"], [11, 2, 1, "", "objective_thresholds"], [11, 2, 1, "", "objective_weights"], [11, 3, 1, "", "optimize"], [11, 4, 1, "", "options"], [11, 4, 1, "", "surrogate"]], "ax.models.torch.botorch_modular.input_constructors": [[11, 0, 0, "-", "covar_modules"], [11, 0, 0, "-", "input_transforms"], [11, 0, 0, "-", "outcome_transform"]], "ax.models.torch.botorch_modular.kernels": [[11, 1, 1, "", "ScaleMaternKernel"], [11, 1, 1, "", "TemporalKernel"]], "ax.models.torch.botorch_modular.model": [[11, 1, 1, "", "BoTorchModel"]], "ax.models.torch.botorch_modular.model.BoTorchModel": [[11, 2, 1, "", "Xs"], [11, 4, 1, "", "acquisition_class"], [11, 4, 1, "", "acquisition_options"], [11, 3, 1, "", "best_point"], [11, 2, 1, "", "botorch_acqf_class"], [11, 3, 1, "", "cross_validate"], [11, 2, 1, "", "device"], [11, 2, 1, "", "dtype"], [11, 3, 1, "", "evaluate_acquisition_function"], [11, 3, 1, "", "feature_importances"], [11, 3, 1, "", "fit"], [11, 3, 1, "", "gen"], [11, 3, 1, "", "predict"], [11, 2, 1, "", "search_space_digest"], [11, 2, 1, "", "surrogate"], [11, 4, 1, "", "surrogate_spec"]], "ax.models.torch.botorch_modular.optimizer_argparse": [[11, 5, 1, "", "optimizer_argparse"]], "ax.models.torch.botorch_modular.sebo": [[11, 5, 1, "", "L1_norm_func"], [11, 1, 1, "", "SEBOAcquisition"], [11, 5, 1, "", "clamp_to_target"], [11, 5, 1, "", "get_batch_initial_conditions"]], "ax.models.torch.botorch_modular.sebo.SEBOAcquisition": [[11, 3, 1, "", "optimize"]], "ax.models.torch.botorch_modular.surrogate": [[11, 1, 1, "", "Surrogate"], [11, 1, 1, "", "SurrogateSpec"], [11, 5, 1, "", "get_model_config_from_deprecated_args"]], "ax.models.torch.botorch_modular.surrogate.Surrogate": [[11, 2, 1, "", "Xs"], [11, 3, 1, "", "best_in_sample_point"], [11, 3, 1, "", "best_out_of_sample_point"], [11, 3, 1, "", "clone_reset"], [11, 3, 1, "", "compute_diagnostics"], [11, 2, 1, "", "device"], [11, 2, 1, "", "dtype"], [11, 3, 1, "", "fit"], [11, 2, 1, "", "model"], [11, 2, 1, "", "outcomes"], [11, 3, 1, "", "pareto_frontier"], [11, 3, 1, "", "predict"], [11, 2, 1, "", "training_data"]], "ax.models.torch.botorch_modular.surrogate.SurrogateSpec": [[11, 4, 1, "", "allow_batched_models"], [11, 4, 1, "", "botorch_model_class"], [11, 4, 1, "", "botorch_model_kwargs"], [11, 4, 1, "", "covar_module_class"], [11, 4, 1, "", "covar_module_kwargs"], [11, 4, 1, "", "input_transform_classes"], [11, 4, 1, "", "input_transform_options"], [11, 4, 1, "", "likelihood_class"], [11, 4, 1, "", "likelihood_kwargs"], [11, 4, 1, "", "metric_to_model_configs"], [11, 4, 1, "", "mll_class"], [11, 4, 1, "", "mll_kwargs"], [11, 4, 1, "", "model_configs"], [11, 4, 1, "", "outcome_transform_classes"], [11, 4, 1, "", "outcome_transform_options"], [11, 4, 1, "", "outcomes"]], "ax.models.torch.botorch_modular.utils": [[11, 1, 1, "", "ModelConfig"], [11, 5, 1, "", "check_outcome_dataset_match"], [11, 5, 1, "", "choose_botorch_acqf_class"], [11, 5, 1, "", "choose_model_class"], [11, 5, 1, "", "construct_acquisition_and_optimizer_options"], [11, 5, 1, "", "convert_to_block_design"], [11, 5, 1, "", "fit_botorch_model"], [11, 5, 1, "", "get_subset_datasets"], [11, 5, 1, "", "subset_state_dict"], [11, 5, 1, "", "use_model_list"]], "ax.models.torch.botorch_modular.utils.ModelConfig": [[11, 4, 1, "", "botorch_model_class"], [11, 4, 1, "", "covar_module_class"], [11, 4, 1, "", "covar_module_options"], [11, 4, 1, "", "input_transform_classes"], [11, 4, 1, "", "input_transform_options"], [11, 4, 1, "", "likelihood_class"], [11, 4, 1, "", "likelihood_options"], [11, 4, 1, "", "mll_class"], [11, 4, 1, "", "mll_options"], [11, 4, 1, "", "model_options"], [11, 4, 1, "", "outcome_transform_classes"], [11, 4, 1, "", "outcome_transform_options"]], "ax.models.torch.botorch_moo": [[11, 1, 1, "", "MultiObjectiveBotorchModel"]], "ax.models.torch.botorch_moo.MultiObjectiveBotorchModel": [[11, 4, 1, "", "Xs"], [11, 4, 1, "", "Ys"], [11, 4, 1, "", "Yvars"], [11, 3, 1, "", "gen"]], "ax.models.torch.botorch_moo_defaults": [[11, 5, 1, "", "get_EHVI"], [11, 5, 1, "", "get_NEHVI"], [11, 5, 1, "", "get_qLogEHVI"], [11, 5, 1, "", "get_qLogNEHVI"], [11, 5, 1, "", "get_weighted_mc_objective_and_objective_thresholds"], [11, 5, 1, "", "infer_objective_thresholds"], [11, 5, 1, "", "pareto_frontier_evaluator"], [11, 5, 1, "", "scipy_optimizer_list"]], "ax.models.torch.cbo_lcea": [[11, 1, 1, "", "LCEABO"], [11, 5, 1, "", "get_map_model"]], "ax.models.torch.cbo_lcea.LCEABO": [[11, 3, 1, "", "best_point"], [11, 3, 1, "", "fit"], [11, 3, 1, "", "get_and_fit_model"], [11, 2, 1, "", "model"]], "ax.models.torch.cbo_lcem": [[11, 1, 1, "", "LCEMBO"]], "ax.models.torch.cbo_lcem.LCEMBO": [[11, 3, 1, "", "get_and_fit_model"]], "ax.models.torch.cbo_sac": [[11, 1, 1, "", "SACBO"], [11, 5, 1, "", "generate_model_space_decomposition"]], "ax.models.torch.cbo_sac.SACBO": [[11, 3, 1, "", "fit"], [11, 3, 1, "", "get_and_fit_model"]], "ax.models.torch.randomforest": [[11, 1, 1, "", "RandomForest"]], "ax.models.torch.randomforest.RandomForest": [[11, 3, 1, "", "cross_validate"], [11, 3, 1, "", "fit"], [11, 3, 1, "", "predict"]], "ax.models.torch.utils": [[11, 1, 1, "", "SubsetModelData"], [11, 5, 1, "", "get_botorch_objective_and_transform"], [11, 5, 1, "", "normalize_indices"], [11, 5, 1, "", "pick_best_out_of_sample_point_acqf_class"], [11, 5, 1, "", "predict_from_model"], [11, 5, 1, "", "randomize_objective_weights"], [11, 5, 1, "", "subset_model"], [11, 5, 1, "", "tensor_callable_to_array_callable"]], "ax.models.torch.utils.SubsetModelData": [[11, 4, 1, "", "indices"], [11, 4, 1, "", "model"], [11, 4, 1, "", "objective_thresholds"], [11, 4, 1, "", "objective_weights"], [11, 4, 1, "", "outcome_constraints"]], "ax.models.torch_base": [[11, 1, 1, "", "TorchGenResults"], [11, 1, 1, "", "TorchModel"], [11, 1, 1, "", "TorchOptConfig"]], "ax.models.torch_base.TorchGenResults": [[11, 4, 1, "", "candidate_metadata"], [11, 4, 1, "", "gen_metadata"], [11, 4, 1, "", "points"], [11, 4, 1, "", "weights"]], "ax.models.torch_base.TorchModel": [[11, 3, 1, "", "best_point"], [11, 3, 1, "", "cross_validate"], [11, 4, 1, "", "device"], [11, 4, 1, "", "dtype"], [11, 3, 1, "", "evaluate_acquisition_function"], [11, 3, 1, "", "fit"], [11, 3, 1, "", "gen"], [11, 3, 1, "", "predict"], [11, 3, 1, "", "update"]], "ax.models.torch_base.TorchOptConfig": [[11, 4, 1, "", "fit_out_of_design"], [11, 4, 1, "id0", "fixed_features"], [11, 4, 1, "id1", "is_moo"], [11, 4, 1, "id2", "linear_constraints"], [11, 4, 1, "id3", "model_gen_options"], [11, 4, 1, "id4", "objective_thresholds"], [11, 4, 1, "id5", "objective_weights"], [11, 4, 1, "id6", "opt_config_metrics"], [11, 4, 1, "id7", "outcome_constraints"], [11, 4, 1, "id8", "pending_observations"], [11, 4, 1, "id9", "risk_measure"], [11, 4, 1, "id10", "rounding_func"]], "ax.models.winsorization_config": [[11, 1, 1, "", "WinsorizationConfig"]], "ax.models.winsorization_config.WinsorizationConfig": [[11, 4, 1, "", "lower_boundary"], [11, 4, 1, "", "lower_quantile_margin"], [11, 4, 1, "", "upper_boundary"], [11, 4, 1, "", "upper_quantile_margin"]], "ax.plot": [[12, 0, 0, "-", "bandit_rollout"], [12, 0, 0, "-", "base"], [12, 0, 0, "-", "color"], [12, 0, 0, "-", "contour"], [12, 0, 0, "-", "diagnostic"], [12, 0, 0, "-", "feature_importances"], [12, 0, 0, "-", "helper"], [12, 0, 0, "-", "marginal_effects"], [12, 0, 0, "-", "parallel_coordinates"], [12, 0, 0, "-", "pareto_frontier"], [12, 0, 0, "-", "pareto_utils"], [12, 0, 0, "-", "render"], [12, 0, 0, "-", "scatter"], [12, 0, 0, "-", "slice"], [12, 0, 0, "-", "table_view"], [12, 0, 0, "-", "trace"]], "ax.plot.bandit_rollout": [[12, 5, 1, "", "plot_bandit_rollout"]], "ax.plot.base": [[12, 1, 1, "", "AxPlotConfig"], [12, 1, 1, "", "AxPlotTypes"], [12, 1, 1, "", "PlotData"], [12, 1, 1, "", "PlotInSampleArm"], [12, 1, 1, "", "PlotMetric"], [12, 1, 1, "", "PlotOutOfSampleArm"]], "ax.plot.base.AxPlotTypes": [[12, 4, 1, "", "BANDIT_ROLLOUT"], [12, 4, 1, "", "CONTOUR"], [12, 4, 1, "", "GENERIC"], [12, 4, 1, "", "HTML"], [12, 4, 1, "", "INTERACT_CONTOUR"], [12, 4, 1, "", "INTERACT_SLICE"], [12, 4, 1, "", "SLICE"]], "ax.plot.base.PlotData": [[12, 4, 1, "", "in_sample"], [12, 4, 1, "", "metrics"], [12, 4, 1, "", "out_of_sample"], [12, 4, 1, "", "status_quo_name"]], "ax.plot.base.PlotInSampleArm": [[12, 4, 1, "", "context_stratum"], [12, 4, 1, "", "name"], [12, 4, 1, "", "parameters"], [12, 4, 1, "", "se"], [12, 4, 1, "", "se_hat"], [12, 4, 1, "", "y"], [12, 4, 1, "", "y_hat"]], "ax.plot.base.PlotMetric": [[12, 4, 1, "", "metric"], [12, 4, 1, "", "pred"], [12, 4, 1, "", "rel"]], "ax.plot.base.PlotOutOfSampleArm": [[12, 4, 1, "", "context_stratum"], [12, 4, 1, "", "name"], [12, 4, 1, "", "parameters"], [12, 4, 1, "", "se_hat"], [12, 4, 1, "", "y_hat"]], "ax.plot.color": [[12, 1, 1, "", "COLORS"], [12, 5, 1, "", "plotly_color_scale"], [12, 5, 1, "", "rgba"]], "ax.plot.color.COLORS": [[12, 4, 1, "", "CORAL"], [12, 4, 1, "", "LIGHT_PURPLE"], [12, 4, 1, "", "ORANGE"], [12, 4, 1, "", "PINK"], [12, 4, 1, "", "STEELBLUE"], [12, 4, 1, "", "TEAL"]], "ax.plot.contour": [[12, 5, 1, "", "interact_contour"], [12, 5, 1, "", "interact_contour_plotly"], [12, 5, 1, "", "plot_contour"], [12, 5, 1, "", "plot_contour_plotly"], [12, 5, 1, "", "short_name"]], "ax.plot.diagnostic": [[12, 5, 1, "", "interact_batch_comparison"], [12, 5, 1, "", "interact_cross_validation"], [12, 5, 1, "", "interact_cross_validation_plotly"], [12, 5, 1, "", "interact_empirical_model_validation"], [12, 5, 1, "", "tile_cross_validation"]], "ax.plot.feature_importances": [[12, 5, 1, "", "plot_feature_importance"], [12, 5, 1, "", "plot_feature_importance_by_feature"], [12, 5, 1, "", "plot_feature_importance_by_feature_plotly"], [12, 5, 1, "", "plot_feature_importance_by_metric"], [12, 5, 1, "", "plot_feature_importance_by_metric_plotly"], [12, 5, 1, "", "plot_feature_importance_plotly"], [12, 5, 1, "", "plot_relative_feature_importance"], [12, 5, 1, "", "plot_relative_feature_importance_plotly"]], "ax.plot.helper": [[12, 5, 1, "", "arm_name_to_sort_key"], [12, 5, 1, "", "arm_name_to_tuple"], [12, 5, 1, "", "axis_range"], [12, 5, 1, "", "build_filter_trial"], [12, 5, 1, "", "compose_annotation"], [12, 5, 1, "", "contour_config_to_trace"], [12, 5, 1, "", "extend_range"], [12, 5, 1, "", "get_fixed_values"], [12, 5, 1, "", "get_grid_for_parameter"], [12, 5, 1, "", "get_plot_data"], [12, 5, 1, "", "get_range_parameter"], [12, 5, 1, "", "get_range_parameters"], [12, 5, 1, "", "get_range_parameters_from_list"], [12, 5, 1, "", "infer_is_relative"], [12, 5, 1, "", "relativize"], [12, 5, 1, "", "relativize_data"], [12, 5, 1, "", "resize_subtitles"], [12, 5, 1, "", "rgb"], [12, 5, 1, "", "slice_config_to_trace"]], "ax.plot.marginal_effects": [[12, 5, 1, "", "plot_marginal_effects"]], "ax.plot.parallel_coordinates": [[12, 5, 1, "", "plot_parallel_coordinates"], [12, 5, 1, "", "plot_parallel_coordinates_plotly"], [12, 5, 1, "", "prepare_experiment_for_plotting"]], "ax.plot.pareto_frontier": [[12, 5, 1, "", "interact_multiple_pareto_frontier"], [12, 5, 1, "", "interact_pareto_frontier"], [12, 5, 1, "", "plot_multiple_pareto_frontiers"], [12, 5, 1, "", "plot_pareto_frontier"], [12, 5, 1, "", "scatter_plot_with_hypervolume_trace_plotly"], [12, 5, 1, "", "scatter_plot_with_pareto_frontier"], [12, 5, 1, "", "scatter_plot_with_pareto_frontier_plotly"]], "ax.plot.pareto_utils": [[12, 1, 1, "", "ParetoFrontierResults"], [12, 5, 1, "", "compute_posterior_pareto_frontier"], [12, 5, 1, "", "get_observed_pareto_frontiers"], [12, 5, 1, "", "get_tensor_converter_model"], [12, 5, 1, "", "infer_reference_point_from_experiment"], [12, 5, 1, "", "to_nonrobust_search_space"]], "ax.plot.pareto_utils.ParetoFrontierResults": [[12, 4, 1, "", "absolute_metrics"], [12, 4, 1, "", "arm_names"], [12, 4, 1, "", "means"], [12, 4, 1, "", "objective_thresholds"], [12, 4, 1, "", "param_dicts"], [12, 4, 1, "", "primary_metric"], [12, 4, 1, "", "secondary_metric"], [12, 4, 1, "", "sems"]], "ax.plot.render": [[12, 5, 1, "", "plot_config_to_html"]], "ax.plot.scatter": [[12, 5, 1, "", "interact_fitted"], [12, 5, 1, "", "interact_fitted_plotly"], [12, 5, 1, "", "lattice_multiple_metrics"], [12, 5, 1, "", "plot_fitted"], [12, 5, 1, "", "plot_multiple_metrics"], [12, 5, 1, "", "plot_objective_vs_constraints"], [12, 5, 1, "", "tile_fitted"], [12, 5, 1, "", "tile_observations"]], "ax.plot.slice": [[12, 5, 1, "", "interact_slice"], [12, 5, 1, "", "interact_slice_plotly"], [12, 5, 1, "", "plot_slice"], [12, 5, 1, "", "plot_slice_plotly"]], "ax.plot.table_view": [[12, 5, 1, "", "get_color"], [12, 5, 1, "", "table_view_plot"]], "ax.plot.trace": [[12, 5, 1, "", "compute_running_feasible_optimum_df"], [12, 5, 1, "", "get_running_trials_per_minute"], [12, 5, 1, "", "map_data_multiple_metrics_dropdown_plotly"], [12, 5, 1, "", "map_data_single_trace_scatters"], [12, 5, 1, "", "mean_markers_scatter"], [12, 5, 1, "", "mean_trace_scatter"], [12, 5, 1, "", "optimization_times"], [12, 5, 1, "", "optimization_trace_all_methods"], [12, 5, 1, "", "optimization_trace_single_method"], [12, 5, 1, "", "optimization_trace_single_method_plotly"], [12, 5, 1, "", "optimum_objective_scatter"], [12, 5, 1, "", "plot_objective_value_vs_trial_index"], [12, 5, 1, "", "sem_range_scatter"]], "ax.preview.api": [[13, 0, 0, "-", "configs"]], "ax.preview.api.configs": [[13, 1, 1, "", "ChoiceParameterConfig"], [13, 1, 1, "", "DatabaseConfig"], [13, 1, 1, "", "ExperimentConfig"], [13, 1, 1, "", "GenerationStrategyConfig"], [13, 1, 1, "", "OrchestrationConfig"], [13, 1, 1, "", "ParameterScaling"], [13, 1, 1, "", "ParameterType"], [13, 1, 1, "", "RangeParameterConfig"]], "ax.preview.api.configs.ChoiceParameterConfig": [[13, 4, 1, "", "dependent_parameters"], [13, 4, 1, "", "is_ordered"], [13, 4, 1, "", "name"], [13, 4, 1, "", "parameter_type"], [13, 4, 1, "", "values"]], "ax.preview.api.configs.DatabaseConfig": [[13, 4, 1, "", "url"]], "ax.preview.api.configs.ExperimentConfig": [[13, 4, 1, "", "description"], [13, 4, 1, "", "name"], [13, 4, 1, "", "owner"], [13, 4, 1, "", "parameter_constraints"], [13, 4, 1, "", "parameters"]], "ax.preview.api.configs.GenerationStrategyConfig": [[13, 4, 1, "", "maximum_parallelism"], [13, 4, 1, "", "num_initialization_trials"], [13, 4, 1, "", "num_trials"]], "ax.preview.api.configs.OrchestrationConfig": [[13, 4, 1, "", "parallelism"], [13, 4, 1, "", "seconds_between_polls"], [13, 4, 1, "", "tolerated_trial_failure_rate"]], "ax.preview.api.configs.ParameterScaling": [[13, 4, 1, "", "LINEAR"], [13, 4, 1, "", "LOG"]], "ax.preview.api.configs.ParameterType": [[13, 4, 1, "", "BOOL"], [13, 4, 1, "", "FLOAT"], [13, 4, 1, "", "INT"], [13, 4, 1, "", "STRING"]], "ax.preview.api.configs.RangeParameterConfig": [[13, 4, 1, "", "bounds"], [13, 4, 1, "", "name"], [13, 4, 1, "", "parameter_type"], [13, 4, 1, "", "scaling"], [13, 4, 1, "", "step_size"]], "ax.runners": [[14, 0, 0, "-", "simulated_backend"], [14, 0, 0, "-", "single_running_trial_mixin"], [14, 0, 0, "-", "synthetic"], [14, 0, 0, "-", "torchx"]], "ax.runners.simulated_backend": [[14, 1, 1, "", "SimulatedBackendRunner"], [14, 5, 1, "", "sample_runtime_unif"]], "ax.runners.simulated_backend.SimulatedBackendRunner": [[14, 3, 1, "", "poll_trial_status"], [14, 3, 1, "", "run"], [14, 3, 1, "", "stop"]], "ax.runners.single_running_trial_mixin": [[14, 1, 1, "", "SingleRunningTrialMixin"]], "ax.runners.single_running_trial_mixin.SingleRunningTrialMixin": [[14, 3, 1, "", "poll_trial_status"]], "ax.runners.synthetic": [[14, 1, 1, "", "SyntheticRunner"]], "ax.runners.synthetic.SyntheticRunner": [[14, 3, 1, "", "poll_trial_status"], [14, 3, 1, "", "run"], [14, 2, 1, "", "run_metadata_report_keys"]], "ax.runners.torchx": [[14, 1, 1, "", "TorchXRunner"]], "ax.runners.torchx.TorchXRunner": [[14, 3, 1, "", "poll_trial_status"], [14, 3, 1, "", "run"], [14, 3, 1, "", "stop"]], "ax.service": [[15, 0, 0, "-", "ax_client"], [15, 0, 0, "-", "interactive_loop"], [15, 0, 0, "-", "managed_loop"], [15, 0, 0, "-", "scheduler"]], "ax.service.ax_client": [[15, 1, 1, "", "AxClient"]], "ax.service.ax_client.AxClient": [[15, 3, 1, "", "abandon_trial"], [15, 3, 1, "", "add_tracking_metrics"], [15, 3, 1, "", "attach_trial"], [15, 3, 1, "", "complete_trial"], [15, 3, 1, "", "create_experiment"], [15, 2, 1, "", "early_stopping_strategy"], [15, 3, 1, "", "estimate_early_stopping_savings"], [15, 2, 1, "", "experiment"], [15, 3, 1, "", "fit_model"], [15, 3, 1, "", "from_json_snapshot"], [15, 2, 1, "", "generation_strategy"], [15, 3, 1, "", "get_best_trial"], [15, 3, 1, "", "get_contour_plot"], [15, 3, 1, "", "get_current_trial_generation_limit"], [15, 3, 1, "", "get_feature_importances"], [15, 3, 1, "", "get_hypervolume"], [15, 3, 1, "", "get_max_parallelism"], [15, 3, 1, "", "get_model_predictions"], [15, 3, 1, "", "get_model_predictions_for_parameterizations"], [15, 3, 1, "", "get_next_trial"], [15, 3, 1, "", "get_next_trials"], [15, 3, 1, "", "get_optimization_trace"], [15, 3, 1, "", "get_pareto_optimal_parameters"], [15, 3, 1, "", "get_recommended_max_parallelism"], [15, 3, 1, "", "get_trace"], [15, 3, 1, "", "get_trace_by_progression"], [15, 3, 1, "", "get_trial"], [15, 3, 1, "", "get_trial_parameters"], [15, 3, 1, "", "get_trials_data_frame"], [15, 2, 1, "", "global_stopping_strategy"], [15, 3, 1, "", "load"], [15, 3, 1, "", "load_experiment"], [15, 3, 1, "", "load_experiment_from_database"], [15, 3, 1, "", "load_from_json_file"], [15, 3, 1, "", "log_trial_failure"], [15, 2, 1, "", "metric_definitions"], [15, 2, 1, "", "metric_names"], [15, 2, 1, "", "objective"], [15, 2, 1, "", "objective_name"], [15, 2, 1, "", "objective_names"], [15, 3, 1, "", "remove_tracking_metric"], [15, 3, 1, "", "save"], [15, 3, 1, "", "save_to_json_file"], [15, 3, 1, "", "set_optimization_config"], [15, 3, 1, "", "set_search_space"], [15, 3, 1, "", "set_status_quo"], [15, 3, 1, "", "should_stop_trials_early"], [15, 2, 1, "", "status_quo"], [15, 3, 1, "", "stop_trial_early"], [15, 3, 1, "", "to_json_snapshot"], [15, 3, 1, "", "update_running_trial_with_intermediate_data"], [15, 3, 1, "", "update_trial_data"], [15, 3, 1, "", "verify_trial_parameterization"]], "ax.service.interactive_loop": [[15, 5, 1, "", "ax_client_candidate_generator"], [15, 5, 1, "", "ax_client_data_attacher"], [15, 5, 1, "", "interactive_optimize"], [15, 5, 1, "", "interactive_optimize_with_client"]], "ax.service.managed_loop": [[15, 1, 1, "", "OptimizationLoop"], [15, 5, 1, "", "optimize"]], "ax.service.managed_loop.OptimizationLoop": [[15, 3, 1, "", "full_run"], [15, 3, 1, "", "get_best_point"], [15, 3, 1, "", "get_current_model"], [15, 3, 1, "", "run_trial"], [15, 3, 1, "", "with_evaluation_function"], [15, 3, 1, "", "with_runners_and_metrics"]], "ax.service.scheduler": [[15, 6, 1, "", "FailureRateExceededError"], [15, 1, 1, "", "OptimizationResult"], [15, 1, 1, "", "Scheduler"], [15, 6, 1, "", "SchedulerInternalError"], [15, 5, 1, "", "get_fitted_model_bridge"]], "ax.service.scheduler.Scheduler": [[15, 4, 1, "", "DEFAULT_FETCH_KWARGS"], [15, 4, 1, "", "_skip_experiment_save"], [15, 2, 1, "", "candidate_trials"], [15, 3, 1, "", "completion_criterion"], [15, 3, 1, "", "compute_analyses"], [15, 4, 1, "", "db_settings"], [15, 3, 1, "", "error_if_failure_rate_exceeded"], [15, 3, 1, "", "estimate_early_stopping_savings"], [15, 3, 1, "", "estimate_global_stopping_savings"], [15, 4, 1, "id0", "experiment"], [15, 2, 1, "", "failed_abandoned_trial_indices"], [15, 3, 1, "", "from_stored_experiment"], [15, 3, 1, "", "generate_candidates"], [15, 4, 1, "id1", "generation_strategy"], [15, 3, 1, "", "get_best_trial"], [15, 3, 1, "", "get_default_db_settings"], [15, 3, 1, "", "get_hypervolume"], [15, 3, 1, "", "get_improvement_over_baseline"], [15, 3, 1, "", "get_pareto_optimal_parameters"], [15, 3, 1, "", "get_trace"], [15, 3, 1, "", "get_trace_by_progression"], [15, 4, 1, "", "logger"], [15, 4, 1, "", "markdown_messages"], [15, 2, 1, "id2", "options"], [15, 2, 1, "", "pending_trials"], [15, 3, 1, "", "poll_and_process_results"], [15, 3, 1, "", "poll_trial_status"], [15, 3, 1, "", "report_results"], [15, 3, 1, "", "run"], [15, 3, 1, "", "run_all_trials"], [15, 3, 1, "", "run_n_trials"], [15, 3, 1, "", "run_trials"], [15, 3, 1, "", "run_trials_and_yield_results"], [15, 2, 1, "", "runner"], [15, 2, 1, "", "running_trial_indices"], [15, 2, 1, "", "running_trials"], [15, 3, 1, "", "should_abort_optimization"], [15, 3, 1, "", "should_consider_optimization_complete"], [15, 2, 1, "", "standard_generation_strategy"], [15, 3, 1, "", "stop_trial_runs"], [15, 3, 1, "", "summarize_final_result"], [15, 2, 1, "", "trial_type"], [15, 2, 1, "", "trials"], [15, 2, 1, "", "trials_expecting_data"], [15, 3, 1, "", "wait_for_completed_trials_and_report_results"]], "ax.service.utils": [[15, 0, 0, "-", "best_point"], [15, 0, 0, "-", "best_point_mixin"], [15, 0, 0, "-", "early_stopping"], [15, 0, 0, "-", "instantiation"], [15, 0, 0, "-", "report_utils"], [15, 0, 0, "-", "scheduler_options"], [15, 0, 0, "-", "with_db_settings_base"]], "ax.service.utils.best_point": [[15, 5, 1, "", "extract_Y_from_data"], [15, 5, 1, "", "fill_missing_thresholds_from_nadir"], [15, 5, 1, "", "get_best_by_raw_objective"], [15, 5, 1, "", "get_best_by_raw_objective_with_trial_index"], [15, 5, 1, "", "get_best_parameters"], [15, 5, 1, "", "get_best_parameters_from_model_predictions"], [15, 5, 1, "", "get_best_parameters_from_model_predictions_with_trial_index"], [15, 5, 1, "", "get_best_parameters_with_trial_index"], [15, 5, 1, "", "get_best_raw_objective_point"], [15, 5, 1, "", "get_best_raw_objective_point_with_trial_index"], [15, 5, 1, "", "get_pareto_optimal_parameters"]], "ax.service.utils.best_point_mixin": [[15, 1, 1, "", "BestPointMixin"]], "ax.service.utils.best_point_mixin.BestPointMixin": [[15, 3, 1, "", "get_best_parameters"], [15, 3, 1, "", "get_best_trial"], [15, 3, 1, "", "get_hypervolume"], [15, 3, 1, "", "get_pareto_optimal_parameters"], [15, 3, 1, "", "get_trace"], [15, 3, 1, "", "get_trace_by_progression"]], "ax.service.utils.early_stopping": [[15, 5, 1, "", "get_early_stopping_metrics"], [15, 5, 1, "", "should_stop_trials_early"]], "ax.service.utils.instantiation": [[15, 1, 1, "", "FixedFeatures"], [15, 1, 1, "", "InstantiationBase"], [15, 1, 1, "", "MetricObjective"], [15, 1, 1, "", "ObjectiveProperties"], [15, 7, 1, "", "logger"]], "ax.service.utils.instantiation.FixedFeatures": [[15, 4, 1, "", "parameters"], [15, 4, 1, "", "trial_index"]], "ax.service.utils.instantiation.InstantiationBase": [[15, 3, 1, "", "build_objective_threshold"], [15, 3, 1, "", "build_objective_thresholds"], [15, 3, 1, "", "constraint_from_str"], [15, 3, 1, "", "make_experiment"], [15, 3, 1, "", "make_fixed_observation_features"], [15, 3, 1, "", "make_objective_thresholds"], [15, 3, 1, "", "make_objectives"], [15, 3, 1, "", "make_optimization_config"], [15, 3, 1, "", "make_optimization_config_from_properties"], [15, 3, 1, "", "make_outcome_constraints"], [15, 3, 1, "", "make_search_space"], [15, 3, 1, "", "objective_threshold_constraint_from_str"], [15, 3, 1, "", "optimization_config_from_objectives"], [15, 3, 1, "", "outcome_constraint_from_str"], [15, 3, 1, "", "parameter_from_json"]], "ax.service.utils.instantiation.MetricObjective": [[15, 4, 1, "", "MAXIMIZE"], [15, 4, 1, "", "MINIMIZE"]], "ax.service.utils.instantiation.ObjectiveProperties": [[15, 4, 1, "", "minimize"], [15, 4, 1, "", "threshold"]], "ax.service.utils.report_utils": [[15, 5, 1, "", "compare_to_baseline"], [15, 5, 1, "", "compare_to_baseline_impl"], [15, 5, 1, "", "compute_maximum_map_values"], [15, 5, 1, "", "exp_to_df"], [15, 5, 1, "", "get_figure_and_callback"], [15, 5, 1, "", "get_standard_plots"], [15, 5, 1, "", "maybe_extract_baseline_comparison_values"], [15, 5, 1, "", "pareto_frontier_scatter_2d_plotly"], [15, 5, 1, "", "select_baseline_arm"], [15, 5, 1, "", "warn_if_unpredictable_metrics"]], "ax.service.utils.scheduler_options": [[15, 1, 1, "", "SchedulerOptions"], [15, 1, 1, "", "TrialType"]], "ax.service.utils.scheduler_options.SchedulerOptions": [[15, 4, 1, "id3", "batch_size"], [15, 4, 1, "id4", "debug_log_run_metadata"], [15, 4, 1, "id5", "early_stopping_strategy"], [15, 4, 1, "id6", "enforce_immutable_search_space_and_opt_config"], [15, 4, 1, "id7", "fetch_kwargs"], [15, 4, 1, "id8", "force_candidate_generation"], [15, 4, 1, "id9", "global_stopping_strategy"], [15, 4, 1, "id10", "init_seconds_between_polls"], [15, 4, 1, "id11", "log_filepath"], [15, 4, 1, "id12", "logging_level"], [15, 4, 1, "id13", "max_pending_trials"], [15, 4, 1, "id14", "min_failed_trials_for_failure_rate_check"], [15, 4, 1, "id15", "min_seconds_before_poll"], [15, 4, 1, "id16", "mt_experiment_trial_type"], [15, 4, 1, "id17", "run_trials_in_batches"], [15, 4, 1, "id18", "seconds_between_polls_backoff_factor"], [15, 4, 1, "id19", "status_quo_weight"], [15, 4, 1, "id20", "suppress_storage_errors_after_retries"], [15, 4, 1, "id21", "timeout_hours"], [15, 4, 1, "id22", "tolerated_trial_failure_rate"], [15, 4, 1, "id23", "total_trials"], [15, 4, 1, "id24", "trial_type"], [15, 4, 1, "id25", "ttl_seconds_for_trials"], [15, 4, 1, "id26", "validate_metrics"], [15, 4, 1, "id27", "wait_for_running_trials"]], "ax.service.utils.scheduler_options.TrialType": [[15, 4, 1, "", "BATCH_TRIAL"], [15, 4, 1, "", "TRIAL"]], "ax.service.utils.with_db_settings_base": [[15, 1, 1, "", "WithDBSettingsBase"], [15, 5, 1, "", "try_load_generation_strategy"]], "ax.service.utils.with_db_settings_base.WithDBSettingsBase": [[15, 2, 1, "", "db_settings"], [15, 2, 1, "", "db_settings_set"]], "ax.storage": [[16, 0, 0, "-", "botorch_modular_registry"], [16, 0, 0, "-", "metric_registry"], [16, 0, 0, "-", "registry_bundle"], [16, 0, 0, "-", "runner_registry"], [16, 0, 0, "-", "transform_registry"], [16, 0, 0, "-", "utils"]], "ax.storage.botorch_modular_registry": [[16, 7, 1, "", "ACQUISITION_FUNCTION_REGISTRY"], [16, 7, 1, "", "ACQUISITION_REGISTRY"], [16, 7, 1, "", "CLASS_TO_REGISTRY"], [16, 7, 1, "", "GPYTORCH_COMPONENT_REGISTRY"], [16, 7, 1, "", "INPUT_TRANSFORM_REGISTRY"], [16, 7, 1, "", "MODEL_REGISTRY"], [16, 7, 1, "", "OUTCOME_TRANSFORM_REGISTRY"], [16, 7, 1, "", "REVERSE_OUTCOME_TRANSFORM_REGISTRY"], [16, 5, 1, "", "register_acquisition"], [16, 5, 1, "", "register_acquisition_function"], [16, 5, 1, "", "register_kernel"], [16, 5, 1, "", "register_model"]], "ax.storage.json_store": [[16, 0, 0, "-", "decoder"], [16, 0, 0, "-", "decoders"], [16, 0, 0, "-", "encoder"], [16, 0, 0, "-", "encoders"], [16, 0, 0, "-", "load"], [16, 0, 0, "-", "registry"], [16, 0, 0, "-", "save"]], "ax.storage.json_store.decoder": [[16, 5, 1, "", "ax_class_from_json_dict"], [16, 5, 1, "", "data_from_json"], [16, 5, 1, "", "experiment_from_json"], [16, 5, 1, "", "generation_node_from_json"], [16, 5, 1, "", "generation_step_from_json"], [16, 5, 1, "", "generation_strategy_from_json"], [16, 5, 1, "", "generator_run_from_json"], [16, 5, 1, "", "get_input_transform_json_components"], [16, 5, 1, "", "get_outcome_transform_json_components"], [16, 5, 1, "", "model_spec_from_json"], [16, 5, 1, "", "multi_type_experiment_from_json"], [16, 5, 1, "", "object_from_json"], [16, 5, 1, "", "objective_from_json"], [16, 5, 1, "", "parameter_constraints_from_json"], [16, 5, 1, "", "search_space_from_json"], [16, 5, 1, "", "surrogate_from_list_surrogate_json"], [16, 5, 1, "", "trials_from_json"], [16, 5, 1, "", "unpack_transition_criteria_from_json"]], "ax.storage.json_store.decoders": [[16, 5, 1, "", "batch_trial_from_json"], [16, 5, 1, "", "botorch_component_from_json"], [16, 5, 1, "", "class_from_json"], [16, 5, 1, "", "default_from_json"], [16, 5, 1, "", "input_transform_type_from_json"], [16, 5, 1, "", "outcome_transform_type_from_json"], [16, 5, 1, "", "pathlib_from_json"], [16, 5, 1, "", "tensor_from_json"], [16, 5, 1, "", "tensor_or_size_from_json"], [16, 5, 1, "", "transform_type_from_json"], [16, 5, 1, "", "trial_from_json"]], "ax.storage.json_store.encoder": [[16, 5, 1, "", "object_to_json"]], "ax.storage.json_store.encoders": [[16, 5, 1, "", "arm_to_dict"], [16, 5, 1, "", "auxiliary_experiment_to_dict"], [16, 5, 1, "", "batch_to_dict"], [16, 5, 1, "", "best_model_selector_to_dict"], [16, 5, 1, "", "botorch_component_to_dict"], [16, 5, 1, "", "botorch_input_transform_to_init_args"], [16, 5, 1, "", "botorch_model_to_dict"], [16, 5, 1, "", "botorch_modular_to_dict"], [16, 5, 1, "", "choice_parameter_to_dict"], [16, 5, 1, "", "data_to_dict"], [16, 5, 1, "", "default_to_dict"], [16, 5, 1, "", "experiment_to_dict"], [16, 5, 1, "", "fixed_parameter_to_dict"], [16, 5, 1, "", "generation_node_to_dict"], [16, 5, 1, "", "generation_step_to_dict"], [16, 5, 1, "", "generation_strategy_to_dict"], [16, 5, 1, "", "generator_run_to_dict"], [16, 5, 1, "", "improvement_global_stopping_strategy_to_dict"], [16, 5, 1, "", "logical_early_stopping_strategy_to_dict"], [16, 5, 1, "", "map_data_to_dict"], [16, 5, 1, "", "map_key_info_to_dict"], [16, 5, 1, "", "metric_to_dict"], [16, 5, 1, "", "model_spec_to_dict"], [16, 5, 1, "", "multi_objective_optimization_config_to_dict"], [16, 5, 1, "", "multi_objective_to_dict"], [16, 5, 1, "", "multi_type_experiment_to_dict"], [16, 5, 1, "", "objective_to_dict"], [16, 5, 1, "", "observation_features_to_dict"], [16, 5, 1, "", "optimization_config_to_dict"], [16, 5, 1, "", "order_parameter_constraint_to_dict"], [16, 5, 1, "", "outcome_constraint_to_dict"], [16, 5, 1, "", "parameter_constraint_to_dict"], [16, 5, 1, "", "parameter_distribution_to_dict"], [16, 5, 1, "", "pathlib_to_dict"], [16, 5, 1, "", "percentile_early_stopping_strategy_to_dict"], [16, 5, 1, "", "range_parameter_to_dict"], [16, 5, 1, "", "risk_measure_to_dict"], [16, 5, 1, "", "robust_search_space_to_dict"], [16, 5, 1, "", "runner_to_dict"], [16, 5, 1, "", "scalarized_objective_to_dict"], [16, 5, 1, "", "search_space_to_dict"], [16, 5, 1, "", "sum_parameter_constraint_to_dict"], [16, 5, 1, "", "surrogate_to_dict"], [16, 5, 1, "", "tensor_to_dict"], [16, 5, 1, "", "threshold_early_stopping_strategy_to_dict"], [16, 5, 1, "", "transform_type_to_dict"], [16, 5, 1, "", "transition_criterion_to_dict"], [16, 5, 1, "", "trial_to_dict"], [16, 5, 1, "", "winsorization_config_to_dict"]], "ax.storage.json_store.load": [[16, 5, 1, "", "load_experiment"]], "ax.storage.json_store.save": [[16, 5, 1, "", "save_experiment"]], "ax.storage.metric_registry": [[16, 7, 1, "", "logger"], [16, 5, 1, "", "register_metrics"]], "ax.storage.registry_bundle": [[16, 1, 1, "", "RegistryBundle"], [16, 1, 1, "", "RegistryBundleBase"]], "ax.storage.registry_bundle.RegistryBundle": [[16, 2, 1, "", "decoder"], [16, 2, 1, "", "encoder"], [16, 2, 1, "", "sqa_config"]], "ax.storage.registry_bundle.RegistryBundleBase": [[16, 2, 1, "", "class_decoder_registry"], [16, 2, 1, "", "class_encoder_registry"], [16, 2, 1, "", "decoder"], [16, 2, 1, "", "decoder_registry"], [16, 2, 1, "", "encoder"], [16, 2, 1, "", "encoder_registry"], [16, 3, 1, "", "from_registry_bundles"], [16, 2, 1, "", "metric_registry"], [16, 2, 1, "", "runner_registry"], [16, 2, 1, "", "sqa_config"]], "ax.storage.runner_registry": [[16, 5, 1, "", "register_runner"], [16, 5, 1, "", "register_runners"]], "ax.storage.sqa_store": [[16, 0, 0, "-", "db"], [16, 0, 0, "-", "decoder"], [16, 0, 0, "-", "delete"], [16, 0, 0, "-", "encoder"], [16, 0, 0, "-", "json"], [16, 0, 0, "-", "load"], [16, 0, 0, "-", "reduced_state"], [16, 0, 0, "-", "save"], [16, 0, 0, "-", "sqa_classes"], [16, 0, 0, "-", "sqa_enum"], [16, 0, 0, "-", "structs"], [16, 0, 0, "-", "timestamp"], [16, 0, 0, "-", "utils"], [16, 0, 0, "-", "validation"]], "ax.storage.sqa_store.db": [[16, 1, 1, "", "SQABase"], [16, 5, 1, "", "create_all_tables"], [16, 5, 1, "", "create_mysql_engine_from_creator"], [16, 5, 1, "", "create_mysql_engine_from_url"], [16, 5, 1, "", "create_test_engine"], [16, 5, 1, "", "get_engine"], [16, 5, 1, "", "get_session"], [16, 5, 1, "", "init_engine_and_session_factory"], [16, 5, 1, "", "init_test_engine_and_session_factory"], [16, 5, 1, "", "session_scope"]], "ax.storage.sqa_store.decoder": [[16, 1, 1, "", "Decoder"]], "ax.storage.sqa_store.decoder.Decoder": [[16, 3, 1, "", "abandoned_arm_from_sqa"], [16, 3, 1, "", "analysis_card_from_sqa"], [16, 3, 1, "", "arm_from_sqa"], [16, 4, 1, "", "config"], [16, 3, 1, "", "data_from_sqa"], [16, 3, 1, "", "environmental_variable_from_sqa"], [16, 3, 1, "", "experiment_from_sqa"], [16, 3, 1, "", "generation_strategy_from_sqa"], [16, 3, 1, "", "generator_run_from_sqa"], [16, 3, 1, "", "get_enum_name"], [16, 3, 1, "", "metric_from_sqa"], [16, 3, 1, "", "opt_config_and_tracking_metrics_from_sqa"], [16, 3, 1, "", "parameter_constraint_from_sqa"], [16, 3, 1, "", "parameter_distributions_from_sqa"], [16, 3, 1, "", "parameter_from_sqa"], [16, 3, 1, "", "runner_from_sqa"], [16, 3, 1, "", "search_space_from_sqa"], [16, 3, 1, "", "trial_from_sqa"]], "ax.storage.sqa_store.delete": [[16, 5, 1, "", "delete_experiment"], [16, 5, 1, "", "delete_generation_strategy"]], "ax.storage.sqa_store.encoder": [[16, 1, 1, "", "Encoder"]], "ax.storage.sqa_store.encoder.Encoder": [[16, 3, 1, "", "abandoned_arm_to_sqa"], [16, 3, 1, "", "analysis_card_to_sqa"], [16, 3, 1, "", "arm_to_sqa"], [16, 4, 1, "", "config"], [16, 3, 1, "", "data_to_sqa"], [16, 3, 1, "", "environmental_variable_to_sqa"], [16, 3, 1, "", "experiment_data_to_sqa"], [16, 3, 1, "", "experiment_to_sqa"], [16, 3, 1, "", "generation_strategy_to_sqa"], [16, 3, 1, "", "generator_run_to_sqa"], [16, 3, 1, "", "get_children_metrics_by_name"], [16, 3, 1, "", "get_enum_value"], [16, 3, 1, "", "get_metric_type_and_properties"], [16, 3, 1, "", "metric_to_sqa"], [16, 3, 1, "", "multi_objective_to_sqa"], [16, 3, 1, "", "objective_threshold_to_sqa"], [16, 3, 1, "", "objective_to_sqa"], [16, 3, 1, "", "optimization_config_to_sqa"], [16, 3, 1, "", "outcome_constraint_to_sqa"], [16, 3, 1, "", "parameter_constraint_to_sqa"], [16, 3, 1, "", "parameter_distribution_to_sqa"], [16, 3, 1, "", "parameter_to_sqa"], [16, 3, 1, "", "risk_measure_to_sqa"], [16, 3, 1, "", "robust_search_space_to_sqa"], [16, 3, 1, "", "runner_to_sqa"], [16, 3, 1, "", "scalarized_objective_to_sqa"], [16, 3, 1, "", "scalarized_outcome_constraint_to_sqa"], [16, 3, 1, "", "search_space_to_sqa"], [16, 3, 1, "", "trial_to_sqa"], [16, 3, 1, "", "validate_experiment_metadata"]], "ax.storage.sqa_store.json": [[16, 4, 1, "", "JSONEncodedDict"], [16, 4, 1, "", "JSONEncodedList"], [16, 1, 1, "", "JSONEncodedLongText"], [16, 4, 1, "", "JSONEncodedLongTextDict"], [16, 1, 1, "", "JSONEncodedMediumText"], [16, 1, 1, "", "JSONEncodedObject"], [16, 1, 1, "", "JSONEncodedText"], [16, 4, 1, "", "JSONEncodedTextDict"]], "ax.storage.sqa_store.json.JSONEncodedLongText": [[16, 4, 1, "", "impl"]], "ax.storage.sqa_store.json.JSONEncodedMediumText": [[16, 4, 1, "", "impl"]], "ax.storage.sqa_store.json.JSONEncodedObject": [[16, 4, 1, "", "cache_ok"], [16, 4, 1, "", "impl"], [16, 3, 1, "", "process_bind_param"], [16, 3, 1, "", "process_result_value"]], "ax.storage.sqa_store.load": [[16, 5, 1, "", "get_generation_strategy_id"], [16, 5, 1, "", "get_generation_strategy_sqa"], [16, 5, 1, "", "get_generation_strategy_sqa_reduced_state"], [16, 5, 1, "", "get_generator_runs_by_id"], [16, 5, 1, "", "load_analysis_cards_by_experiment_name"], [16, 5, 1, "", "load_experiment"], [16, 5, 1, "", "load_generation_strategy_by_experiment_name"], [16, 5, 1, "", "load_generation_strategy_by_id"]], "ax.storage.sqa_store.reduced_state": [[16, 5, 1, "", "get_query_options_to_defer_immutable_duplicates"], [16, 5, 1, "", "get_query_options_to_defer_large_model_cols"]], "ax.storage.sqa_store.save": [[16, 5, 1, "", "save_analysis_cards"], [16, 5, 1, "", "save_experiment"], [16, 5, 1, "", "save_generation_strategy"], [16, 5, 1, "", "save_or_update_data_for_trials"], [16, 5, 1, "", "save_or_update_trial"], [16, 5, 1, "", "save_or_update_trials"], [16, 5, 1, "", "update_generation_strategy"], [16, 5, 1, "", "update_outcome_constraint_on_experiment"], [16, 5, 1, "", "update_properties_on_experiment"], [16, 5, 1, "", "update_properties_on_trial"], [16, 5, 1, "", "update_runner_on_experiment"], [16, 5, 1, "", "update_trial_status"]], "ax.storage.sqa_store.sqa_classes": [[16, 1, 1, "", "SQAAbandonedArm"], [16, 1, 1, "", "SQAAnalysisCard"], [16, 1, 1, "", "SQAArm"], [16, 1, 1, "", "SQAData"], [16, 1, 1, "", "SQAExperiment"], [16, 1, 1, "", "SQAGenerationStrategy"], [16, 1, 1, "", "SQAGeneratorRun"], [16, 1, 1, "", "SQAMetric"], [16, 1, 1, "", "SQAParameter"], [16, 1, 1, "", "SQAParameterConstraint"], [16, 1, 1, "", "SQARunner"], [16, 1, 1, "", "SQATrial"]], "ax.storage.sqa_store.sqa_classes.SQAAbandonedArm": [[16, 4, 1, "", "time_abandoned"]], "ax.storage.sqa_store.sqa_classes.SQAAnalysisCard": [[16, 4, 1, "", "time_created"]], "ax.storage.sqa_store.sqa_classes.SQAExperiment": [[16, 4, 1, "", "analysis_cards"], [16, 4, 1, "", "data"], [16, 4, 1, "", "generation_strategy"], [16, 4, 1, "", "metrics"], [16, 4, 1, "", "parameter_constraints"], [16, 4, 1, "", "parameters"], [16, 4, 1, "", "runners"], [16, 4, 1, "", "time_created"], [16, 4, 1, "", "trials"]], "ax.storage.sqa_store.sqa_classes.SQAGenerationStrategy": [[16, 4, 1, "", "generator_runs"]], "ax.storage.sqa_store.sqa_classes.SQAGeneratorRun": [[16, 4, 1, "", "arms"], [16, 4, 1, "", "metrics"], [16, 4, 1, "", "parameter_constraints"], [16, 4, 1, "", "parameters"], [16, 4, 1, "", "time_created"]], "ax.storage.sqa_store.sqa_classes.SQAMetric": [[16, 4, 1, "", "scalarized_objective_children_metrics"], [16, 4, 1, "", "scalarized_outcome_constraint_children_metrics"]], "ax.storage.sqa_store.sqa_classes.SQAParameter": [[16, 4, 1, "", "dependents"], [16, 4, 1, "", "fixed_value"], [16, 4, 1, "", "target_value"]], "ax.storage.sqa_store.sqa_classes.SQATrial": [[16, 4, 1, "", "abandoned_arms"], [16, 4, 1, "", "generator_runs"], [16, 4, 1, "", "is_batch"], [16, 4, 1, "", "runner"], [16, 4, 1, "", "time_completed"], [16, 4, 1, "", "time_created"], [16, 4, 1, "", "time_run_started"], [16, 4, 1, "", "time_staged"]], "ax.storage.sqa_store.sqa_enum": [[16, 1, 1, "", "BaseNullableEnum"], [16, 1, 1, "", "IntEnum"], [16, 1, 1, "", "StringEnum"]], "ax.storage.sqa_store.sqa_enum.BaseNullableEnum": [[16, 4, 1, "", "cache_ok"], [16, 3, 1, "", "process_bind_param"], [16, 3, 1, "", "process_result_value"]], "ax.storage.sqa_store.sqa_enum.StringEnum": [[16, 4, 1, "", "impl"]], "ax.storage.sqa_store.structs": [[16, 1, 1, "", "DBSettings"]], "ax.storage.sqa_store.structs.DBSettings": [[16, 4, 1, "", "creator"], [16, 4, 1, "", "decoder"], [16, 4, 1, "", "encoder"], [16, 4, 1, "", "url"]], "ax.storage.sqa_store.timestamp": [[16, 1, 1, "", "IntTimestamp"]], "ax.storage.sqa_store.timestamp.IntTimestamp": [[16, 4, 1, "", "cache_ok"], [16, 3, 1, "", "process_bind_param"], [16, 3, 1, "", "process_result_value"]], "ax.storage.sqa_store.utils": [[16, 5, 1, "", "copy_db_ids"], [16, 5, 1, "", "is_foreign_key_field"]], "ax.storage.sqa_store.validation": [[16, 5, 1, "", "consistency_exactly_one"], [16, 5, 1, "", "do_not_set_existing_value_to_null"], [16, 5, 1, "", "listens_for_multiple"]], "ax.storage.transform_registry": [[16, 7, 1, "", "TRANSFORM_REGISTRY"]], "ax.storage.utils": [[16, 1, 1, "", "DomainType"], [16, 1, 1, "", "MetricIntent"], [16, 1, 1, "", "ParameterConstraintType"], [16, 5, 1, "", "stable_hash"]], "ax.storage.utils.DomainType": [[16, 4, 1, "", "CHOICE"], [16, 4, 1, "", "ENVIRONMENTAL_RANGE"], [16, 4, 1, "", "FIXED"], [16, 4, 1, "", "RANGE"]], "ax.storage.utils.MetricIntent": [[16, 4, 1, "", "ADDITIONAL_OBJECTIVE"], [16, 4, 1, "", "MULTI_OBJECTIVE"], [16, 4, 1, "", "OBJECTIVE"], [16, 4, 1, "", "OBJECTIVE_THRESHOLD"], [16, 4, 1, "", "OUTCOME_CONSTRAINT"], [16, 4, 1, "", "RISK_MEASURE"], [16, 4, 1, "", "SCALARIZED_OBJECTIVE"], [16, 4, 1, "", "SCALARIZED_OUTCOME_CONSTRAINT"], [16, 4, 1, "", "TRACKING"]], "ax.storage.utils.ParameterConstraintType": [[16, 4, 1, "", "DISTRIBUTION"], [16, 4, 1, "", "LINEAR"], [16, 4, 1, "", "ORDER"], [16, 4, 1, "", "SUM"]], "ax.telemetry": [[17, 0, 0, "-", "ax_client"], [17, 0, 0, "-", "common"], [17, 0, 0, "-", "experiment"], [17, 0, 0, "-", "generation_strategy"], [17, 0, 0, "-", "optimization"], [17, 0, 0, "-", "scheduler"]], "ax.telemetry.ax_client": [[17, 1, 1, "", "AxClientCompletedRecord"], [17, 1, 1, "", "AxClientCreatedRecord"]], "ax.telemetry.ax_client.AxClientCompletedRecord": [[17, 4, 1, "", "best_point_quality"], [17, 4, 1, "", "experiment_completed_record"], [17, 3, 1, "", "flatten"], [17, 3, 1, "", "from_ax_client"], [17, 4, 1, "", "model_fit_generalization"], [17, 4, 1, "", "model_fit_quality"], [17, 4, 1, "", "model_std_generalization"], [17, 4, 1, "", "model_std_quality"]], "ax.telemetry.ax_client.AxClientCreatedRecord": [[17, 4, 1, "", "arms_per_trial"], [17, 4, 1, "", "early_stopping_strategy_cls"], [17, 4, 1, "", "experiment_created_record"], [17, 3, 1, "", "flatten"], [17, 3, 1, "", "from_ax_client"], [17, 4, 1, "", "generation_strategy_created_record"], [17, 4, 1, "", "global_stopping_strategy_cls"], [17, 4, 1, "", "transformed_dimensionality"]], "ax.telemetry.common": [[17, 5, 1, "", "get_unique_identifier"]], "ax.telemetry.experiment": [[17, 1, 1, "", "ExperimentCompletedRecord"], [17, 1, 1, "", "ExperimentCreatedRecord"]], "ax.telemetry.experiment.ExperimentCompletedRecord": [[17, 3, 1, "", "from_experiment"], [17, 4, 1, "", "num_abandoned_trials"], [17, 4, 1, "", "num_bayesopt_trials"], [17, 4, 1, "", "num_completed_trials"], [17, 4, 1, "", "num_early_stopped_trials"], [17, 4, 1, "", "num_failed_trials"], [17, 4, 1, "", "num_initialization_trials"], [17, 4, 1, "", "num_objectives"], [17, 4, 1, "", "num_other_trials"], [17, 4, 1, "", "num_outcome_constraints"], [17, 4, 1, "", "num_tracking_metrics"], [17, 4, 1, "", "total_fit_time"], [17, 4, 1, "", "total_gen_time"]], "ax.telemetry.experiment.ExperimentCreatedRecord": [[17, 4, 1, "", "dimensionality"], [17, 4, 1, "", "experiment_name"], [17, 4, 1, "", "experiment_type"], [17, 3, 1, "", "from_experiment"], [17, 4, 1, "", "hierarchical_tree_height"], [17, 4, 1, "", "metric_cls_to_quantity"], [17, 4, 1, "", "num_continuous_range_parameters"], [17, 4, 1, "", "num_fixed_parameters"], [17, 4, 1, "", "num_int_range_parameters_large"], [17, 4, 1, "", "num_int_range_parameters_medium"], [17, 4, 1, "", "num_int_range_parameters_small"], [17, 4, 1, "", "num_log_scale_range_parameters"], [17, 4, 1, "", "num_map_metrics"], [17, 4, 1, "", "num_objectives"], [17, 4, 1, "", "num_outcome_constraints"], [17, 4, 1, "", "num_parameter_constraints"], [17, 4, 1, "", "num_tracking_metrics"], [17, 4, 1, "", "num_unordered_choice_parameters_large"], [17, 4, 1, "", "num_unordered_choice_parameters_medium"], [17, 4, 1, "", "num_unordered_choice_parameters_small"], [17, 4, 1, "", "runner_cls"]], "ax.telemetry.generation_strategy": [[17, 1, 1, "", "GenerationStrategyCreatedRecord"]], "ax.telemetry.generation_strategy.GenerationStrategyCreatedRecord": [[17, 3, 1, "", "from_generation_strategy"], [17, 4, 1, "", "generation_strategy_name"], [17, 4, 1, "", "max_parallelism"], [17, 4, 1, "", "num_requested_bayesopt_trials"], [17, 4, 1, "", "num_requested_initialization_trials"], [17, 4, 1, "", "num_requested_other_trials"]], "ax.telemetry.optimization": [[17, 1, 1, "", "OptimizationCompletedRecord"], [17, 1, 1, "", "OptimizationCreatedRecord"]], "ax.telemetry.optimization.OptimizationCompletedRecord": [[17, 4, 1, "", "best_point_quality"], [17, 4, 1, "", "deployed_job_id"], [17, 4, 1, "", "estimated_early_stopping_savings"], [17, 4, 1, "", "estimated_global_stopping_savings"], [17, 3, 1, "", "from_ax_client"], [17, 3, 1, "", "from_scheduler"], [17, 4, 1, "", "improvement_over_baseline"], [17, 4, 1, "", "model_fit_generalization"], [17, 4, 1, "", "model_fit_quality"], [17, 4, 1, "", "model_std_generalization"], [17, 4, 1, "", "model_std_quality"], [17, 4, 1, "", "num_abandoned_trials"], [17, 4, 1, "", "num_bayesopt_trials"], [17, 4, 1, "", "num_completed_trials"], [17, 4, 1, "", "num_early_stopped_trials"], [17, 4, 1, "", "num_failed_trials"], [17, 4, 1, "", "num_initialization_trials"], [17, 4, 1, "", "num_metric_fetch_e_encountered"], [17, 4, 1, "", "num_objectives"], [17, 4, 1, "", "num_other_trials"], [17, 4, 1, "", "num_outcome_constraints"], [17, 4, 1, "", "num_tracking_metrics"], [17, 4, 1, "", "num_trials_bad_due_to_err"], [17, 4, 1, "", "total_fit_time"], [17, 4, 1, "", "total_gen_time"], [17, 4, 1, "", "unique_identifier"]], "ax.telemetry.optimization.OptimizationCreatedRecord": [[17, 4, 1, "", "arms_per_trial"], [17, 4, 1, "", "deployed_job_id"], [17, 4, 1, "", "dimensionality"], [17, 4, 1, "", "early_stopping_strategy_cls"], [17, 4, 1, "", "experiment_name"], [17, 4, 1, "", "experiment_type"], [17, 3, 1, "", "from_ax_client"], [17, 3, 1, "", "from_experiment"], [17, 3, 1, "", "from_scheduler"], [17, 4, 1, "", "generation_strategy_name"], [17, 4, 1, "", "global_stopping_strategy_cls"], [17, 4, 1, "", "hierarchical_tree_height"], [17, 4, 1, "", "is_manual_generation_strategy"], [17, 4, 1, "", "launch_surface"], [17, 4, 1, "", "max_parallelism"], [17, 4, 1, "", "metric_cls_to_quantity"], [17, 4, 1, "", "num_continuous_range_parameters"], [17, 4, 1, "", "num_custom_trials"], [17, 4, 1, "", "num_fixed_parameters"], [17, 4, 1, "", "num_int_range_parameters_large"], [17, 4, 1, "", "num_int_range_parameters_medium"], [17, 4, 1, "", "num_int_range_parameters_small"], [17, 4, 1, "", "num_log_scale_range_parameters"], [17, 4, 1, "", "num_map_metrics"], [17, 4, 1, "", "num_objectives"], [17, 4, 1, "", "num_outcome_constraints"], [17, 4, 1, "", "num_parameter_constraints"], [17, 4, 1, "", "num_requested_bayesopt_trials"], [17, 4, 1, "", "num_requested_initialization_trials"], [17, 4, 1, "", "num_requested_other_trials"], [17, 4, 1, "", "num_tracking_metrics"], [17, 4, 1, "", "num_unordered_choice_parameters_large"], [17, 4, 1, "", "num_unordered_choice_parameters_medium"], [17, 4, 1, "", "num_unordered_choice_parameters_small"], [17, 4, 1, "", "owner"], [17, 4, 1, "", "product_surface"], [17, 4, 1, "", "runner_cls"], [17, 4, 1, "", "scheduler_max_pending_trials"], [17, 4, 1, "", "scheduler_total_trials"], [17, 4, 1, "", "support_tier"], [17, 4, 1, "", "transformed_dimensionality"], [17, 4, 1, "", "trial_evaluation_identifier"], [17, 4, 1, "", "unique_identifier"], [17, 4, 1, "", "warm_started_from"]], "ax.telemetry.scheduler": [[17, 1, 1, "", "SchedulerCompletedRecord"], [17, 1, 1, "", "SchedulerCreatedRecord"]], "ax.telemetry.scheduler.SchedulerCompletedRecord": [[17, 4, 1, "", "best_point_quality"], [17, 4, 1, "", "experiment_completed_record"], [17, 3, 1, "", "flatten"], [17, 3, 1, "", "from_scheduler"], [17, 4, 1, "", "improvement_over_baseline"], [17, 4, 1, "", "model_fit_generalization"], [17, 4, 1, "", "model_fit_quality"], [17, 4, 1, "", "model_std_generalization"], [17, 4, 1, "", "model_std_quality"], [17, 4, 1, "", "num_metric_fetch_e_encountered"], [17, 4, 1, "", "num_trials_bad_due_to_err"]], "ax.telemetry.scheduler.SchedulerCreatedRecord": [[17, 4, 1, "", "arms_per_trial"], [17, 4, 1, "", "early_stopping_strategy_cls"], [17, 4, 1, "", "experiment_created_record"], [17, 3, 1, "", "flatten"], [17, 3, 1, "", "from_scheduler"], [17, 4, 1, "", "generation_strategy_created_record"], [17, 4, 1, "", "global_stopping_strategy_cls"], [17, 4, 1, "", "scheduler_max_pending_trials"], [17, 4, 1, "", "scheduler_total_trials"], [17, 4, 1, "", "transformed_dimensionality"]], "ax.utils.common": [[18, 0, 0, "-", "base"], [18, 0, 0, "-", "constants"], [18, 0, 0, "-", "decorator"], [18, 0, 0, "-", "deprecation"], [18, 0, 0, "-", "docutils"], [18, 0, 0, "-", "equality"], [18, 0, 0, "-", "executils"], [18, 0, 0, "-", "func_enum"], [18, 0, 0, "-", "kwargs"], [18, 0, 0, "-", "logger"], [18, 0, 0, "-", "mock"], [18, 0, 0, "-", "random"], [18, 0, 0, "-", "result"], [18, 0, 0, "-", "serialization"], [18, 0, 0, "-", "testutils"], [18, 0, 0, "-", "timeutils"], [18, 0, 0, "-", "typeutils"], [18, 0, 0, "-", "typeutils_nonnative"], [18, 0, 0, "-", "typeutils_torch"]], "ax.utils.common.base": [[18, 1, 1, "", "Base"], [18, 1, 1, "", "SortableBase"]], "ax.utils.common.base.Base": [[18, 2, 1, "", "db_id"]], "ax.utils.common.constants": [[18, 1, 1, "", "Keys"]], "ax.utils.common.constants.Keys": [[18, 4, 1, "", "ACQF_KWARGS"], [18, 4, 1, "", "BATCH_INIT_CONDITIONS"], [18, 4, 1, "", "CANDIDATE_SET"], [18, 4, 1, "", "CANDIDATE_SIZE"], [18, 4, 1, "", "COST_AWARE_UTILITY"], [18, 4, 1, "", "COST_INTERCEPT"], [18, 4, 1, "", "CURRENT_VALUE"], [18, 4, 1, "", "EXPAND"], [18, 4, 1, "", "EXPECTED_ACQF_VAL"], [18, 4, 1, "", "EXPERIMENT_TOTAL_CONCURRENT_ARMS"], [18, 4, 1, "", "FIDELITY_FEATURES"], [18, 4, 1, "", "FIDELITY_WEIGHTS"], [18, 4, 1, "", "FRAC_RANDOM"], [18, 4, 1, "", "FULL_PARAMETERIZATION"], [18, 4, 1, "", "IMMUTABLE_SEARCH_SPACE_AND_OPT_CONF"], [18, 4, 1, "", "LONG_RUN"], [18, 4, 1, "", "MAXIMIZE"], [18, 4, 1, "", "METADATA"], [18, 4, 1, "", "METRIC_NAMES"], [18, 4, 1, "", "NUM_FANTASIES"], [18, 4, 1, "", "NUM_INNER_RESTARTS"], [18, 4, 1, "", "NUM_RESTARTS"], [18, 4, 1, "", "NUM_TRACE_OBSERVATIONS"], [18, 4, 1, "", "OBJECTIVE"], [18, 4, 1, "", "OPTIMIZER_KWARGS"], [18, 4, 1, "", "PAIRWISE_PREFERENCE_QUERY"], [18, 4, 1, "", "PREFERENCE_DATA"], [18, 4, 1, "", "PROJECT"], [18, 4, 1, "", "QMC"], [18, 4, 1, "", "RAW_INNER_SAMPLES"], [18, 4, 1, "", "RAW_SAMPLES"], [18, 4, 1, "", "RESUMED_FROM_STORAGE_TS"], [18, 4, 1, "", "SAMPLER"], [18, 4, 1, "", "SEED_INNER"], [18, 4, 1, "", "SEQUENTIAL"], [18, 4, 1, "", "SHORT_RUN"], [18, 4, 1, "", "STATE_DICT"], [18, 4, 1, "", "SUBCLASS"], [18, 4, 1, "", "SUBSET_MODEL"], [18, 4, 1, "", "TASK_FEATURES"], [18, 4, 1, "", "TRIAL_COMPLETION_TIMESTAMP"], [18, 4, 1, "", "WARM_START_REFITTING"], [18, 4, 1, "", "X_BASELINE"]], "ax.utils.common.decorator": [[18, 1, 1, "", "ClassDecorator"]], "ax.utils.common.decorator.ClassDecorator": [[18, 4, 1, "", "DECORATE_PRIVATE"], [18, 3, 1, "", "decorate_callable"], [18, 3, 1, "", "decorate_class"]], "ax.utils.common.docutils": [[18, 5, 1, "", "copy_doc"]], "ax.utils.common.equality": [[18, 5, 1, "", "dataframe_equals"], [18, 5, 1, "", "datetime_equals"], [18, 5, 1, "", "equality_typechecker"], [18, 5, 1, "", "is_ax_equal"], [18, 5, 1, "", "object_attribute_dicts_equal"], [18, 5, 1, "", "object_attribute_dicts_find_unequal_fields"], [18, 5, 1, "", "same_elements"]], "ax.utils.common.executils": [[18, 5, 1, "", "execute_with_timeout"], [18, 5, 1, "", "handle_exceptions_in_retries"], [18, 5, 1, "", "retry_on_exception"]], "ax.utils.common.func_enum": [[18, 1, 1, "", "FuncEnum"]], "ax.utils.common.kwargs": [[18, 5, 1, "", "consolidate_kwargs"], [18, 5, 1, "", "filter_kwargs"], [18, 5, 1, "", "get_function_argument_names"], [18, 5, 1, "", "get_function_default_arguments"], [18, 5, 1, "", "warn_on_kwargs"]], "ax.utils.common.logger": [[18, 1, 1, "", "AxOutputNameFilter"], [18, 5, 1, "", "build_file_handler"], [18, 5, 1, "", "build_stream_handler"], [18, 1, 1, "", "disable_logger"], [18, 1, 1, "", "disable_loggers"], [18, 5, 1, "", "get_logger"], [18, 5, 1, "", "make_indices_str"], [18, 5, 1, "", "set_stderr_log_level"]], "ax.utils.common.logger.AxOutputNameFilter": [[18, 3, 1, "", "filter"]], "ax.utils.common.logger.disable_logger": [[18, 3, 1, "", "decorate_callable"]], "ax.utils.common.logger.disable_loggers": [[18, 3, 1, "", "decorate_callable"]], "ax.utils.common.mock": [[18, 5, 1, "", "mock_patch_method_original"]], "ax.utils.common.random": [[18, 5, 1, "", "set_rng_seed"], [18, 5, 1, "", "with_rng_seed"]], "ax.utils.common.result": [[18, 1, 1, "", "Err"], [18, 1, 1, "", "ExceptionE"], [18, 1, 1, "", "Ok"], [18, 1, 1, "", "Result"], [18, 6, 1, "", "UnwrapError"]], "ax.utils.common.result.Err": [[18, 2, 1, "", "err"], [18, 3, 1, "", "is_err"], [18, 3, 1, "", "is_ok"], [18, 3, 1, "", "map"], [18, 3, 1, "", "map_err"], [18, 3, 1, "", "map_or"], [18, 3, 1, "", "map_or_else"], [18, 2, 1, "", "ok"], [18, 3, 1, "", "unwrap"], [18, 3, 1, "", "unwrap_err"], [18, 3, 1, "", "unwrap_or"], [18, 3, 1, "", "unwrap_or_else"], [18, 2, 1, "", "value"]], "ax.utils.common.result.ExceptionE": [[18, 4, 1, "", "exception"], [18, 4, 1, "", "message"], [18, 3, 1, "", "tb_str"]], "ax.utils.common.result.Ok": [[18, 2, 1, "", "err"], [18, 3, 1, "", "is_err"], [18, 3, 1, "", "is_ok"], [18, 3, 1, "", "map"], [18, 3, 1, "", "map_err"], [18, 3, 1, "", "map_or"], [18, 3, 1, "", "map_or_else"], [18, 2, 1, "", "ok"], [18, 3, 1, "", "unwrap"], [18, 3, 1, "", "unwrap_err"], [18, 3, 1, "", "unwrap_or"], [18, 3, 1, "", "unwrap_or_else"], [18, 2, 1, "", "value"]], "ax.utils.common.result.Result": [[18, 2, 1, "", "err"], [18, 3, 1, "", "is_err"], [18, 3, 1, "", "is_ok"], [18, 3, 1, "", "map"], [18, 3, 1, "", "map_err"], [18, 3, 1, "", "map_or"], [18, 3, 1, "", "map_or_else"], [18, 2, 1, "", "ok"], [18, 3, 1, "", "unwrap"], [18, 3, 1, "", "unwrap_err"], [18, 3, 1, "", "unwrap_or"], [18, 3, 1, "", "unwrap_or_else"], [18, 2, 1, "", "value"]], "ax.utils.common.serialization": [[18, 1, 1, "", "SerializationMixin"], [18, 5, 1, "", "callable_from_reference"], [18, 5, 1, "", "callable_to_reference"], [18, 5, 1, "", "extract_init_args"], [18, 5, 1, "", "named_tuple_to_dict"], [18, 5, 1, "", "serialize_init_args"]], "ax.utils.common.serialization.SerializationMixin": [[18, 3, 1, "", "deserialize_init_args"], [18, 3, 1, "", "serialize_init_args"]], "ax.utils.common.testutils": [[18, 1, 1, "", "TestCase"], [18, 5, 1, "", "setup_import_mocks"]], "ax.utils.common.testutils.TestCase": [[18, 3, 1, "", "assertAxBaseEqual"], [18, 3, 1, "", "assertDictsAlmostEqual"], [18, 3, 1, "", "assertEqual"], [18, 3, 1, "", "assertRaisesOn"], [18, 3, 1, "", "setUp"], [18, 3, 1, "", "silence_stderr"]], "ax.utils.common.timeutils": [[18, 5, 1, "", "current_timestamp_in_millis"], [18, 5, 1, "", "timestamps_in_range"], [18, 5, 1, "", "to_ds"], [18, 5, 1, "", "to_ts"], [18, 5, 1, "", "unixtime_to_pandas_ts"]], "ax.utils.common.typeutils": [[18, 5, 1, "", "checked_cast"], [18, 5, 1, "", "checked_cast_dict"], [18, 5, 1, "", "checked_cast_list"], [18, 5, 1, "", "checked_cast_optional"], [18, 5, 1, "", "checked_cast_to_tuple"]], "ax.utils.common.typeutils_nonnative": [[18, 5, 1, "", "numpy_type_to_python_type"]], "ax.utils.common.typeutils_torch": [[18, 5, 1, "", "torch_type_from_str"], [18, 5, 1, "", "torch_type_to_str"]], "ax.utils.flake8_plugins": [[18, 0, 0, "-", "docstring_checker"]], "ax.utils.flake8_plugins.docstring_checker": [[18, 5, 1, "", "A000"], [18, 1, 1, "", "DocstringChecker"], [18, 1, 1, "", "DocstringCheckerVisitor"], [18, 1, 1, "", "Error"], [18, 5, 1, "", "is_copy_doc_call"], [18, 5, 1, "", "new_error"], [18, 5, 1, "", "should_check"]], "ax.utils.flake8_plugins.docstring_checker.DocstringChecker": [[18, 4, 1, "", "fikename"], [18, 4, 1, "", "name"], [18, 3, 1, "", "run"], [18, 4, 1, "", "tree"], [18, 4, 1, "", "version"]], "ax.utils.flake8_plugins.docstring_checker.DocstringCheckerVisitor": [[18, 3, 1, "", "check_A000"], [18, 4, 1, "", "errors"], [18, 3, 1, "", "visit_AsyncFunctionDef"], [18, 3, 1, "", "visit_ClassDef"], [18, 3, 1, "", "visit_FunctionDef"]], "ax.utils.flake8_plugins.docstring_checker.Error": [[18, 4, 1, "", "col"], [18, 4, 1, "", "lineno"], [18, 4, 1, "", "message"], [18, 4, 1, "", "type"]], "ax.utils.measurement": [[18, 0, 0, "-", "synthetic_functions"]], "ax.utils.measurement.synthetic_functions": [[18, 1, 1, "", "Aug_Branin"], [18, 1, 1, "", "Aug_Hartmann6"], [18, 1, 1, "", "Branin"], [18, 1, 1, "", "FromBotorch"], [18, 1, 1, "", "Hartmann6"], [18, 1, 1, "", "SyntheticFunction"], [18, 5, 1, "", "from_botorch"]], "ax.utils.measurement.synthetic_functions.FromBotorch": [[18, 2, 1, "", "name"]], "ax.utils.measurement.synthetic_functions.SyntheticFunction": [[18, 2, 1, "", "domain"], [18, 3, 1, "", "f"], [18, 2, 1, "", "fmax"], [18, 2, 1, "", "fmin"], [18, 3, 1, "", "informative_failure_on_none"], [18, 2, 1, "", "maximums"], [18, 2, 1, "", "minimums"], [18, 2, 1, "", "name"], [18, 2, 1, "", "required_dimensionality"]], "ax.utils.notebook": [[18, 0, 0, "-", "plotting"]], "ax.utils.notebook.plotting": [[18, 5, 1, "", "init_notebook_plotting"], [18, 5, 1, "", "render"]], "ax.utils.report": [[18, 0, 0, "-", "render"]], "ax.utils.report.render": [[18, 5, 1, "", "h2_html"], [18, 5, 1, "", "h3_html"], [18, 5, 1, "", "link_html"], [18, 5, 1, "", "list_item_html"], [18, 5, 1, "", "p_html"], [18, 5, 1, "", "render_report_elements"], [18, 5, 1, "", "table_cell_html"], [18, 5, 1, "", "table_heading_cell_html"], [18, 5, 1, "", "table_html"], [18, 5, 1, "", "table_row_html"], [18, 5, 1, "", "unordered_list_html"]], "ax.utils.sensitivity": [[18, 0, 0, "-", "derivative_gp"], [18, 0, 0, "-", "derivative_measures"], [18, 0, 0, "-", "sobol_measures"]], "ax.utils.sensitivity.derivative_gp": [[18, 5, 1, "", "get_KXX_inv"], [18, 5, 1, "", "get_KxX_dx"], [18, 5, 1, "", "get_Kxx_dx2"], [18, 5, 1, "", "posterior_derivative"]], "ax.utils.sensitivity.derivative_measures": [[18, 1, 1, "", "GpDGSMGpMean"], [18, 1, 1, "", "GpDGSMGpSampling"], [18, 5, 1, "", "compute_derivatives_from_model_list"], [18, 5, 1, "", "sample_discrete_parameters"]], "ax.utils.sensitivity.derivative_measures.GpDGSMGpMean": [[18, 3, 1, "", "aggregation"], [18, 4, 1, "", "bootstrap_indices"], [18, 3, 1, "", "gradient_absolute_measure"], [18, 3, 1, "", "gradient_measure"], [18, 3, 1, "", "gradients_square_measure"], [18, 4, 1, "", "mean_gradients"], [18, 4, 1, "", "mean_gradients_btsp"]], "ax.utils.sensitivity.derivative_measures.GpDGSMGpSampling": [[18, 3, 1, "", "aggregation"], [18, 4, 1, "", "samples_gradients"], [18, 4, 1, "", "samples_gradients_btsp"]], "ax.utils.sensitivity.sobol_measures": [[18, 5, 1, "", "GaussianLinkMean"], [18, 5, 1, "", "ProbitLinkMean"], [18, 1, 1, "", "SobolSensitivity"], [18, 1, 1, "", "SobolSensitivityGPMean"], [18, 1, 1, "", "SobolSensitivityGPSampling"], [18, 5, 1, "", "array_with_string_indices_to_dict"], [18, 5, 1, "", "ax_parameter_sens"], [18, 5, 1, "", "compute_sobol_indices_from_model_list"]], "ax.utils.sensitivity.sobol_measures.SobolSensitivity": [[18, 3, 1, "", "evalute_function"], [18, 3, 1, "", "first_order_indices"], [18, 3, 1, "", "generate_all_input_matrix"], [18, 3, 1, "", "second_order_indices"], [18, 3, 1, "", "total_order_indices"]], "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPMean": [[18, 3, 1, "", "first_order_indices"], [18, 3, 1, "", "second_order_indices"], [18, 3, 1, "", "total_order_indices"]], "ax.utils.sensitivity.sobol_measures.SobolSensitivityGPSampling": [[18, 2, 1, "", "dim"], [18, 3, 1, "", "first_order_indices"], [18, 3, 1, "", "second_order_indices"], [18, 3, 1, "", "total_order_indices"]], "ax.utils.stats": [[18, 0, 0, "-", "model_fit_stats"], [18, 0, 0, "-", "statstools"]], "ax.utils.stats.model_fit_stats": [[18, 7, 1, "", "DEFAULT_KDE_BANDWIDTH"], [18, 1, 1, "", "ModelFitMetricProtocol"], [18, 5, 1, "", "coefficient_of_determination"], [18, 5, 1, "", "compute_model_fit_metrics"], [18, 5, 1, "", "entropy_of_observations"], [18, 5, 1, "", "mean_of_the_standardized_error"], [18, 5, 1, "", "std_of_the_standardized_error"]], "ax.utils.stats.statstools": [[18, 5, 1, "", "agresti_coull_sem"], [18, 5, 1, "", "inverse_variance_weight"], [18, 5, 1, "", "marginal_effects"], [18, 5, 1, "", "positive_part_james_stein"], [18, 5, 1, "", "relativize"], [18, 5, 1, "", "relativize_data"], [18, 5, 1, "", "total_variance"], [18, 5, 1, "", "unrelativize"]], "ax.utils.testing": [[18, 0, 0, "-", "backend_simulator"], [18, 0, 0, "-", "benchmark_stubs"], [18, 0, 0, "-", "core_stubs"], [18, 0, 0, "-", "mock"], [18, 0, 0, "-", "modeling_stubs"], [18, 0, 0, "-", "preference_stubs"], [18, 0, 0, "-", "test_init_files"], [18, 0, 0, "-", "torch_stubs"], [18, 0, 0, "-", "utils"]], "ax.utils.testing.backend_simulator": [[18, 1, 1, "", "BackendSimulator"], [18, 1, 1, "", "BackendSimulatorOptions"], [18, 1, 1, "", "BackendSimulatorState"], [18, 1, 1, "", "SimStatus"], [18, 1, 1, "", "SimTrial"], [18, 5, 1, "", "format"]], "ax.utils.testing.backend_simulator.BackendSimulator": [[18, 2, 1, "", "all_trials"], [18, 3, 1, "", "from_state"], [18, 3, 1, "", "get_sim_trial_by_index"], [18, 3, 1, "", "lookup_trial_index_status"], [18, 3, 1, "", "new_trial"], [18, 2, 1, "", "num_completed"], [18, 2, 1, "", "num_failed"], [18, 2, 1, "", "num_queued"], [18, 2, 1, "", "num_running"], [18, 3, 1, "", "reset"], [18, 3, 1, "", "run_trial"], [18, 3, 1, "", "state"], [18, 3, 1, "", "status"], [18, 3, 1, "", "stop_trial"], [18, 2, 1, "", "time"], [18, 3, 1, "", "update"], [18, 2, 1, "", "use_internal_clock"]], "ax.utils.testing.backend_simulator.BackendSimulatorOptions": [[18, 4, 1, "", "failure_rate"], [18, 4, 1, "", "internal_clock"], [18, 4, 1, "", "max_concurrency"], [18, 4, 1, "", "time_scaling"], [18, 4, 1, "", "use_update_as_start_time"]], "ax.utils.testing.backend_simulator.BackendSimulatorState": [[18, 4, 1, "", "completed"], [18, 4, 1, "", "failed"], [18, 4, 1, "", "options"], [18, 4, 1, "", "queued"], [18, 4, 1, "", "running"], [18, 4, 1, "", "verbose_logging"]], "ax.utils.testing.backend_simulator.SimStatus": [[18, 4, 1, "id0", "completed"], [18, 4, 1, "id1", "failed"], [18, 4, 1, "id2", "queued"], [18, 4, 1, "id3", "running"], [18, 4, 1, "id4", "time_remaining"]], "ax.utils.testing.backend_simulator.SimTrial": [[18, 4, 1, "id5", "sim_completed_time"], [18, 4, 1, "id6", "sim_queued_time"], [18, 4, 1, "id7", "sim_runtime"], [18, 4, 1, "id8", "sim_start_time"], [18, 4, 1, "id9", "trial_index"]], "ax.utils.testing.benchmark_stubs": [[18, 1, 1, "", "DummyTestFunction"], [18, 1, 1, "", "TestDataset"], [18, 5, 1, "", "get_aggregated_benchmark_result"], [18, 5, 1, "", "get_benchmark_result"], [18, 5, 1, "", "get_moo_surrogate"], [18, 5, 1, "", "get_multi_objective_benchmark_problem"], [18, 5, 1, "", "get_single_objective_benchmark_problem"], [18, 5, 1, "", "get_sobol_gpei_benchmark_method"], [18, 5, 1, "", "get_soo_surrogate"], [18, 5, 1, "", "get_soo_surrogate_test_function"]], "ax.utils.testing.benchmark_stubs.DummyTestFunction": [[18, 4, 1, "", "dim"], [18, 3, 1, "", "evaluate_true"], [18, 4, 1, "", "num_outcomes"], [18, 4, 1, "", "outcome_names"]], "ax.utils.testing.core_stubs": [[18, 1, 1, "", "CustomTestMetric"], [18, 1, 1, "", "CustomTestRunner"], [18, 1, 1, "", "DummyEarlyStoppingStrategy"], [18, 1, 1, "", "DummyGlobalStoppingStrategy"], [18, 1, 1, "", "SpecialGenerationStrategy"], [18, 1, 1, "", "TestTrial"], [18, 5, 1, "", "get_abandoned_arm"], [18, 5, 1, "", "get_acquisition_function_type"], [18, 5, 1, "", "get_acquisition_type"], [18, 5, 1, "", "get_and_early_stopping_strategy"], [18, 5, 1, "", "get_arm"], [18, 5, 1, "", "get_arm_weights1"], [18, 5, 1, "", "get_arm_weights2"], [18, 5, 1, "", "get_arms"], [18, 5, 1, "", "get_arms_from_dict"], [18, 5, 1, "", "get_auxiliary_experiment"], [18, 5, 1, "", "get_batch_trial"], [18, 5, 1, "", "get_batch_trial_with_repeated_arms"], [18, 5, 1, "", "get_botorch_model"], [18, 5, 1, "", "get_botorch_model_with_default_acquisition_class"], [18, 5, 1, "", "get_botorch_model_with_surrogate_spec"], [18, 5, 1, "", "get_botorch_model_with_surrogate_specs"], [18, 5, 1, "", "get_branin_arms"], [18, 5, 1, "", "get_branin_data"], [18, 5, 1, "", "get_branin_data_batch"], [18, 5, 1, "", "get_branin_data_multi_objective"], [18, 5, 1, "", "get_branin_experiment"], [18, 5, 1, "", "get_branin_experiment_with_multi_objective"], [18, 5, 1, "", "get_branin_experiment_with_status_quo_trials"], [18, 5, 1, "", "get_branin_experiment_with_timestamp_map_metric"], [18, 5, 1, "", "get_branin_metric"], [18, 5, 1, "", "get_branin_multi_objective"], [18, 5, 1, "", "get_branin_multi_objective_optimization_config"], [18, 5, 1, "", "get_branin_objective"], [18, 5, 1, "", "get_branin_optimization_config"], [18, 5, 1, "", "get_branin_outcome_constraint"], [18, 5, 1, "", "get_branin_search_space"], [18, 5, 1, "", "get_branin_with_multi_task"], [18, 5, 1, "", "get_chained_input_transform"], [18, 5, 1, "", "get_choice_parameter"], [18, 5, 1, "", "get_custom_multi_objective"], [18, 5, 1, "", "get_data"], [18, 5, 1, "", "get_dataset"], [18, 5, 1, "", "get_default_scheduler_options"], [18, 5, 1, "", "get_discrete_search_space"], [18, 5, 1, "", "get_experiment"], [18, 5, 1, "", "get_experiment_with_batch_and_single_trial"], [18, 5, 1, "", "get_experiment_with_batch_trial"], [18, 5, 1, "", "get_experiment_with_custom_runner_and_metric"], [18, 5, 1, "", "get_experiment_with_data"], [18, 5, 1, "", "get_experiment_with_map_data"], [18, 5, 1, "", "get_experiment_with_map_data_type"], [18, 5, 1, "", "get_experiment_with_multi_objective"], [18, 5, 1, "", "get_experiment_with_observations"], [18, 5, 1, "", "get_experiment_with_repeated_arms"], [18, 5, 1, "", "get_experiment_with_scalarized_objective_and_outcome_constraint"], [18, 5, 1, "", "get_experiment_with_trial"], [18, 5, 1, "", "get_experiment_with_trial_with_ttl"], [18, 5, 1, "", "get_factorial_experiment"], [18, 5, 1, "", "get_factorial_metric"], [18, 5, 1, "", "get_factorial_search_space"], [18, 5, 1, "", "get_fixed_parameter"], [18, 5, 1, "", "get_gamma_prior"], [18, 5, 1, "", "get_generator_run"], [18, 5, 1, "", "get_generator_run2"], [18, 5, 1, "", "get_hartmann_metric"], [18, 5, 1, "", "get_hartmann_search_space"], [18, 5, 1, "", "get_hierarchical_search_space"], [18, 5, 1, "", "get_hierarchical_search_space_experiment"], [18, 5, 1, "", "get_high_dimensional_branin_experiment"], [18, 5, 1, "", "get_hss_trials_with_fixed_parameter"], [18, 5, 1, "", "get_improvement_global_stopping_strategy"], [18, 5, 1, "", "get_interval"], [18, 5, 1, "", "get_l2_reg_weight_parameter"], [18, 5, 1, "", "get_large_factorial_search_space"], [18, 5, 1, "", "get_large_ordinal_search_space"], [18, 5, 1, "", "get_lr_parameter"], [18, 5, 1, "", "get_many_branin_objective_opt_config"], [18, 5, 1, "", "get_map_data"], [18, 5, 1, "", "get_map_key_info"], [18, 5, 1, "", "get_map_metric"], [18, 5, 1, "", "get_map_objective"], [18, 5, 1, "", "get_map_optimization_config"], [18, 5, 1, "", "get_metric"], [18, 5, 1, "", "get_mll_type"], [18, 5, 1, "", "get_model_covariance"], [18, 5, 1, "", "get_model_mean"], [18, 5, 1, "", "get_model_parameter"], [18, 5, 1, "", "get_model_predictions"], [18, 5, 1, "", "get_model_predictions_per_arm"], [18, 5, 1, "", "get_model_type"], [18, 5, 1, "", "get_multi_objective"], [18, 5, 1, "", "get_multi_objective_optimization_config"], [18, 5, 1, "", "get_multi_type_experiment"], [18, 5, 1, "", "get_multi_type_experiment_with_multi_objective"], [18, 5, 1, "", "get_non_monolithic_branin_moo_data"], [18, 5, 1, "", "get_num_boost_rounds_parameter"], [18, 5, 1, "", "get_objective"], [18, 5, 1, "", "get_objective_threshold"], [18, 5, 1, "", "get_observations_with_invalid_value"], [18, 5, 1, "", "get_online_sobol_mbm_generation_strategy"], [18, 5, 1, "", "get_optimization_config"], [18, 5, 1, "", "get_optimization_config_no_constraints"], [18, 5, 1, "", "get_or_early_stopping_strategy"], [18, 5, 1, "", "get_order_constraint"], [18, 5, 1, "", "get_ordered_choice_parameter"], [18, 5, 1, "", "get_outcome_constraint"], [18, 5, 1, "", "get_parameter_constraint"], [18, 5, 1, "", "get_parameter_distribution"], [18, 5, 1, "", "get_pathlib_path"], [18, 5, 1, "", "get_percentile_early_stopping_strategy"], [18, 5, 1, "", "get_percentile_early_stopping_strategy_with_non_objective_metric_name"], [18, 5, 1, "", "get_range_parameter"], [18, 5, 1, "", "get_range_parameter2"], [18, 5, 1, "", "get_risk_measure"], [18, 5, 1, "", "get_robust_branin_experiment"], [18, 5, 1, "", "get_robust_search_space"], [18, 5, 1, "", "get_robust_search_space_environmental"], [18, 5, 1, "", "get_scalarized_objective"], [18, 5, 1, "", "get_scalarized_outcome_constraint"], [18, 5, 1, "", "get_scheduler_options_batch_trial"], [18, 5, 1, "", "get_search_space"], [18, 5, 1, "", "get_search_space_for_range_value"], [18, 5, 1, "", "get_search_space_for_range_values"], [18, 5, 1, "", "get_search_space_for_value"], [18, 5, 1, "", "get_search_space_with_choice_parameters"], [18, 5, 1, "", "get_sebo_acquisition_class"], [18, 5, 1, "", "get_small_discrete_search_space"], [18, 5, 1, "", "get_status_quo"], [18, 5, 1, "", "get_sum_constraint1"], [18, 5, 1, "", "get_sum_constraint2"], [18, 5, 1, "", "get_surrogate"], [18, 5, 1, "", "get_surrogate_spec_with_default"], [18, 5, 1, "", "get_surrogate_spec_with_lognormal"], [18, 5, 1, "", "get_synthetic_runner"], [18, 5, 1, "", "get_task_choice_parameter"], [18, 5, 1, "", "get_test_map_data_experiment"], [18, 5, 1, "", "get_threshold_early_stopping_strategy"], [18, 5, 1, "", "get_trial"], [18, 5, 1, "", "get_trial_based_criterion"], [18, 5, 1, "", "get_weights"], [18, 5, 1, "", "get_weights_from_dict"], [18, 5, 1, "", "get_winsorization_config"], [18, 5, 1, "", "run_branin_experiment_with_generation_strategy"]], "ax.utils.testing.core_stubs.CustomTestRunner": [[18, 3, 1, "", "run"]], "ax.utils.testing.core_stubs.DummyEarlyStoppingStrategy": [[18, 3, 1, "", "should_stop_trials_early"]], "ax.utils.testing.core_stubs.SpecialGenerationStrategy": [[18, 3, 1, "", "clone_reset"], [18, 3, 1, "", "gen_for_multiple_trials_with_multiple_models"]], "ax.utils.testing.core_stubs.TestTrial": [[18, 3, 1, "", "abandoned_arms"], [18, 2, 1, "", "arms"], [18, 3, 1, "", "arms_by_name"], [18, 3, 1, "", "generator_runs"]], "ax.utils.testing.metrics": [[18, 0, 0, "-", "backend_simulator_map"], [18, 0, 0, "-", "branin_backend_map"]], "ax.utils.testing.metrics.backend_simulator_map": [[18, 1, 1, "", "BackendSimulatorTimestampMapMetric"]], "ax.utils.testing.metrics.backend_simulator_map.BackendSimulatorTimestampMapMetric": [[18, 3, 1, "", "convert_to_timestamps"], [18, 3, 1, "", "fetch_trial_data"]], "ax.utils.testing.metrics.branin_backend_map": [[18, 1, 1, "", "BraninBackendMapMetric"]], "ax.utils.testing.metrics.branin_backend_map.BraninBackendMapMetric": [[18, 3, 1, "", "convert_to_timestamps"]], "ax.utils.testing.mock": [[18, 5, 1, "", "mock_botorch_optimize"], [18, 5, 1, "", "mock_botorch_optimize_context_manager"], [18, 5, 1, "", "skip_fit_gpytorch_mll"], [18, 5, 1, "", "skip_fit_gpytorch_mll_context_manager"]], "ax.utils.testing.modeling_stubs": [[18, 5, 1, "", "get_experiment_for_value"], [18, 5, 1, "", "get_generation_strategy"], [18, 5, 1, "", "get_input_transform_type"], [18, 5, 1, "", "get_legacy_list_surrogate_generation_step_as_dict"], [18, 5, 1, "", "get_observation"], [18, 5, 1, "", "get_observation1"], [18, 5, 1, "", "get_observation1trans"], [18, 5, 1, "", "get_observation2"], [18, 5, 1, "", "get_observation2trans"], [18, 5, 1, "", "get_observation_features"], [18, 5, 1, "", "get_observation_status_quo0"], [18, 5, 1, "", "get_observation_status_quo1"], [18, 5, 1, "", "get_outcome_transfrom_type"], [18, 5, 1, "", "get_surrogate_as_dict"], [18, 5, 1, "", "get_surrogate_generation_step"], [18, 5, 1, "", "get_surrogate_spec_as_dict"], [18, 5, 1, "", "get_to_new_sq_transform_type"], [18, 5, 1, "", "get_transform_type"], [18, 5, 1, "", "sobol_gpei_generation_node_gs"], [18, 1, 1, "", "transform_1"], [18, 1, 1, "", "transform_2"]], "ax.utils.testing.modeling_stubs.transform_1": [[18, 3, 1, "", "transform_observation_features"], [18, 3, 1, "", "transform_optimization_config"], [18, 3, 1, "", "transform_search_space"], [18, 3, 1, "", "untransform_observation_features"]], "ax.utils.testing.modeling_stubs.transform_2": [[18, 3, 1, "", "transform_observation_features"], [18, 3, 1, "", "transform_optimization_config"], [18, 3, 1, "", "transform_search_space"], [18, 3, 1, "", "untransform_observation_features"]], "ax.utils.testing.preference_stubs": [[18, 5, 1, "", "experimental_metric_eval"], [18, 5, 1, "", "get_pbo_experiment"], [18, 5, 1, "", "pairwise_pref_metric_eval"], [18, 5, 1, "", "sum_utility"]], "ax.utils.testing.test_init_files": [[18, 1, 1, "", "InitTest"]], "ax.utils.testing.test_init_files.InitTest": [[18, 3, 1, "", "test_InitFiles"]], "ax.utils.testing.torch_stubs": [[18, 5, 1, "", "get_torch_test_data"]], "ax.utils.testing.utils": [[18, 5, 1, "", "generic_equals"], [18, 5, 1, "", "run_trials_with_gs"]], "ax.utils.tutorials": [[18, 0, 0, "-", "cnn_utils"]], "ax.utils.tutorials.cnn_utils": [[18, 1, 1, "", "CNN"], [18, 5, 1, "", "evaluate"], [18, 5, 1, "", "get_partition_data_loaders"], [18, 5, 1, "", "load_mnist"], [18, 5, 1, "", "split_dataset"], [18, 5, 1, "", "train"]], "ax.utils.tutorials.cnn_utils.CNN": [[18, 3, 1, "", "forward"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:attribute", "5": "py:function", "6": "py:exception", "7": "py:data"}, "terms": {"": [0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 18], "0": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "001": [10, 18], "06": 7, "07": [1, 3], "0_0": [2, 10, 12], "0_1": [2, 12], "0d": 11, "1": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18], "10": [0, 1, 2, 3, 4, 10, 12, 15, 16, 18], "100": [1, 2, 3, 11, 15, 16, 18], "1000": 18, "10000": [9, 10, 11, 18], "10_0": 12, "10d": 2, "10k": 11, "11": [4, 15, 16], "114": 12, "119": 18, "12": [15, 16, 18], "126": 18, "128": [11, 12, 18], "13": 16, "137": 11, "13d": 2, "14": 16, "141": 12, "15": [12, 16], "16": 16, "16777215": 16, "17": 10, "177": 12, "18": 16, "180": 12, "186": 12, "188": 12, "189": 12, "19": 16, "190": 12, "199": 12, "1998": 18, "1_0": 2, "1_10": 12, "1_2": 12, "1d": [2, 11, 18], "1e": [7, 18], "2": [0, 1, 3, 4, 10, 11, 12, 14, 15, 16, 18], "20": [0, 1, 10, 11, 15, 16, 18], "200": 11, "2017": 2, "2018": 9, "2020": 11, "2021": [9, 11, 18], "2022": 2, "2023": 11, "21": 16, "211": 12, "218": 12, "22": 16, "23": 16, "24": 16, "25": [16, 18], "251": 12, "253": 12, "26": [9, 16], "2685469": 18, "27": 16, "28": 16, "29": 16, "3": [2, 3, 10, 11, 12, 15, 16, 18], "30": [0, 10], "300": [4, 12], "33": 11, "34": [11, 18], "35": 2, "36": 11, "3a": 15, "3b": 15, "3c": 15, "4": [2, 3, 10, 12, 15, 16, 18], "40": [0, 18], "4096": 16, "4294967295": 16, "5": [0, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "50": [2, 4, 12], "500": 11, "512": 11, "52": 18, "590": 9, "5e": [1, 3], "5th": 10, "6": [2, 3, 9, 11, 12, 15, 16, 18], "6d": 2, "7": [3, 12, 16, 18], "700px": 18, "75": 12, "8": [1, 3, 16, 18], "80th": 11, "89": 9, "9": [10, 12, 16], "95": [0, 10, 11, 12], "96": [9, 11], "98": 12, "A": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18], "AND": [1, 3], "And": 14, "As": 11, "At": 10, "Be": 10, "But": 18, "By": [1, 3, 10, 11, 12, 15, 16, 18], "For": [1, 2, 3, 4, 6, 9, 10, 11, 12, 15, 16, 18], "If": [1, 2, 3, 4, 7, 9, 10, 11, 12, 14, 15, 16, 18], "In": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 15, 16, 17, 18], "It": [0, 1, 2, 3, 5, 10, 11, 12, 14, 15, 18], "Its": [1, 3, 10], "NOT": [12, 14, 18], "No": 3, "Not": [1, 3, 10, 11, 18], "One": [2, 10, 12, 15], "Such": [2, 15], "TO": 10, "That": [1, 2, 3, 10, 18], "The": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "Then": [10, 15], "There": [1, 2, 3, 11, 15, 18], "These": [1, 2, 3, 10, 11, 12, 14, 15, 16, 18], "To": [1, 3, 10, 11, 15, 18], "Will": [10, 12], "With": [10, 11, 15, 18], "_": [9, 18], "__call__": 10, "__dict__": 18, "__eq__": 18, "__init__": [0, 11, 18], "__repr__": 10, "_array_lik": [3, 10], "_axplotconfigbas": 12, "_call_func": 18, "_check_validity_and_get_data": 4, "_class": 16, "_complete_optim": 15, "_cv_result": 10, "_data_by_tri": [1, 3], "_dataset": 2, "_db_id": 16, "_defaulttyp": 16, "_deprecated_model_to_replac": [1, 10], "_diagnost": 10, "_experi": [10, 18], "_fitted_model": 10, "_gen": 10, "_gen_sampl": 11, "_gen_unconstrain": 11, "_get_best_tri": [2, 15], "_get_curve_plot_dropdown": 15, "_get_hypervolum": 15, "_get_model": 11, "_get_nam": 2, "_get_stat": 11, "_id": 16, "_last_cv_kwarg": 10, "_last_fit_arg_id": 10, "_lib": 3, "_metrics_by_class": [1, 3], "_model": 18, "_model_gen": 10, "_model_spec_to_gen_from": 10, "_modul": [1, 3], "_pick_fitted_model_to_gen_from": 10, "_plot": 15, "_properti": 15, "_queu": 18, "_run": 18, "_scalartype_co": [2, 3, 4, 9, 10, 11, 12, 18], "_skip_experiment_sav": 15, "_surrog": 2, "_t": 18, "_transform_parameter_distribut": [10, 18], "_transform_search_spac": [10, 18], "_type": [3, 10, 16], "a000": 18, "ab": 18, "abandon": [1, 2, 3, 14, 15, 16, 18], "abandon_arm": 18, "abandon_tri": 15, "abandoned_arm": [1, 3, 16, 18], "abandoned_arm_from_sqa": 16, "abandoned_arm_nam": [1, 3], "abandoned_arm_sqa": 16, "abandoned_arm_to_sqa": 16, "abandoned_arms_metadata": [3, 16], "abandoned_reason": [3, 16], "abandonedarm": [3, 16, 18], "abc": [2, 3, 4, 6, 10, 11, 16, 18], "abil": [0, 10], "abl": [0, 10, 15], "abort": 15, "about": [1, 3, 6, 11, 12, 15], "abov": [1, 3, 10, 11, 12, 14], "absent": 10, "absolut": [1, 3, 10, 11, 12, 16, 18], "absolute_metr": 12, "abstract": [1, 2, 3, 4, 5, 10, 15, 16, 18], "abstractcontextmanag": 18, "accept": [1, 3, 10, 15], "access": [1, 3, 11], "accessor": 11, "accord": [1, 2, 3, 10, 11, 12, 15, 18], "accordingli": [1, 3], "account": [3, 10, 15, 18], "accur": 3, "accuraci": 18, "achiev": [1, 3, 18], "acklei": 2, "acq_class": 16, "acq_funct": 11, "acq_function_list": 11, "acq_opt": [10, 11], "acqf": 11, "acqf_class": 16, "acqf_constructor": [10, 11], "acqf_kwarg": 18, "acqf_opt": 11, "acqf_optim": [10, 11], "acqf_valu": 11, "acquir": 15, "acquisit": [1, 2, 3, 10, 16, 18], "acquisition_cl": 2, "acquisition_class": 11, "acquisition_funct": 11, "acquisition_function_kwarg": 18, "acquisition_function_nam": 11, "acquisition_function_registri": 16, "acquisition_opt": 11, "acquisition_registri": 16, "acquisitionfunct": [2, 10, 11, 16, 18], "acquisitionobject": 11, "acqusit": 11, "across": [0, 1, 3, 10, 11, 12, 15, 16, 18], "act": 14, "action": [3, 10, 15], "actual": [3, 5, 10, 14, 15, 18], "actual_num_tri": 15, "actual_resource_usag": 4, "ad": [1, 2, 3, 9, 10, 12, 15, 16, 18], "adapt": [2, 10], "adaptor": 11, "add": [1, 2, 3, 7, 10, 11, 12, 15, 16, 18], "add_arm": [1, 3], "add_arm_and_prevent_naming_collis": 3, "add_arms_and_weight": 3, "add_fixed_featur": 11, "add_generator_run": [1, 3], "add_paramet": 3, "add_parameter_constraint": 3, "add_tracking_metr": [1, 3, 15], "add_trial": 18, "add_trial_typ": [3, 18], "add_valu": [1, 3], "addit": [1, 2, 3, 5, 6, 9, 10, 11, 12, 15, 16, 18], "addition": [3, 5, 10], "additional_fields_cal": 15, "additional_kwarg": 2, "additional_model_input": 11, "additional_object": 16, "address": 18, "adpat": 11, "advanc": [1, 2, 3, 10, 11, 18], "ae": 16, "aeplotconfig": 12, "affect": 18, "affix": 15, "after": [1, 2, 3, 4, 10, 11, 12, 15, 16, 17, 18], "after_gen": 10, "afterward": [1, 2, 3, 18], "again": [1, 3], "against": [1, 2, 3, 10, 12, 15, 18], "agg": [10, 12], "aggreg": [2, 10, 12, 18], "aggregatedbenchmarkresult": [2, 16, 18], "aggregr": 2, "ago": [0, 6], "agresti": 18, "agresti_coull_sem": 18, "al": [9, 18], "alan": 18, "alexand": 18, "algorithm": [2, 5, 10, 11, 15], "alia": [1, 3, 10, 11, 12, 16, 18], "alias": 18, "align": 4, "align_partial_result": 4, "all": [0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 15, 16, 18], "all_constraint": [1, 3], "all_ordinal_features_are_integer_valu": 11, "all_trial": 18, "alloc": [1, 3], "allocate_lock": 15, "allow": [0, 1, 2, 3, 10, 11, 13, 14, 15, 16, 18], "allow_batched_model": 11, "allow_extra_param": [1, 3], "allow_nan": 10, "allow_non": [1, 3], "almost": [2, 18], "along": [1, 3, 7, 10, 11, 12, 15, 18], "alongsid": [10, 15], "alpha": [11, 12], "alphabet": 18, "alreadi": [1, 2, 3, 10, 12, 14, 15, 16], "also": [1, 2, 3, 10, 11, 12, 13, 15, 16, 18], "alter": 18, "altern": 11, "although": [2, 18], "altogeth": [6, 10], "alwai": [0, 1, 3, 10, 12, 15, 16, 18], "always_include_field_column": 15, "amend": 3, "ament": 11, "ament2023logei": 11, "american": 18, "among": [3, 6, 11, 12], "amount": [1, 2, 3, 10, 18], "an": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "analogu": [3, 16], "analys": [0, 5, 15], "analysi": [8, 10, 12, 15, 16], "analysis": 0, "analysis_card": 16, "analysis_card_from_sqa": 16, "analysis_card_sqa": 16, "analysis_card_to_sqa": 16, "analysiscard": [0, 15, 16], "analysiscardlevel": 0, "analyt": [10, 16, 18], "analyticexpectedutilityofbestopt": 16, "andearlystoppingstrategi": [4, 16, 18], "ani": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 14, 15, 16, 17, 18], "annot": 10, "anoth": [1, 3, 5, 10, 11, 12, 15, 18], "another_metric_nam": 15, "any_constraint_viol": 0, "anywai": 15, "anywher": [1, 3], "api": [1, 3, 10, 15, 18], "app": 9, "appdef": 14, "appear": [1, 3, 11, 12, 15, 18], "append": [1, 3, 18], "appli": [1, 2, 3, 4, 5, 10, 11, 13, 15, 16, 18], "applic": [0, 1, 2, 3, 4, 10, 15, 18], "appmetr": 9, "approach": [10, 11], "appropri": [3, 10, 11, 12, 15, 17, 18], "approprio": 3, "approxim": [3, 10, 11, 15, 18], "ar": [1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 14, 15, 16, 17, 18], "arbitrari": [3, 10, 15], "arbitrarili": 18, "arbitrati": 3, "arc": 10, "archambeau": 2, "ard_num_dim": 11, "area": 4, "arg": [0, 1, 2, 3, 10, 11, 14, 16, 18], "argument": [1, 2, 3, 10, 11, 12, 14, 15, 16, 18], "aris": 15, "arm": [1, 2, 4, 6, 8, 9, 10, 11, 12, 15, 16, 18], "arm_data": 12, "arm_effect": 0, "arm_from_sqa": 16, "arm_idx": 3, "arm_nam": [0, 1, 3, 4, 10, 12, 15], "arm_name_to_paramet": 12, "arm_name_to_sort_kei": 12, "arm_name_to_tupl": 12, "arm_noun": 12, "arm_signatur": [1, 3], "arm_sqa": 16, "arm_to_dict": 16, "arm_to_sqa": 16, "arm_weight": [1, 3], "arm_weights_dict": 18, "arms_by_nam": [1, 3, 18], "arms_by_signatur": [1, 3, 10], "arms_by_signature_for_dedupl": [1, 3, 10], "arms_df": 15, "arms_per_nod": [3, 10, 18], "arms_per_tri": [1, 15, 17], "armweight": 3, "around": [0, 1, 3, 11, 12, 16], "arr": 12, "arrai": [3, 4, 10, 11, 12, 18], "array_to_observation_data": 10, "array_with_string_indices_to_dict": 18, "arriv": [1, 2, 3], "artifici": [1, 3], "aryl": 9, "as_arrai": 11, "as_perc": 18, "asid": 12, "assert": [10, 18], "assertaxbaseequ": 18, "assertdictsalmostequ": 18, "assertequ": 18, "assertionerror": 18, "assertraiseson": 18, "assess": [2, 10], "assess_model_fit": 10, "assess_model_fit_result": 10, "assessmodelfitresult": 10, "assign": [1, 3, 10], "assign_runn": 3, "associ": [0, 1, 2, 3, 4, 10, 11, 15, 16, 18], "assum": [1, 3, 9, 10, 11, 12, 15, 18], "assumpt": [3, 10, 12, 15, 16, 18], "ast": 18, "asynchron": [1, 15], "attach": [1, 2, 3, 9, 12, 15, 16], "attach_batch_trial_data": [1, 3], "attach_data": [1, 3, 9], "attach_fetch_result": [1, 3], "attach_tri": [1, 3, 15], "attemp": 11, "attempt": [1, 3, 5, 10, 15, 16], "attr": 18, "attribut": [0, 1, 2, 3, 9, 10, 11, 15, 16, 18], "aug_branin": 18, "aug_hartmann6": 18, "augment": 18, "augmentedbraninmetr": 9, "augmentedhartmann6metr": 9, "auto": 11, "auto_wins_quantil": 10, "autom": [3, 5, 9, 10], "automat": [1, 3, 4, 10, 11, 12, 14, 16], "automl": 10, "automodul": 10, "autoset_axis_limit": 12, "autotransitionaftergen": 16, "auxilari": 3, "auxiliari": [3, 15, 16], "auxiliary_experi": 16, "auxiliary_experiment_purpose_enum": 16, "auxiliary_experiment_to_dict": 16, "auxiliary_experiments_by_purpos": [1, 3, 15], "auxiliaryexperi": [1, 15, 16, 18], "auxiliaryexperimentcheck": 16, "auxiliaryexperimentpurpos": [1, 3, 15, 16], "avail": [1, 3, 4, 5, 6, 9, 10, 15, 17, 18], "available_flag": [1, 3], "averag": [9, 10, 18], "avoid": [1, 3, 10, 15, 16, 18], "awai": 12, "awar": 10, "awkward": 10, "ax": 8, "ax_class_from_json_dict": 16, "ax_client": [10, 15, 17], "ax_client_candidate_gener": 15, "ax_client_data_attach": 15, "ax_client_snapshot": 15, "ax_parameter_sen": 18, "ax_test_metr": 18, "axclient": [8, 10, 15], "axclientcompletedrecord": 17, "axclientcreatedrecord": 17, "axclientsubclass": 15, "axerror": [5, 15], "axgenerationexcept": 5, "axi": [12, 15], "axis_rang": 12, "axlogg": 18, "axoutputnamefilt": 18, "axparameterwarn": 5, "axplotconfig": [12, 15, 18], "axplottyp": 12, "axstoragewarn": 5, "axwarn": 5, "b": [1, 3, 4, 6, 9, 10, 11, 15, 18], "bach": 12, "back": [10, 11, 12, 15, 16, 17], "backend": 8, "backend_simul": 18, "backend_simulator_map": 18, "backendsimul": [14, 18], "backendsimulatoropt": 18, "backendsimulatorst": 18, "backendsimulatortimestampmapmetr": 18, "backoff": 15, "backpoint": 10, "backward": [1, 5, 10, 12, 16, 18], "bad": [0, 10], "bad_fit_metrics_to_fisher_scor": 10, "bakeoff": 3, "bakshi": [2, 11], "balandat": [2, 11], "band": [0, 12], "bandit_rollout": 12, "bandwidth": 18, "bar": [10, 12, 14, 15], "barbaz": 14, "base": [0, 1, 2, 3, 5, 8, 9, 13, 14, 15, 16, 17], "base_kernel": 11, "base_modelbridg": 10, "base_tri": [1, 3], "baseclass": 18, "basedata": [1, 3], "baseearlystoppingstrategi": [4, 6, 15, 18], "basegenarg": 10, "baseglobalstoppingstrategi": [6, 15, 18], "baselin": [11, 15, 18], "baseline_arm_nam": 15, "baseline_valu": 15, "basenullableenum": 16, "baserelativ": 10, "basetestproblem": 2, "basetri": [1, 2, 6, 9, 14, 15, 16, 18], "basic": [0, 2, 3, 10, 11, 15, 18], "batch": [0, 1, 2, 3, 10, 11, 12, 13, 15, 16, 18], "batch_i": 12, "batch_init_condit": 18, "batch_initial_condit": 18, "batch_limit": 11, "batch_method": 2, "batch_shap": 11, "batch_siz": [2, 9, 15, 16, 18], "batch_to_dict": 16, "batch_trial": [3, 15, 16], "batch_trial_from_json": 16, "batch_x": 12, "batchedtri": 3, "batchtrial": [1, 2, 10, 12, 14, 15, 16, 18], "bay": [10, 11, 18], "bayesian": [2, 9, 10, 11, 15, 18], "bayesopt": [10, 15], "becam": [1, 3], "becaus": [1, 3, 5, 10, 11, 15, 16, 18], "becom": [10, 11], "been": [1, 3, 5, 10, 11, 15], "befor": [1, 2, 3, 4, 6, 10, 11, 12, 15, 18], "begin": 15, "behavior": [1, 3, 9, 10, 11, 15, 16, 18], "being": [1, 2, 3, 10, 11, 12, 15, 17, 18], "belong": [1, 2, 3, 10, 11], "below": [1, 3, 4, 10, 11, 15, 18], "benchmark": [4, 8, 16], "benchmark_method": [2, 16], "benchmark_metr": [2, 16], "benchmark_multiple_problems_method": 2, "benchmark_one_method_problem": 2, "benchmark_problem": 2, "benchmark_problem_registri": 2, "benchmark_repl": 2, "benchmark_result": [2, 16], "benchmark_runn": 2, "benchmark_stub": 18, "benchmark_test_funct": 2, "benchmarkmethod": [2, 16, 18], "benchmarkmetr": [2, 16], "benchmarkproblem": [2, 18], "benchmarkproblemregistryentri": 2, "benchmarkresult": [2, 16, 18], "benchmarkrunn": 2, "benchmarktestfunct": [2, 18], "benefici": 15, "best": [1, 2, 3, 8, 10, 11, 12, 18], "best_arm_predict": [1, 3], "best_feasible_object": 3, "best_in_sample_point": 11, "best_model": 10, "best_model_selector": [10, 16], "best_model_selector_to_dict": 16, "best_observation_featur": 10, "best_observed_point": 11, "best_out_of_sample_point": 11, "best_point": [11, 15], "best_point_method": 11, "best_point_mixin": 15, "best_point_qu": 17, "best_point_recommend": 11, "bestmodelselector": [10, 16], "bestpointmixin": [2, 15], "beta": [3, 18], "better": [1, 2, 3, 9, 10, 12, 18], "between": [0, 1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 18], "beyond": 12, "bia": 18, "bias_correct": 18, "bin": 15, "binomi": 18, "bit": 10, "blob": [0, 16], "blob_annot": 0, "block": 15, "block_gen_if_met": 15, "blue": 12, "bo": 18, "bo_mix": 10, "bodi": [11, 18], "bond": 9, "bool": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "boolean": [1, 3, 4, 6, 10, 11, 12, 15, 18], "boolen": 11, "bootstrap": [11, 18], "bootstrap_arrai": 18, "bootstrap_indic": 18, "boston": 9, "bot": 3, "both": [0, 1, 2, 3, 10, 11, 12, 15, 16, 18], "botorch": [1, 3, 8, 10, 15, 16, 18], "botorch_acqf_class": 11, "botorch_class": 16, "botorch_component_from_json": 16, "botorch_component_to_dict": 16, "botorch_default": 10, "botorch_input_transform_to_init_arg": 16, "botorch_model_class": 11, "botorch_model_kwarg": 11, "botorch_model_to_dict": 16, "botorch_modular": [10, 16], "botorch_modular_registri": 16, "botorch_modular_to_dict": 16, "botorch_problem": 2, "botorch_synthetic_funct": 18, "botorch_test": 2, "botorchmodel": [10, 11, 16, 18], "botorchtestfunct": 2, "bottom": [4, 10, 12], "bound": [0, 1, 2, 3, 7, 10, 11, 12, 13, 14, 15, 18], "boundari": [7, 10], "boundary_prop": 7, "brahmbhatt": 9, "branin": [8, 16], "branin_backend_map": 18, "branin_map": [9, 16], "braninbackendmapmetr": 18, "branincurrin": 18, "braninfidelitymapmetr": 9, "braninmetr": [1, 3, 9, 16, 18], "branintimestampmapmetr": [9, 16, 18], "break": [3, 12], "breakdown": 10, "breiman": 11, "brent": 18, "breviti": 14, "bridg": [1, 3, 8], "bridge_class": 10, "bridge_kwarg": [1, 3], "broadcast": 11, "broken": 10, "budget": 3, "build": 18, "build_file_handl": 18, "build_filter_tri": 12, "build_objective_threshold": 15, "build_stream_handl": 18, "built": [10, 16], "builtin": 16, "bulk": [15, 16], "bulk_fetch_experiment_data": [1, 3], "bulk_fetch_trial_data": [1, 3, 9], "bunch": 3, "bundl": [15, 18], "button": 12, "bypass": 15, "c": [2, 4, 6, 9, 10, 18], "cach": [1, 3, 9, 10, 11], "cache_evalu": [9, 18], "cache_ok": 16, "cache_root": 11, "calcualt": 10, "calcul": [1, 3, 10, 11, 12, 15, 18], "calculate_num_initialization_tri": 10, "call": [1, 2, 3, 5, 9, 10, 11, 14, 15, 16, 18], "callabl": [1, 2, 3, 9, 10, 11, 12, 14, 15, 16, 18], "callable_from_refer": 18, "callable_to_refer": 18, "callable_with_kwarg": 18, "callback": [11, 15], "can": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 15, 16, 17, 18], "can_generate_candid": 0, "cancer": 9, "candid": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 15, 18], "candidate_generator_funct": 15, "candidate_generator_kwarg": 15, "candidate_metadata": [10, 11], "candidate_metadata_by_arm_signatur": [1, 3], "candidate_queue_maxs": 15, "candidate_s": 18, "candidate_set": 18, "candidate_tri": 15, "cangeneratecandidatesanalysi": 0, "cannot": [0, 1, 3, 5, 10, 11, 12, 15, 18], "canon": [3, 10], "canonical_nam": [3, 15], "cap": [10, 18], "capabl": [0, 10], "capac": [1, 3, 15, 18], "caption": 12, "captur": [1, 3], "carbon": 9, "card": [0, 16], "card_nam": 0, "cardin": [3, 10], "care": [2, 11, 18], "carefulli": 16, "carlo": [11, 18], "carri": 3, "cartesian": 2, "case": [1, 2, 3, 4, 5, 10, 11, 15, 18], "cast": [1, 3, 15, 18], "cast_arm": [1, 3], "cast_observation_featur": 3, "cat": 18, "cat_feature_dict": 11, "catch": 18, "categor": [1, 3, 9, 10], "categori": 2, "categorical_featur": [3, 10, 11], "cater": 18, "caught": 18, "caus": [1, 3, 18], "ceil": 10, "cell": [3, 12, 18], "center": 0, "certain": [1, 3, 4, 10, 16], "certainli": 2, "cfg": 14, "chain": 11, "chainedinputtransform": [11, 16, 18], "chainedoutcometransform": [11, 16], "chanc": 10, "chang": [1, 3, 9, 10, 11, 12, 15, 16, 18], "charact": [1, 3], "chart": [12, 15], "check": [0, 1, 2, 3, 4, 6, 8, 10, 11, 14, 15, 18], "check_a000": 18, "check_all_parameters_pres": [1, 3], "check_cardin": 11, "check_cast": 18, "check_circular": 10, "check_dupl": 11, "check_has_multi_objective_and_data": 10, "check_membership": [1, 3], "check_message_contain": 18, "check_objective_thresholds_match_object": 3, "check_outcome_dataset_match": 11, "check_param_constraint": 11, "check_typ": [1, 3], "checked_cast": 18, "checked_cast_dict": 18, "checked_cast_list": 18, "checked_cast_opt": 18, "checked_cast_to_tupl": 18, "chemic": 9, "chemistri": [8, 16], "chemistrydata": 9, "chemistrymetr": [9, 16], "chemistryproblemtyp": [9, 16], "child": 18, "children": 16, "choic": [1, 3, 10, 12, 15, 16], "choice_encod": 16, "choice_parameter_to_dict": 16, "choiceencod": [10, 16], "choiceparamet": [1, 3, 10, 12, 15, 16, 18], "choiceparameterconfig": 13, "choicetonumericchoic": [10, 16], "chong": 9, "choos": [2, 10, 11, 12, 15], "choose_botorch_acqf_class": 11, "choose_generation_strategi": [10, 15], "choose_generation_strategy_kwarg": 15, "choose_model_class": 11, "chosen": [10, 11, 15], "ci": [0, 10, 12], "ci_level": 12, "circl": 0, "circular": 18, "cl": 3, "clamp": 11, "clamp_observation_featur": 10, "clamp_to_target": 11, "clamp_tol": 11, "class": [0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "class_": [16, 18], "class_decoder_registri": [2, 3, 15, 16, 18], "class_encoder_registri": [15, 16], "class_from_json": 16, "class_to_registri": 16, "class_to_sqa_class": 16, "class_typ": 16, "classdecor": 18, "classdef": 18, "classif": [9, 18], "classifi": 2, "classmethod": [1, 2, 3, 4, 9, 11, 15, 16, 17, 18], "clear": 2, "clear_nam": [1, 3], "client": 8, "clip": 10, "clip_mean": 10, "clock": 18, "clone": [1, 3, 9, 10, 18], "clone_reset": [3, 10, 11, 18], "clone_to": [1, 3], "clone_with": [1, 3], "clone_with_arg": [1, 3], "clone_with_transformed_paramet": [1, 3], "clone_without_metr": 3, "cloned_experiment_": [1, 3], "close": [15, 18], "closest": 10, "closestlookupdict": 10, "closur": [10, 11], "clusert": 0, "cluster": [0, 18], "cnn": [2, 18], "cnn_util": 18, "code": [5, 11, 18], "coeffici": [9, 10, 11, 15, 18], "coefficient_of_determin": [10, 15, 18], "coerc": 18, "coin": 18, "col": 18, "collect": [0, 1, 2, 3, 4, 10, 11, 15, 16, 18], "color": [0, 12], "color_map": 12, "color_metr": 12, "color_paramet": 12, "column": [0, 1, 3, 4, 11, 12, 15, 16, 18], "column_data_typ": 3, "combin": [1, 3, 9, 10, 11, 12, 15, 18], "combine_with_last_data": [1, 3], "come": [2, 4, 10, 15, 17], "common": [1, 2, 3, 5, 8, 11, 16], "commonli": [11, 18], "commun": [3, 11], "compactli": 11, "compar": [0, 1, 2, 3, 10, 12, 15, 18], "compare_to_baselin": 15, "compare_to_baseline_impl": 15, "comparison": [1, 3, 12, 15, 18], "comparison_arm_nam": 15, "comparison_arm_valu": 15, "comparison_list": 15, "comparison_op": 18, "comparisonop": [1, 3, 16, 18], "compat": [1, 2, 5, 10, 11, 12, 16, 18], "compil": 10, "complet": [1, 2, 3, 4, 5, 6, 9, 10, 14, 15, 17, 18], "complete_tri": [1, 3, 15], "completed_successfulli": 3, "completed_tri": [1, 3], "completion_criteria": 10, "completion_criterion": 15, "completon": 15, "complex": [2, 11, 18], "compli": 10, "compon": [1, 3, 11, 14, 18], "component_const_param": 14, "compos": [1, 3, 10, 18], "compose_annot": 12, "composit": 10, "compris": [1, 3], "comput": [0, 1, 2, 3, 4, 9, 10, 11, 12, 15, 18], "compute_analys": 15, "compute_derivatives_from_model_list": 18, "compute_diagnost": [10, 11], "compute_maximum_map_valu": 15, "compute_model_fit_metr": 18, "compute_model_fit_metrics_from_modelbridg": 10, "compute_posterior_pareto_fronti": 12, "compute_result": 0, "compute_running_feasible_optimum_df": 12, "compute_score_trac": 2, "compute_sobol_indices_from_model_list": 18, "compute_standardization_paramet": 10, "concaten": [1, 3], "concentr": 9, "conceptu": [2, 10], "concern": 5, "concis": 3, "conclud": [4, 15, 18], "concret": 16, "concurr": 18, "condit": [10, 11, 18], "confid": 12, "config": [1, 2, 3, 5, 6, 10, 11, 12, 15, 16, 18], "configur": [0, 1, 2, 3, 5, 10, 11, 15, 16, 18], "confirm": 18, "conflict": 16, "conflicting_noiseless": [10, 18], "conform": [1, 3], "connect": [5, 12, 16], "consid": [1, 2, 3, 4, 9, 10, 11, 12, 15, 18], "consider_nans_equ": 18, "consist": [7, 10, 15, 16, 18], "consistency_exactly_on": 16, "consolidate_kwarg": 18, "constant": [8, 10], "constant_nois": 18, "constitu": 18, "constrain": [1, 3, 18], "constrain_search_spac": 18, "constraint": [0, 1, 2, 3, 6, 7, 10, 11, 12, 13, 15, 16], "constraint_dict": [1, 3, 16], "constraint_from_str": 15, "constraint_satisfact": 6, "constraints_viol": 0, "construct": [1, 2, 3, 4, 10, 11, 12, 13, 15, 16, 18], "construct_acquisition_and_optimizer_opt": 11, "construct_arm": [1, 3], "construct_input": 11, "construct_new_search_spac": 10, "constructor": [1, 10, 11, 15, 16, 18], "consum": [0, 10, 16], "consumpt": 0, "cont_x_tran": 4, "contain": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18], "containin": [1, 3], "contains_constrained_integ": 10, "content": [1, 3, 15, 18], "context": [10, 11, 12, 15, 18], "context1": [10, 11], "context2": [10, 11], "context_cat_featur": 11, "context_emb_featur": 11, "context_sacbo": 10, "context_stratum": 12, "context_weight_dict": 11, "contextu": [4, 6, 11, 16, 18], "contextual_sacbo": 10, "contextualdataset": 10, "contigu": [10, 18], "continu": [1, 3, 5, 10, 11, 13, 15, 18], "contour": 15, "contour_config_to_trac": 12, "contribut": [1, 3, 10, 11, 18], "control": [1, 2, 3, 10, 11, 12, 15, 18], "control_as_const": [10, 18], "contruct": [10, 11], "conveni": [11, 15], "convent": [2, 15], "converg": 10, "convers": [1, 3, 16, 18], "convert": [3, 10, 11, 12, 15, 16, 18], "convert_metric_nam": 16, "convert_mt_observ": 10, "convert_to_block_design": 11, "convert_to_timestamp": 18, "convertmetricnam": [10, 16], "convolut": 18, "coordin": 8, "copi": [1, 2, 3, 9, 10, 15, 16, 18], "copy_db_id": 16, "copy_doc": 18, "copy_run_metadata_kei": [1, 3], "copy_structure_with_df": 3, "coral": 12, "core": [1, 2, 8, 9, 10, 11, 14, 15, 16], "core_encod": 18, "core_stub": 18, "correct": [3, 16, 18], "correctli": [2, 10, 11, 16], "correl": 10, "correspond": [1, 2, 3, 10, 11, 12, 13, 15, 16, 18], "corrupt": 15, "cost": 6, "cost_aware_util": 18, "cost_intercept": 18, "costli": 4, "could": [1, 2, 3, 10, 15], "coull": 18, "count": [2, 15], "coupl": [9, 10, 14, 16], "cours": [1, 3, 10, 15, 18], "cov": [3, 10, 11], "cov_1_2": 15, "cov_ln": 10, "cov_ln_": 10, "cov_mean": 18, "cov_n": 10, "cov_n_": 10, "covar_module_argpars": 11, "covar_module_class": 11, "covar_module_kwarg": 11, "covar_module_opt": 11, "covar_module_prior": 11, "covari": [1, 3, 10, 11, 15, 18], "covariance_matrix": 3, "cover": 18, "cpu": 10, "craft": 11, "crash": [1, 3], "creat": [1, 2, 3, 9, 10, 11, 12, 14, 15, 16, 17, 18], "create_all_t": 16, "create_engin": 16, "create_experi": [10, 15], "create_mysql_engine_from_cr": 16, "create_mysql_engine_from_url": 16, "create_problem_from_botorch": 2, "create_test_engin": 16, "creation": [1, 3, 10, 15, 17, 18], "creator": 16, "criteria": [10, 15, 16], "criterion": [10, 15, 16], "critic": 0, "cross": [5, 8, 11, 12], "cross_valid": [0, 10, 11], "cross_validate_by_tri": 10, "crossvalidationplot": 0, "cube": 10, "cuda": 18, "cumul": [2, 3, 15], "cumulative_best": 9, "current": [0, 1, 2, 3, 5, 10, 11, 14, 15, 16, 18], "current_generator_run_limit": 10, "current_nod": 10, "current_node_nam": 10, "current_step": 10, "current_step_index": 10, "current_timestamp_in_milli": 18, "current_valu": 18, "curv": [3, 4, 8, 15], "custom": [1, 2, 3, 5, 10, 11, 12, 14, 15, 16, 18], "custom_arm_ord": 12, "custom_arm_order_nam": 12, "custom_data_class": 3, "custom_metr": 18, "customiz": 11, "customtestmetr": 18, "customtestrunn": 18, "cutoff": 10, "cv": [9, 10, 12], "cv_result": [10, 12], "cv_test_point": 10, "cv_training_data": 10, "cvdiagnost": 10, "cvnotsupportederror": 5, "cvresult": [10, 12], "cycl": 15, "d": [2, 3, 4, 9, 10, 11, 12, 18], "dai": [0, 11], "data": [0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 15, 16, 18], "data_and_evaluations_from_raw_data": 3, "data_attacher_funct": 15, "data_attacher_kwarg": 15, "data_by_tri": [1, 3], "data_by_trial_json": 16, "data_constructor": [1, 3, 16], "data_from_json": 16, "data_from_sqa": 16, "data_load": 18, "data_path": 18, "data_provid": 5, "data_provider_error": 5, "data_selector": 12, "data_sqa": 16, "data_to_dict": 16, "data_to_sqa": 16, "data_typ": 3, "databas": [1, 3, 5, 15, 16, 17, 18], "databaseconfig": 13, "dataclass": [2, 4, 11], "datafram": [0, 1, 2, 3, 4, 10, 12, 15, 18], "dataframe_equ": 18, "dataload": [2, 18], "dataprovid": 5, "dataprovidererror": 5, "datarequirederror": [5, 10], "dataset": [2, 9, 10, 11, 18], "datatyp": [1, 3, 16], "date": [10, 18], "datetim": [1, 3, 12, 16, 18], "datetime_equ": 18, "daulton": [2, 11], "daulton2020qehvi": 11, "daulton2021nehvi": 11, "daulton2022bopr": 2, "days_till_fail": 0, "db": [15, 18], "db_id": 18, "db_set": 15, "db_settings_set": 15, "dbapi": 16, "dbset": [15, 16], "de": 10, "dead": [1, 3, 15], "debug": [0, 15], "debug_log_run_metadata": 15, "decid": [2, 4, 6, 18], "decis": [4, 6, 12, 15], "declar": [6, 14], "declarative_bas": 16, "decod": [1, 5, 10, 15, 18], "decoder_registri": [2, 3, 15, 16, 18], "decomposit": 11, "decor": [3, 10, 11, 15], "decorate_cal": 18, "decorate_class": 18, "decorate_priv": 18, "decreas": [11, 12, 18], "dedupl": [1, 3, 5, 10, 11], "deduplicate_by_column": 3, "deem": [3, 18], "deep": [1, 3], "def": [10, 11, 14, 15, 18], "default": [0, 1, 2, 3, 4, 9, 10, 11, 12, 15, 16, 18], "default_data_constructor": 3, "default_data_typ": [1, 3], "default_ehvi_batch_limit": 10, "default_fetch_kwarg": 15, "default_from_json": 16, "default_kde_bandwidth": 18, "default_model_gen_opt": 10, "default_model_kwarg": 10, "default_n": 3, "default_op": 18, "default_rel": 12, "default_return_on_suppres": 18, "default_return_on_suppress": 18, "default_runn": [3, 15], "default_to_dict": 16, "default_tri": 3, "default_trial_typ": [1, 3, 15], "default_valu": 3, "defaultdict": 10, "defer": [10, 16], "defin": [1, 2, 3, 5, 9, 10, 11, 15, 16, 18], "definit": [1, 3, 10, 12, 15, 16], "degre": 15, "delai": 10, "deleg": [10, 14], "delet": [1, 3], "delete_experi": 16, "delete_generation_strategi": 16, "deliv": 15, "delta": [10, 18], "delta_t": 18, "denomin": 18, "denot": [1, 3, 11], "densiti": [12, 18], "depend": [1, 2, 3, 4, 5, 7, 9, 10, 11, 15, 16, 18], "dependent_paramet": 13, "deploi": [1, 3, 14, 15, 18], "deploy": [1, 3, 14, 15, 18], "deployed_job_id": 17, "deployed_nam": [1, 3], "deprec": [1, 10, 11, 16], "deprecatedtransformmixin": 10, "derelativ": 16, "derelativize_bound": 10, "derelativize_optimization_config_with_raw_status_quo": 10, "derelativize_with_raw_status_quo": 10, "deriv": [3, 5], "derivative_gp": 18, "derivative_measur": 18, "descend": [10, 16, 18], "describ": [1, 2, 3, 9, 10, 11, 15], "descript": [1, 2, 3, 11, 13, 15, 16], "deseri": [16, 18], "deserialize_init_arg": [2, 3, 18], "deserialize_st": 11, "design": [1, 2, 3, 4, 9, 10, 11, 12, 15, 18], "desir": [2, 12, 15, 18], "detail": [1, 3, 9, 10, 11, 15, 18], "detect": [1, 3, 15, 18], "determin": [0, 1, 2, 3, 4, 6, 10, 11, 12, 15, 18], "determinist": [2, 3, 9, 18], "deterministc": 2, "deterministic_partit": 18, "dev": [1, 3, 10, 15, 18], "develop": [3, 10], "deviat": [2, 10, 18], "devic": [2, 10, 11, 15, 18], "devid": 18, "df": [0, 1, 3, 4, 12, 18], "df1": 18, "df2": 18, "df_hash": 3, "diagnos": 10, "diagnost": [10, 11], "diagon": 3, "dialect": 16, "dict": [0, 1, 2, 3, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "dict_of_dict_of_param": 2, "dictionari": [1, 2, 3, 4, 7, 10, 11, 12, 14, 15, 16, 18], "did": 15, "did_not_complet": 3, "differ": [1, 2, 3, 5, 6, 7, 10, 11, 12, 14, 15, 18], "differenti": 11, "difficult": [1, 3], "digest": 10, "digit": [1, 3, 9, 15], "dim": [2, 3, 10, 11, 18], "dimens": [0, 1, 2, 3, 4, 11, 13, 18], "dimension": [11, 17, 18], "dir": 14, "direct": [1, 3, 9, 11, 12, 15, 18], "direct_aryl": 9, "directli": [1, 3, 10, 11, 15, 18], "directori": [11, 18], "disabl": [1, 3, 10, 18], "disable_logg": 18, "disable_probar": 10, "disable_progbar": 10, "discard": [10, 18], "discourag": [10, 18], "discret": [1, 2, 3, 8, 9, 12, 13, 18], "discrete_choic": [3, 10, 11], "discrete_featur": 18, "discretemodel": [10, 11], "discretemodelbridg": 10, "discuss": 3, "dispatch": [3, 15, 18], "dispatch_util": 10, "displai": [0, 12, 15], "display_card": 0, "dist": 16, "distinguish": [5, 10], "distribut": [2, 3, 10, 11, 12, 14, 16, 18], "distribute_repl": 2, "distribution_class": 3, "distribution_paramet": 3, "distribution_sampl": [3, 10], "diverg": 15, "divis": 18, "do": [1, 2, 3, 4, 6, 10, 11, 12, 15, 16, 18], "do_forward_fil": 4, "do_not_set_existing_value_to_nul": 16, "doc": [15, 18], "docstr": [3, 11], "docstring_check": 18, "docstringcheck": 18, "docstringcheckervisitor": 18, "document": [1, 3, 9], "doe": [0, 1, 2, 3, 7, 10, 11, 12, 14, 15, 16, 18], "doesn": [3, 4, 5, 12, 16], "domain": [1, 3, 10, 16, 18], "domain_repr": [1, 3], "domaintyp": 16, "domin": [11, 18], "don": [1, 3, 15, 16, 18], "done": [1, 3, 4, 10, 12, 15, 18], "doubl": 18, "down": [1, 3, 10, 11, 15, 18], "downcast": 3, "download": 18, "downsampl": 18, "downsample_pct": 18, "downsample_pct_test": 18, "draw": [11, 12], "driver": 16, "drop": [1, 3, 15], "dropdown": 12, "dt1": 18, "dt2": 18, "dtype": [2, 3, 4, 9, 10, 11, 12, 18], "due": [3, 4, 5, 15, 16, 18], "dummi": [14, 18], "dummy_metadata": 14, "dummyearlystoppingstrategi": 18, "dummyglobalstoppingstrategi": 18, "dummytestfunct": 18, "duplic": [10, 11, 16, 18], "durat": [3, 10], "dure": [1, 3, 5, 6, 10, 11, 13, 15], "dynam": 10, "e": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 14, 15, 16, 17, 18], "each": [0, 1, 2, 3, 9, 10, 11, 12, 14, 15, 16, 18], "eachoth": 0, "earli": [2, 3, 4, 6, 12, 15, 16, 18], "earlier": 18, "early_stop": [1, 3, 8, 15, 16], "early_stop_tri": 18, "early_stopping_strategi": 15, "early_stopping_strategy_cl": 17, "earlystop": 8, "earlystoppingconfig": 15, "earlystoppingtrainingdata": 4, "eas": 10, "easi": [10, 17], "eb": 10, "echo": 16, "edg": 10, "edu": 10, "effec": 0, "effect": [1, 3, 8, 9, 10, 16, 18], "effici": [1, 3, 11, 15], "effort": 10, "ehvi": 10, "ei": 10, "either": [0, 1, 2, 3, 10, 11, 15, 16, 17, 18], "elaps": [1, 3, 15], "element": [2, 3, 4, 9, 10, 11, 15, 18], "elicit": 15, "elicitation_funct": 15, "elicitation_function_kwarg": 15, "elig": 4, "els": [1, 3, 10, 11, 16, 18], "email": 18, "emb": 18, "embds_feature_dict": 11, "embed": 11, "embed_higher_dimens": 2, "embs_dim_list": 11, "embs_feature_dict": 11, "empir": [2, 10, 11, 18], "empirical_bayes_thompson": 10, "empiricalbayesthompsonsampl": 11, "empti": [1, 3, 4, 10, 11, 12, 14, 15], "enabl": [10, 11, 16], "encapsul": [1, 3], "enclos": 3, "encod": [1, 3, 5, 10, 11, 18], "encoded_label": 10, "encoder_registri": [15, 16], "encount": [1, 3, 15, 18], "encourag": 10, "end": [0, 3, 11, 15, 16, 18], "end_dat": [1, 3], "end_tim": [3, 10, 18], "enforc": [10, 15], "enforce_immutable_search_space_and_opt_config": 15, "enforce_num_tri": 10, "enforce_sequential_optim": [10, 15], "engin": [2, 5, 11, 16], "enough": [2, 15], "enqueu": 15, "enrol": 18, "ensur": [1, 2, 3, 10, 11, 15, 16, 18], "ensure_ascii": 10, "entail": [3, 15], "entir": [10, 16, 18], "entri": [2, 3, 10, 11, 18], "entropi": 18, "entropy_of_observ": 18, "enum": [1, 3, 9, 10, 12, 13, 15, 16, 18], "enumer": [0, 1, 3, 9, 12, 15, 16], "enumerate_discrete_combin": 11, "environ": [0, 10, 15, 18], "environment": [3, 10, 16], "environmental_rang": 16, "environmental_sampl": [3, 10], "environmental_vari": 3, "environmental_variable_from_sqa": 16, "environmental_variable_to_sqa": 16, "ep": 18, "ephemer": [3, 11], "eq_func": 18, "equal": [1, 2, 3, 10, 11, 16], "equality_constraint": 11, "equality_typecheck": 18, "equival": [2, 15], "eriksson": [2, 11], "err": [1, 3, 18], "error": [1, 2, 3, 5, 10, 11, 12, 15, 16, 18], "error_if_failure_rate_exceed": 15, "error_info": 5, "error_margin": 0, "errorbar": 12, "errorid": 18, "escap": 18, "especi": [15, 17], "essenti": [1, 3, 10, 15], "estim": [4, 10, 11, 12, 15, 18], "estimate_early_stopping_sav": [4, 15], "estimate_global_stopping_sav": 15, "estimated_early_stopping_sav": 17, "estimated_global_stopping_sav": 17, "et": [9, 18], "eta": 11, "etc": [1, 2, 3, 4, 10, 11, 15, 18], "evalu": [1, 2, 3, 4, 6, 9, 10, 11, 12, 15, 18], "evaluate_acquisition_funct": [10, 11], "evaluate_oracl": 2, "evaluate_tru": [2, 18], "evaluatetru": 10, "evaluation_funct": [1, 9, 15], "evalute_funct": 18, "even": [1, 3, 4, 10, 15, 16, 18], "evenli": 3, "event": [3, 15, 16, 17], "eventu": [3, 10], "ever": [1, 3], "everi": [0, 1, 2, 3, 10, 11, 12, 15, 16, 18], "everyth": [3, 11, 18], "evolut": 15, "ex": [0, 1, 3, 10, 16], "exact": [10, 11, 12, 15, 18], "exact_marginal_log_likelihood": [11, 16], "exact_match": 11, "exactli": [10, 14, 15, 16], "exactly_one_field": 16, "exactmarginalloglikelihood": [11, 16], "exampl": [0, 2, 3, 4, 10, 11, 12, 14, 15, 18], "exc": 18, "exce": [2, 15], "exceed": [10, 15], "except": [0, 1, 2, 3, 8, 10, 11, 15, 16, 18], "exception": [0, 18], "exception_typ": 18, "excess": 15, "exclud": [1, 3, 12, 18], "exclude_field": 18, "excluded_column": 3, "excluded_metric_nam": 3, "execut": [1, 2, 3, 15, 18], "execute_with_timeout": 18, "exhaust": [15, 18], "exist": [1, 3, 10, 11, 12, 15, 16, 18], "existing_point": 11, "existing_sqa_experiment_id": 16, "exit": [15, 18], "exp": [10, 15, 18], "exp_df": 12, "exp_nam": 16, "exp_to_df": 15, "expand": [7, 12, 18], "expand_model_spac": 10, "expans": [7, 18], "expect": [0, 1, 2, 3, 4, 6, 10, 11, 14, 15, 18], "expected_acqf_v": 18, "expected_acquisition_valu": 18, "expectedimprov": 16, "expecting_data": 3, "expeir": [1, 3, 16], "expens": [10, 12, 18], "experi": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "experiment": [3, 10, 15, 18], "experiment_completed_record": 17, "experiment_created_record": 17, "experiment_data_to_sqa": 16, "experiment_from_json": 16, "experiment_from_sqa": 16, "experiment_id": 16, "experiment_nam": [1, 15, 16, 17, 18], "experiment_sqa": 16, "experiment_storage_id": 2, "experiment_to_dict": 16, "experiment_to_sqa": 16, "experiment_total_concurrent_arm": 18, "experiment_typ": [1, 3, 15, 17], "experiment_type_enum": 16, "experiment_with_updated_properti": 16, "experimental_metric_ev": 18, "experimentcompletedrecord": 17, "experimentconfig": 13, "experimentcreatedrecord": 17, "experimentnotfounderror": 5, "experimentnotreadyerror": 5, "expir": 15, "explain": [3, 10], "explan": [1, 3], "explicit": [10, 16], "explicitli": [16, 18], "explor": [0, 3, 11, 13], "exploration_concurr": 3, "exponenti": 15, "expos": 15, "exposures_unavail": 5, "express": [1, 3], "extend": [3, 10, 12, 18], "extend_pending_observ": 3, "extend_rang": 12, "extens": [2, 18], "extern": [1, 3, 11, 15, 18], "external_generation_nod": 10, "externalgenerationnod": 10, "extra": [2, 10, 15], "extra_column_nam": 3, "extra_column_typ": 3, "extra_kwarg": [1, 3], "extract": [2, 3, 10, 11, 12, 15, 16, 18], "extract_arm_predict": 3, "extract_init_arg": 18, "extract_objective_threshold": 10, "extract_objective_weight": 10, "extract_outcome_constraint": 10, "extract_parameter_constraint": 10, "extract_pending_observ": 3, "extract_risk_measur": [3, 10], "extract_robust_digest": 10, "extract_search_space_digest": [3, 10], "extract_y_from_data": 15, "f": [9, 10, 11, 12, 18], "f_a_b_abi": 18, "face": 16, "facilit": [15, 17], "factor": [1, 3, 12, 18], "factori": [1, 2, 3, 5, 8, 11, 13, 15, 16, 18], "factorialmetr": [9, 16, 18], "factory_fn": 2, "factory_funct": 10, "factory_kwarg": 2, "factoryfunctionmodelspec": 10, "fail": [0, 1, 2, 3, 5, 10, 11, 14, 15, 18], "failed_abandoned_trial_indic": 15, "failed_reason": [3, 16], "failur": [0, 3, 5, 15, 18], "failure_r": 18, "failure_reason": 0, "failurerateexceedederror": 15, "fall": [1, 2, 3, 4, 7, 10, 11, 15, 16, 18], "fallback": [1, 3, 10, 18], "fallback_to_sample_polytop": [10, 11], "fals": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 15, 16, 18], "far": [2, 6, 10, 15], "farrel": 9, "fashion": 18, "fast": 11, "fast_return": 18, "faster": [3, 18], "favor": 11, "feasibility_mc_sampl": 11, "feasibl": [0, 3, 6, 10, 11, 12], "feasible_hypervolum": 10, "feasible_threshold": 11, "featur": [0, 3, 4, 10, 11, 15, 16, 18], "feature_import": [10, 11, 12, 15], "feature_index": 11, "feature_nam": [3, 11, 18], "fed": 3, "fetch": [1, 2, 3, 9, 12, 15, 16, 18], "fetch_data": [1, 3, 9], "fetch_data_prefer_lookup": [1, 3], "fetch_data_result": [1, 3], "fetch_experiment_data_multi": [1, 3], "fetch_kwarg": 15, "fetch_multi_group_by_metr": [1, 3], "fetch_trial_data": [1, 2, 3, 9, 18], "fetch_trial_data_multi": [1, 3], "fetch_trials_data": [1, 3], "fetch_trials_data_result": [1, 3], "few": 15, "fewer": [3, 15], "fidel": [1, 2, 3, 11, 15], "fidelity_featur": [3, 10, 11, 18], "fidelity_feature_1": 3, "fidelity_feature_n": 3, "fidelity_model_id": 11, "fidelity_weight": 18, "field": [0, 1, 3, 4, 10, 11, 12, 15, 16, 18], "fig": 15, "figur": [0, 12, 15], "fikenam": 18, "file": [11, 15, 16], "filehandl": 18, "filenam": 18, "filepath": [15, 16, 18], "fill": [3, 4, 10, 11, 15], "fill_missing_paramet": 16, "fill_missing_thresholds_from_nadir": 15, "fill_non": 10, "fill_val": 18, "fill_valu": 10, "fillmissingparamet": [10, 16], "filter": [1, 3, 10, 11, 12, 18], "filter_constraints_and_fixed_featur": 11, "filter_kwarg": 18, "filter_trials_by_typ": 3, "final": [3, 4, 10, 12, 15, 18], "final_progression_onli": 15, "final_transform": 10, "find": [1, 2, 3, 10, 11, 12, 15, 16, 18], "finish": 5, "finit": 10, "first": [1, 2, 3, 4, 10, 12, 15, 16, 18], "first_metric_nam": 18, "first_order_idc": 18, "first_order_idcs_btsp": 18, "first_order_indic": 18, "fisher": [10, 12], "fit": [0, 1, 2, 3, 4, 10, 11, 12, 15], "fit_abandon": [1, 3, 10], "fit_botorch_model": 11, "fit_data": 12, "fit_gpytorch_ml": 18, "fit_metrics_dict": [10, 18], "fit_model": 15, "fit_on_init": 10, "fit_out_of_design": [10, 11], "fit_tim": [1, 2, 3, 12], "fit_tracking_metr": 10, "fitted_model": 10, "fitted_model_bridg": 10, "five": 15, "fix": [1, 3, 10, 11, 12, 15, 16, 18], "fixed_featur": [10, 11, 12, 15, 18], "fixed_feature_indic": 11, "fixed_parameter_to_dict": 16, "fixed_period_length": 11, "fixed_valu": 16, "fixedfeatur": 15, "fixedparamet": [1, 3, 10, 16, 18], "flag": [1, 3, 10, 11, 12, 15, 16], "flake8": 8, "flake8_plugin": 18, "flatten": [3, 10, 17], "flatten_observation_featur": 3, "flexibl": [10, 16], "flip": 18, "float": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "float32": 18, "float64": [3, 10, 18], "floatlik": 3, "flow": 9, "fmax": 18, "fmin": 18, "focu": [10, 12], "fold": [0, 9, 10, 11], "follow": [0, 1, 2, 3, 5, 9, 10, 11, 12, 14, 15, 18], "foo": 14, "forc": [1, 3, 10, 11, 15, 18], "force_candidate_gener": 15, "force_check": 15, "force_init": 16, "force_nam": 18, "force_random_search": 10, "force_refit": 15, "foreign": 16, "forest": 11, "form": [0, 1, 3, 10, 11, 12, 15, 18], "format": [0, 1, 4, 8, 9, 10, 11, 12, 15, 17, 18], "format_constraint_violated_prob": 0, "format_parameters_for_effects_by_arm_plot": 0, "formatting_util": 3, "former": [2, 18], "formul": 15, "forth": 12, "forward": [2, 4, 10, 11, 15, 18], "forward_fil": 4, "found": [1, 2, 3, 5, 10, 12, 15, 18], "four": 10, "frac_nonnul": 3, "frac_random": 18, "fraction": [1, 2, 3, 4, 6, 15], "frame": [10, 12], "framework": 3, "free": 11, "frequent": 3, "friendli": [5, 18], "from": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 14, 15, 16, 17, 18], "from_arm": 3, "from_ax_cli": 17, "from_benchmark_result": 2, "from_botorch": 18, "from_early_stopping_strategi": 4, "from_evalu": 3, "from_experi": 17, "from_fidelity_evalu": 3, "from_generation_strategi": 17, "from_json_snapshot": 15, "from_map_evalu": 3, "from_multipl": 3, "from_multiple_data": [1, 3], "from_multiple_map_data": 3, "from_registry_bundl": 16, "from_schedul": 17, "from_stat": 18, "from_stored_experi": 15, "frombotorch": 18, "front": [10, 12, 15, 18], "frontier": [0, 10, 11, 12, 15], "frontier_evalu": [10, 11], "frontier_list": 12, "frontier_observ": 10, "fsspecresulttrack": 9, "full": [1, 2, 3, 10, 11, 15, 18], "full_parameter": [3, 18], "full_run": [1, 15], "fullfactorialgener": 11, "fulli": [2, 4, 6, 11, 15, 18], "fully_bayesian": 16, "fully_bayesian_multitask": 16, "func": [3, 18], "func_enum": 18, "function": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16], "functiondef": 18, "functool": [10, 18], "further": [1, 3, 4], "futur": [1, 3, 5, 8, 11], "g": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 14, 15, 16, 18], "g_i": 10, "gain": 6, "gamma": 2, "gammaprior": [11, 16, 18], "gather": [1, 4, 15, 18], "gaussian": [9, 10, 11, 15], "gaussian_likelihood": 16, "gaussianlikelihood": 16, "gaussianlinkmean": 18, "gaussianmixtureposterior": 11, "gen": [1, 3, 10, 11, 12, 18], "gen_arm": 10, "gen_for_multiple_trials_with_multiple_model": [3, 10, 18], "gen_metadata": [1, 3, 10, 11], "gen_tim": [1, 2, 3, 12], "gen_unconstrain": 11, "gen_with_multiple_nod": 10, "geneer": 0, "gener": [1, 2, 3, 7, 8, 9, 11, 12, 13, 15, 16, 18], "generate_all_input_matrix": 18, "generate_candid": 15, "generate_model_space_decomposit": 11, "generated_point": 11, "generation_method": [0, 12, 15], "generation_nod": [0, 10, 16], "generation_node_from_json": 16, "generation_node_input_constructor": 10, "generation_node_json": 16, "generation_node_nam": [1, 3], "generation_node_to_dict": 16, "generation_step": 16, "generation_step_from_json": 16, "generation_step_index": [1, 3, 16], "generation_step_json": 16, "generation_step_to_dict": 16, "generation_strategi": [0, 1, 2, 5, 10, 15, 16, 17, 18], "generation_strategy_created_record": 17, "generation_strategy_from_json": 16, "generation_strategy_from_sqa": 16, "generation_strategy_interfac": [3, 15], "generation_strategy_json": 16, "generation_strategy_nam": 17, "generation_strategy_to_dict": 16, "generation_strategy_to_sqa": 16, "generationnod": [0, 10, 16, 18], "generationstep": [1, 2, 3, 5, 10, 16, 18], "generationstrategi": [0, 1, 2, 3, 10, 15, 16, 17, 18], "generationstrategycomplet": 5, "generationstrategyconfig": 13, "generationstrategycreatedrecord": 17, "generationstrategyinterfac": [0, 10, 15, 18], "generationstrategymisconfiguredexcept": 5, "generationstrategyrepeatedpoint": [5, 10], "generator_change_color": 12, "generator_run": [1, 3, 10, 12, 16, 18], "generator_run_from_json": 16, "generator_run_from_sqa": 16, "generator_run_id": 16, "generator_run_limit": 10, "generator_run_reduced_st": 16, "generator_run_sqa": 16, "generator_run_struct": [1, 3, 16], "generator_run_to_dict": 16, "generator_run_to_sqa": 16, "generator_run_typ": [1, 3], "generator_run_type_enum": 16, "generator_runs_dict": 12, "generatorrun": [0, 1, 10, 12, 16, 18], "generatorrunstruct": [1, 3, 16], "generatorruntyp": [3, 16], "generic_equ": 18, "generic_plotli": 12, "genericdeterministicmodel": 11, "genericnoisyfunctionmetr": 9, "genetor": [1, 3], "genresult": 10, "geq": [3, 18], "get": [0, 1, 2, 3, 5, 9, 10, 11, 12, 15, 16, 18], "get_abandoned_arm": 18, "get_acqf": 11, "get_acquisition_function_typ": 18, "get_acquisition_typ": 18, "get_aggregated_benchmark_result": 18, "get_and_early_stopping_strategi": 18, "get_and_fit_model": [10, 11], "get_arm": 18, "get_arm_weights1": 18, "get_arm_weights2": 18, "get_arms_from_dict": 18, "get_auxiliary_experi": 18, "get_batch_initial_condit": 11, "get_batch_tri": 18, "get_batch_trial_with_repeated_arm": 18, "get_benchmark_result": 18, "get_benchmark_runn": 2, "get_benchmark_scheduler_opt": 2, "get_best_by_raw_object": 15, "get_best_by_raw_objective_with_trial_index": 15, "get_best_paramet": [2, 15], "get_best_parameters_from_model_predict": 15, "get_best_parameters_from_model_predictions_with_trial_index": 15, "get_best_parameters_with_trial_index": 15, "get_best_point": [1, 15], "get_best_raw_objective_point": 15, "get_best_raw_objective_point_with_trial_index": 15, "get_best_tri": 15, "get_botorch": 10, "get_botorch_model": 18, "get_botorch_model_with_default_acquisition_class": 18, "get_botorch_model_with_surrogate_spec": 18, "get_botorch_objective_and_transform": 11, "get_branin_arm": 18, "get_branin_data": 18, "get_branin_data_batch": 18, "get_branin_data_multi_object": 18, "get_branin_experi": 18, "get_branin_experiment_with_multi_object": 18, "get_branin_experiment_with_status_quo_tri": 18, "get_branin_experiment_with_timestamp_map_metr": 18, "get_branin_metr": 18, "get_branin_multi_object": 18, "get_branin_multi_objective_optimization_config": 18, "get_branin_object": 18, "get_branin_optimization_config": 18, "get_branin_outcome_constraint": 18, "get_branin_search_spac": 18, "get_branin_with_multi_task": 18, "get_chained_input_transform": 18, "get_children_metrics_by_nam": 16, "get_choice_paramet": 18, "get_color": 12, "get_constraint_violated_prob": 0, "get_continuous_search_spac": 2, "get_contour_plot": 15, "get_current_model": [1, 15], "get_current_trial_generation_limit": 15, "get_custom_multi_object": 18, "get_data": [10, 18], "get_dataset": 18, "get_default_db_set": 15, "get_default_scheduler_opt": 18, "get_discrete_acklei": 2, "get_discrete_hartmann": 2, "get_discrete_rosenbrock": 2, "get_discrete_search_spac": 18, "get_early_stopping_metr": 15, "get_ehvi": 11, "get_empirical_bayes_thompson": 10, "get_engin": 16, "get_enum_nam": 16, "get_enum_valu": 16, "get_experi": 18, "get_experiment_for_valu": 18, "get_experiment_with_batch_and_single_tri": 18, "get_experiment_with_batch_tri": 18, "get_experiment_with_custom_runner_and_metr": 18, "get_experiment_with_data": 18, "get_experiment_with_map_data": 18, "get_experiment_with_map_data_typ": 18, "get_experiment_with_multi_object": 18, "get_experiment_with_observ": 18, "get_experiment_with_repeated_arm": 18, "get_experiment_with_scalarized_objective_and_outcome_constraint": 18, "get_experiment_with_tri": 18, "get_experiment_with_trial_with_ttl": 18, "get_factori": 10, "get_factorial_experi": 18, "get_factorial_metr": 18, "get_factorial_search_spac": 18, "get_feature_col": 3, "get_feature_import": 15, "get_feature_importances_from_botorch_model": 11, "get_figur": 0, "get_figure_and_callback": 15, "get_filtered_result": 3, "get_fit_and_std_quality_and_generalization_dict": 10, "get_fitted_model_bridg": 15, "get_fixed_featur": 10, "get_fixed_features_from_experi": 10, "get_fixed_paramet": 18, "get_fixed_valu": 12, "get_function_argument_nam": 18, "get_function_default_argu": 18, "get_gamma_prior": 18, "get_generation_strategi": 18, "get_generation_strategy_id": 16, "get_generation_strategy_sqa": 16, "get_generation_strategy_sqa_reduced_st": 16, "get_generator_run": 18, "get_generator_run2": 18, "get_generator_runs_by_id": 16, "get_grid_for_paramet": 12, "get_hartmann_metr": 18, "get_hartmann_search_spac": 18, "get_hierarchical_search_spac": 18, "get_hierarchical_search_space_experi": 18, "get_high_dimensional_branin_experi": 18, "get_hss_trials_with_fixed_paramet": 18, "get_hypervolum": 15, "get_improvement_global_stopping_strategi": 18, "get_improvement_over_baselin": 15, "get_input_transform_json_compon": 16, "get_input_transform_typ": 18, "get_interv": 18, "get_jenatton_benchmark_problem": 2, "get_kxx_dx": 18, "get_kxx_dx2": 18, "get_kxx_inv": 18, "get_l2_reg_weight_paramet": 18, "get_large_factorial_search_spac": 18, "get_large_ordinal_search_spac": 18, "get_legacy_list_surrogate_generation_step_as_dict": 18, "get_logg": 18, "get_lr_paramet": 18, "get_many_branin_objective_opt_config": 18, "get_map_data": 18, "get_map_key_info": 18, "get_map_metr": 18, "get_map_model": 11, "get_map_object": 18, "get_map_optimization_config": 18, "get_markdown": 0, "get_max_parallel": 15, "get_metr": 18, "get_metric_index": 10, "get_metric_mean": [1, 3], "get_metric_type_and_properti": 16, "get_missing_metr": 3, "get_missing_metrics_by_nam": 3, "get_mll_typ": 18, "get_model_config_from_deprecated_arg": 11, "get_model_covari": 18, "get_model_from_generator_run": 10, "get_model_mean": 18, "get_model_paramet": 18, "get_model_predict": [15, 18], "get_model_predictions_for_parameter": 15, "get_model_predictions_per_arm": 18, "get_model_tim": 3, "get_model_trace_of_tim": 3, "get_model_typ": 18, "get_moo_opt_config_and_outcome_nam": 2, "get_moo_surrog": 18, "get_multi_object": 18, "get_multi_objective_benchmark_problem": 18, "get_multi_objective_optimization_config": 18, "get_multi_type_experi": 18, "get_multi_type_experiment_with_multi_object": 18, "get_nehvi": 11, "get_nei": 11, "get_next_candid": 10, "get_next_tri": [3, 10, 15], "get_noise_std": 2, "get_non_monolithic_branin_moo_data": 18, "get_num_boost_rounds_paramet": 18, "get_object": 18, "get_objective_threshold": 18, "get_observ": [11, 18], "get_observation1": 18, "get_observation1tran": 18, "get_observation2": 18, "get_observation2tran": 18, "get_observation_featur": 18, "get_observation_status_quo0": 18, "get_observation_status_quo1": 18, "get_observations_with_invalid_valu": 18, "get_observed_pareto_fronti": 12, "get_online_sobol_mbm_generation_strategi": 18, "get_optimization_config": 18, "get_optimization_config_no_constraint": 18, "get_optimization_trac": 15, "get_or_early_stopping_strategi": 18, "get_oracle_experiment_from_experi": 2, "get_oracle_experiment_from_param": 2, "get_order_constraint": 18, "get_ordered_choice_paramet": 18, "get_outcome_constraint": 18, "get_outcome_transform_json_compon": 16, "get_outcome_transfrom_typ": 18, "get_parameter_constraint": 18, "get_parameter_distribut": 18, "get_pareto_frontier_and_config": 10, "get_pareto_optimal_paramet": [2, 15], "get_partition_data_load": 18, "get_pathlib_path": 18, "get_pbo_experi": 18, "get_pending_observation_featur": 3, "get_pending_observation_features_based_on_trial_statu": 3, "get_percentile_early_stopping_strategi": 18, "get_percentile_early_stopping_strategy_with_non_objective_metric_nam": 18, "get_plot_data": 12, "get_predictions_by_arm": 0, "get_problem": 2, "get_pytorch_cnn_torchvision_benchmark_problem": 2, "get_qei": 11, "get_qlogehvi": 11, "get_qlogei": 11, "get_qlognehvi": 11, "get_qlognei": [10, 11], "get_query_options_to_defer_immutable_dupl": 16, "get_query_options_to_defer_large_model_col": 16, "get_range_paramet": [12, 18], "get_range_parameter2": 18, "get_range_parameters_from_list": 12, "get_recommended_max_parallel": 15, "get_risk_measur": 18, "get_robust_branin_experi": 18, "get_robust_search_spac": 18, "get_robust_search_space_environment": 18, "get_rounding_func": 11, "get_runn": 14, "get_running_trials_per_minut": 12, "get_scalarized_object": 18, "get_scalarized_outcome_constraint": 18, "get_scheduler_options_batch_tri": 18, "get_search_spac": 18, "get_search_space_for_range_valu": 18, "get_search_space_for_valu": 18, "get_search_space_with_choice_paramet": 18, "get_sebo_acquisition_class": 18, "get_sess": 16, "get_sim_trial_by_index": 18, "get_single_objective_benchmark_problem": 18, "get_small_discrete_search_spac": 18, "get_sobol": 10, "get_sobol_benchmark_method": 2, "get_sobol_botorch_modular_acquisit": 2, "get_sobol_gpei_benchmark_method": 18, "get_soo_config_and_outcome_nam": 2, "get_soo_surrog": 18, "get_soo_surrogate_test_funct": 18, "get_standard_plot": 15, "get_statu": 0, "get_status_quo": 18, "get_subset_dataset": 11, "get_sum_constraint1": 18, "get_sum_constraint2": 18, "get_surrog": 18, "get_surrogate_and_dataset": 2, "get_surrogate_as_dict": 18, "get_surrogate_generation_step": 18, "get_surrogate_spec_as_dict": 18, "get_surrogate_spec_with_default": 18, "get_surrogate_spec_with_lognorm": 18, "get_synthetic_runn": 18, "get_target_trial_index": 3, "get_task_choice_paramet": 18, "get_tensor_converter_model": 12, "get_test_map_data_experi": 18, "get_thompson": 10, "get_threshold_early_stopping_strategi": 18, "get_to_new_sq_transform_typ": 18, "get_torch_test_data": 18, "get_trac": 15, "get_trace_by_progress": 15, "get_training_data": [4, 10], "get_transform_helper_model": 4, "get_transform_typ": 18, "get_trial": [15, 18], "get_trial_based_criterion": 18, "get_trial_indices_for_status": 3, "get_trial_paramet": 15, "get_trials_by_indic": [1, 3], "get_trials_data_fram": 15, "get_unconstrainable_metr": [1, 3], "get_uniform": 10, "get_unique_identifi": 17, "get_warping_transform": 11, "get_weight": 18, "get_weighted_mc_objective_and_objective_threshold": 11, "get_weights_from_dict": 18, "get_winsorization_config": 18, "get_y_tru": 2, "gibo": 18, "give": [1, 3, 10, 11, 18], "given": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 15, 16, 18], "global": [5, 6, 15, 16, 18], "global_sensitivity_analysi": 15, "global_stop": [8, 15, 16], "global_stopping_strategi": 15, "global_stopping_strategy_cl": 17, "go": [1, 3, 12, 15], "goal": [1, 3, 10], "goe": [1, 3], "gone": 18, "gonz\u00e1lez": 2, "good": [0, 1, 2, 3, 10, 18], "good_fit_metrics_to_fisher_scor": 10, "gp": [10, 11, 12, 15], "gp_model": 18, "gp_model_arg": 11, "gp_regress": 16, "gp_regression_fidel": 16, "gp_regression_mix": 16, "gp_sample_qmc": 18, "gpdgsmgpmean": 18, "gpdgsmgpsampl": 18, "gpei": [10, 15], "gpu": 10, "gpytorch": [11, 16], "gpytorch_component_registri": 16, "gpytorchmodel": 11, "gr": 0, "grab": [1, 3, 18], "gradient": [12, 18], "gradient_absolute_measur": 18, "gradient_measur": 18, "gradients_square_measur": 18, "grand": 18, "granular": [1, 3], "graph": [10, 12, 18], "graph_obj": 12, "graph_object": [0, 12, 15], "greater": [1, 3, 10, 11, 18], "grid": [12, 18], "ground": 2, "group": [1, 3, 12, 15], "gs_id": 16, "gs_sqa": 16, "gss": 16, "gtx_tild": 10, "guarante": [3, 15], "guess": 18, "guid": 15, "guidanc": 5, "guidelin": 3, "h": 10, "h2_html": 18, "h3_html": 18, "ha": [1, 2, 3, 4, 5, 10, 11, 12, 15, 16, 17, 18], "had": 15, "half": 10, "halt": [4, 15, 18], "hand": [1, 3], "hander": 18, "handl": [0, 1, 2, 3, 7, 10, 11, 13, 14, 15, 16, 18], "handle_exceptions_in_retri": 18, "handler": [15, 16, 18], "happen": [3, 10, 15, 16, 18], "hard": [10, 18], "hartmann": [2, 18], "hartmann6": [8, 16, 18], "hartmann6metr": [9, 16, 18], "has_good_opt_config_model_fit": 10, "has_nam": [1, 3], "has_objective_threshold": 18, "has_observation_nois": 18, "has_optimization_config": 18, "has_outcome_constraint": 18, "hash": [1, 3, 16], "hashabl": [1, 3, 15, 18], "hasn": 4, "have": [0, 1, 2, 3, 4, 10, 11, 12, 14, 15, 16, 17, 18], "hd_embed": 2, "head": 18, "header": 18, "health": [0, 8], "health_check": 8, "healthcheck": 8, "healthcheck_analysi": 0, "healthcheckanalysi": 0, "healthcheckanalysiscard": 0, "healthcheckstatu": 0, "height": 3, "helal": 9, "held": 18, "help": [3, 10, 16, 18], "helper": [3, 4, 10, 12, 15, 18], "henc": 2, "here": [2, 3, 10, 11, 12, 15], "heterogen": 4, "heurist": [4, 10, 11, 15], "hidden": 9, "hidden_layer_s": 9, "hierarch": [1, 2, 3, 10], "hierarchical_structure_str": 3, "hierarchical_tree_height": 17, "hierarchicalsearchspac": [3, 16, 18], "high": [0, 1, 3, 10, 14, 15], "higher": [1, 2, 3, 9, 18], "hint": [5, 15], "hit": 5, "hitandrunpolytopesampl": 11, "hold": [1, 3, 10, 15, 18], "homotopi": 11, "hood": 10, "hook": [2, 18], "horizont": 0, "host": 16, "hostnam": 16, "hot": [10, 11], "hour": [2, 15], "hover": 12, "hover_data_colnam": 12, "hover_label": 12, "hovertext": 12, "how": [0, 1, 2, 3, 5, 10, 11, 12, 15, 18], "howev": [1, 2, 3, 11, 16, 18], "hpo": 2, "href": 18, "hss": 2, "html": [1, 3, 12, 15, 18], "html_element": 18, "http": [1, 3, 10, 15, 18], "human": [1, 3, 7, 15, 18], "hyper": [10, 15], "hyperparamet": 11, "hyperrectangl": [10, 11], "hyperspher": 11, "hypervolum": [1, 2, 3, 6, 10, 11, 12, 15], "i": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "icml": 2, "id": [16, 18], "ideal": 11, "ident": [10, 16, 18], "identif": 8, "identifi": [0, 1, 3, 10, 11, 15, 16, 17, 18], "idle_callback": 15, "idx_1": 18, "idx_2": 18, "idx_n": 18, "iff": [6, 10, 18], "ignor": [2, 3, 4, 10, 11, 12, 15, 18], "ignore_global_stopping_strategi": 15, "ignored_nam": 12, "ii": 10, "iid": 2, "ij": 10, "imag": 10, "imaginari": 10, "imcompat": 5, "immatur": 5, "immedi": 3, "immut": [1, 3, 5, 15, 16, 18], "immutabilityerror": 5, "immutable_once_run": 3, "immutable_search_space_and_opt_conf": 18, "immutable_search_space_and_opt_config": [1, 3, 15, 16, 18], "imperfect": 18, "impl": 16, "implement": [0, 1, 3, 4, 10, 11, 14, 15, 16, 18], "implicitli": [1, 3], "impolement": [1, 3, 14], "import": [1, 2, 3, 10, 11, 15, 16, 18], "importance_measur": 12, "importantli": [1, 3], "impos": 0, "impropperli": 18, "improv": [1, 3, 6, 10, 11, 15, 16], "improvement_bar": 6, "improvement_global_stopping_strategy_to_dict": 16, "improvement_over_baselin": 17, "improvementglobalstoppingstrategi": [16, 18], "in_design_arm": 3, "in_sampl": 12, "inactive_when_pending_tri": 6, "incl": 10, "includ": [0, 1, 2, 3, 4, 5, 10, 11, 12, 14, 15, 16, 17, 18], "include_first_last": 3, "include_measurement_error": 12, "include_out_of_design_point": 3, "include_out_of_sampl": 15, "include_sq": [1, 3, 18], "inclus": [3, 18], "incom": [1, 3], "incompat": [1, 3], "incompatibledependencyvers": 5, "incomplet": [5, 11, 15], "incorrect": 5, "incorrectdbconfigurationerror": 5, "incorrectli": 5, "increas": [10, 11, 15, 18], "indent": 10, "independ": [1, 3, 15, 18], "index": [0, 1, 3, 4, 8, 10, 11, 12, 14, 15, 16, 18], "indic": [0, 1, 2, 3, 4, 5, 10, 11, 12, 14, 15, 18], "indici": [3, 10, 18], "indirectli": 15, "individu": [1, 3, 4, 10, 11, 16, 18], "ineligibl": 4, "inequ": [1, 3, 10, 11, 18], "inequality_constraint": 11, "inf": 10, "infer": [1, 2, 3, 10, 11, 12, 15, 18], "infer_is_rel": 12, "infer_objective_threshold": [10, 11], "infer_reference_point": [11, 12], "infer_reference_point_from_experi": 12, "infer_relative_constraint": 12, "inference_trac": 2, "inference_value_trac": 2, "infin": 10, "infinit": [3, 18], "influenc": [15, 18], "info": [3, 15, 16, 18], "inform": [1, 2, 3, 5, 10, 11, 14, 15, 16, 17, 18], "informative_failure_on_non": 18, "ingest": 12, "inherit": [5, 10, 16, 18], "init": [10, 15, 16], "init_engin": 11, "init_engine_and_session_factori": 16, "init_notebook_plot": 18, "init_point": 11, "init_posit": [10, 11], "init_seconds_between_pol": 15, "init_test_engine_and_session_factori": 16, "initi": [3, 10, 11, 15, 16, 18], "initial_wait_second": 18, "initialization_tri": 10, "initiator_ev": 16, "inittest": 18, "initvar": 2, "inject": [3, 18], "inject_dummy_values_to_complete_flat_parameter": 3, "inject_help": [12, 18], "inner": 10, "inplement": 18, "input": [1, 3, 5, 10, 11, 12, 13, 15, 16, 18], "input_constructor": 10, "input_funct": 18, "input_mc_sampl": 18, "input_obj": 16, "input_qmc": 18, "input_transform": [16, 18], "input_transform_class": 11, "input_transform_opt": 11, "input_transform_registri": 16, "input_transform_type_from_json": 16, "input_transforms_json": 16, "inputconstructor": [3, 10, 18], "inputconstructorpurpos": [10, 16], "inputperturb": 16, "inputtransform": [11, 16, 18], "insampl": [8, 12], "insample_effect": 0, "insampleeffectsplot": 0, "insid": [4, 10], "inspect": [1, 3, 10], "instal": 5, "instanc": [1, 2, 3, 4, 9, 10, 11, 15, 16, 18], "instanti": [1, 2, 8, 10, 11, 12, 16], "instantiationbas": 15, "instead": [1, 2, 3, 10, 11, 12, 15, 18], "instruct": 3, "instrument": [10, 16], "instrumentedattribut": 16, "int": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "int_range_to_choic": 16, "int_to_float": 16, "integ": [1, 3, 10, 11, 15, 16, 18], "integer_indic": 11, "intellig": 15, "intend": [0, 1, 3, 10, 15, 16], "intent": [5, 15, 16], "intention": 10, "intenum": [0, 16], "interact": [8, 12, 18], "interact_batch_comparison": 12, "interact_contour": [12, 15], "interact_contour_plotli": 12, "interact_cross_valid": 12, "interact_cross_validation_plotli": 12, "interact_empirical_model_valid": 12, "interact_fit": 12, "interact_fitted_plotli": 12, "interact_multiple_pareto_fronti": 12, "interact_pareto_fronti": 12, "interact_slic": 12, "interact_slice_plotli": 12, "interactive_loop": 15, "interactive_optim": 15, "interactive_optimize_with_cli": 15, "interest": [10, 12, 15], "interfac": [3, 4, 6, 10, 11, 16, 18], "intermedi": [3, 15, 18], "intern": [1, 3, 10, 13, 14, 18], "internal_clock": 18, "interpol": 4, "interpret": [1, 3, 15, 16], "interquartil": 6, "interrupt": [10, 15, 16], "intertupt": 15, "interv": [9, 10, 11, 12, 15, 16, 18], "intract": 3, "intrangetochoic": [10, 16], "introduc": 15, "inttimestamp": 16, "inttofloat": [10, 16], "invalid": 5, "invalid_valu": 18, "invers": [10, 18], "inverse_transform": 10, "inverse_variance_weight": 18, "invert": [10, 11], "invoc": 16, "involv": [9, 10, 11, 12], "io": 15, "ipython": 0, "iqr": [6, 12], "is_abandon": 3, "is_available_while_run": [1, 3, 9], "is_ax_equ": 18, "is_batch": 16, "is_candid": 3, "is_complet": [3, 10], "is_copy_doc_cal": 18, "is_deploi": 3, "is_early_stop": 3, "is_elig": 4, "is_eligible_ani": 4, "is_environment": 3, "is_environmental_vari": 3, "is_err": 18, "is_factori": [1, 3], "is_fail": 3, "is_feas": 12, "is_feasible_colnam": 12, "is_felin": 18, "is_fidel": [1, 3, 10, 15], "is_foreign_key_field": 16, "is_hierarch": 3, "is_log": 12, "is_manual_generation_strategi": 17, "is_map_data": 3, "is_met": 10, "is_moo": [2, 11], "is_moo_problem": [1, 3], "is_node_bas": 10, "is_numer": 3, "is_ok": 18, "is_optim": 0, "is_ord": [1, 3, 13, 15], "is_predict": 0, "is_robust": 3, "is_run": 3, "is_task": [1, 3, 10, 15], "is_termin": 3, "is_test": [1, 3, 15], "is_upper_bound": [1, 3], "is_valid_typ": [1, 3], "isclos": 18, "iso": 3, "isol": 18, "issingleobject": 16, "issu": [1, 3, 5, 15], "item": [1, 3, 10, 11, 15, 16, 18], "iter": [0, 1, 2, 3, 4, 5, 6, 9, 10, 12, 14, 15, 16, 18], "ith": 11, "its": [0, 1, 2, 3, 4, 9, 10, 11, 12, 15, 16, 18], "itself": [2, 3, 10, 16, 18], "ivw": [3, 12, 16], "ivw_metric_merg": 10, "j": [2, 9, 10, 11, 12, 15, 18], "jame": [11, 18], "jenatton_test_funct": 2, "jinja2": 18, "jit": 10, "jit_compil": 10, "jj": 10, "job": [9, 14, 15], "johnson": 10, "join": [3, 10, 17, 18], "joint": [10, 11], "joint_optim": 11, "jointli": 13, "json": [5, 8, 10, 11, 15, 18], "json_class_decoder_registri": 16, "json_class_encoder_registri": 16, "json_decoder_registri": 16, "json_encoder_registri": 16, "json_stor": [1, 10, 18], "jsondecodeerror": 5, "jsonencod": 10, "jsonencodeddict": 16, "jsonencodedlist": 16, "jsonencodedlongtext": 16, "jsonencodedlongtextdict": 16, "jsonencodedmediumtext": 16, "jsonencodedobject": 16, "jsonencodedtext": 16, "jsonencodedtextdict": 16, "jsonencodeerror": 5, "jstor": 18, "jupyt": 0, "just": [1, 2, 3, 10, 11, 12, 14, 15, 16, 18], "justifi": 6, "k": [3, 9, 10, 11, 15, 18], "k_i": 11, "keep": [1, 3, 4, 15, 18], "keep_everi": 3, "keep_trial_indic": 12, "kei": [0, 1, 2, 3, 4, 10, 11, 12, 14, 15, 16, 18], "kept": [3, 18], "kernel": [15, 16, 18], "kernel_class": 16, "kernel_typ": 18, "key_typ": 18, "keyword": [1, 2, 3, 10, 11, 15, 16, 18], "kill": 14, "kind": 3, "klass": 18, "know": [1, 3, 15, 16], "knowledge_gradi": 16, "known": [1, 2, 3, 10, 11, 15, 18], "kth": 3, "kwarg": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 15, 16], "kwargs_for_get_branin_experi": 18, "kwargs_iter": 18, "l": 10, "l0": 11, "l1": 11, "l1_norm": 11, "l1_norm_func": 11, "l2": 8, "l2norm": [9, 16], "l2normmetr": [9, 16], "l_0": 3, "l_d": 3, "l_i": [3, 10], "label": [10, 12, 15, 16], "label_dict": 12, "label_to_feature_dict": 10, "lack": 5, "lag": 15, "lai": 10, "lambda": 10, "land": [1, 3, 7], "lang": 18, "larg": [3, 10, 16, 18], "larger": [10, 11, 15, 18], "largest": [3, 10, 15], "last": [1, 3, 10, 12, 15, 18], "last_generator_run": 10, "last_retri": 18, "last_run_templ": 0, "latent": 11, "later": [0, 1, 3, 10, 11, 18], "latest": [1, 3, 10, 14, 15], "latter": [1, 2, 3, 10, 15, 18], "lattice_multiple_metr": 12, "launch": 10, "launch_surfac": 17, "layer": [1, 3, 9, 10], "lazi": [2, 18], "lazili": 16, "lb": 18, "lce": 11, "lceabo": 11, "lceagp": [11, 16], "lcem": 11, "lcembo": 11, "lead": 3, "learn": [2, 3, 4, 11, 13, 15, 18], "least": [4, 10, 11, 15], "leav": [10, 11, 18], "leave_one_out_pseudo_likelihood": 16, "leaveoneoutpseudolikelihood": 16, "left": [1, 3, 4, 11, 12], "legaci": 11, "legacy_botorch": 10, "legacy_gpei": 10, "legend": 12, "legend_label": 12, "legend_labels_by_metr": 12, "len": [2, 3, 11, 15, 18], "length": [2, 3, 4, 10, 11, 15, 18], "lengthscal": [10, 11, 15], "lengthscale_constraint": 11, "lengthscale_prior": 11, "leq": 3, "less": [1, 2, 3, 4, 15, 18], "lesser": 11, "let": 10, "level": [0, 1, 2, 3, 10, 11, 12, 15, 18], "level1": 10, "level2": 10, "leverag": 10, "li": 9, "librari": 18, "lie": [10, 11, 12], "lieu": 11, "lifecycl": [1, 3], "lifecycle_stag": [1, 3, 16], "lifecyclestag": [1, 3, 16], "ligand": 9, "light": 12, "light_purpl": 12, "lightweight": [3, 11, 15], "like": [0, 1, 2, 3, 10, 11, 12, 15, 16, 18], "likelihood": [11, 16], "likelihood_class": 11, "likelihood_kwarg": 11, "likelihood_opt": 11, "limit": [1, 3, 4, 10, 11, 12, 15], "limit_points_per_plot": 15, "limit_rows_per_group": 3, "limit_rows_per_metr": [3, 4], "line": [0, 11, 12, 16, 18], "linear": [1, 3, 10, 11, 13, 16], "linear_constraint": [10, 11], "linear_kernel": 16, "linearkernel": 16, "lineno": 18, "link": [1, 3, 10, 18], "link_funct": 18, "link_html": 18, "list": [0, 1, 2, 3, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "list1": 18, "list2": 18, "list_item": 18, "list_item_html": 18, "list_of_rgb_tupl": 12, "list_surrogate_json": 16, "listen": 16, "listen_for": 16, "listens_for_multipl": 16, "listsurrog": [16, 18], "literatur": 15, "live": [1, 3, 11], "lkj": 11, "lkjcovarianceprior": 11, "load": [1, 3, 5, 11, 15, 18], "load_analysis_cards_by_experiment_nam": 16, "load_auxiliary_experi": 16, "load_experi": [15, 16], "load_experiment_from_databas": 15, "load_from_json_fil": 15, "load_generation_strategy_by_experiment_nam": 16, "load_generation_strategy_by_id": 16, "load_mnist": 18, "load_trials_in_batches_of_s": 16, "local": [10, 14, 18], "locat": [2, 11, 18], "lock": 15, "log": [1, 3, 11, 12, 13, 15, 16, 17, 18], "log_filepath": 15, "log_i": 16, "log_scal": [1, 3, 10, 12, 15], "log_trial_failur": 15, "logei": 16, "logexpectedimprov": 16, "logger": [15, 16], "loggeradapt": 15, "logging_level": 15, "logi": [10, 16], "logic": [10, 11, 15, 16, 18], "logical_early_stopping_strategy_to_dict": 16, "logicalearlystoppingstrategi": [4, 16], "logit": [1, 3, 9, 16], "logit_scal": [1, 3], "lognoisyexpectedimprov": 16, "lognorm_to_norm": 10, "lognormalprior": 16, "logrecord": 18, "long": [3, 4, 10, 15, 16, 18], "long_run": [10, 18], "longer": [1, 3, 10, 15], "longest": 3, "look": [1, 2, 3, 10, 15, 16], "lookup": [1, 3, 12, 15, 18], "lookup_data": [1, 3], "lookup_data_for_t": [1, 3], "lookup_data_for_tri": [1, 3], "lookup_trial_index_statu": 18, "loop": [1, 2, 3, 8, 10, 11], "lose": [1, 3], "lossi": [1, 3], "lot": 18, "low": [0, 10, 14], "lower": [1, 2, 3, 7, 11, 12, 14, 15, 18], "lower_bound": 10, "lower_boundari": [10, 11], "lower_is_bett": [1, 2, 3, 9, 12, 16, 18], "lower_is_better_by_metr": 12, "lower_paramet": [1, 3], "lower_quantile_margin": [10, 11], "lowest": 10, "lr": [2, 18], "m": [2, 4, 10, 11, 18], "m1": [3, 10, 11, 15, 18], "m1_c1": 10, "m1_c2": 10, "m2": [3, 11], "m2_c1": 10, "m2_c2": 10, "m3_c1": 10, "m3_c2": 10, "m_c": [12, 18], "m_t": [12, 18], "machin": [2, 4, 10, 15, 18], "made": [5, 10, 11, 15], "magicmock": 18, "mai": [0, 1, 2, 3, 5, 10, 11, 14, 15, 18], "main": [1, 3, 9, 10, 12, 15, 18], "mainli": [10, 11, 18], "maintain": [1, 2, 3, 5, 16], "make": [0, 1, 2, 3, 10, 11, 12, 15, 16, 18], "make_experi": 15, "make_fixed_observation_featur": 15, "make_indices_str": 18, "make_object": 15, "make_objective_threshold": 15, "make_optimization_config": 15, "make_optimization_config_from_properti": 15, "make_outcome_constraint": 15, "make_search_spac": 15, "mamal": 18, "manag": [1, 8, 16, 18], "managed_loop": 15, "mani": [0, 1, 2, 3, 9, 10, 12, 15, 17, 18], "manner": [2, 3, 9, 18], "manual": [1, 3, 15, 17], "map": [1, 2, 3, 4, 7, 8, 11, 12, 14, 15, 16], "map_data": [3, 4, 9, 16], "map_data_limit_rows_per_group": 10, "map_data_limit_rows_per_metr": 10, "map_data_multiple_metrics_dropdown_plotli": 12, "map_data_single_trace_scatt": 12, "map_data_to_dict": 16, "map_df": 3, "map_dict": 3, "map_err": 18, "map_kei": [3, 4, 10, 15], "map_key_info": [3, 9], "map_key_info_to_dict": 16, "map_key_to_typ": 3, "map_keys_as_paramet": 3, "map_metr": [3, 16], "map_or": 18, "map_or_els": 18, "map_torch": 10, "map_tracking_metr": 18, "map_unit_x": 16, "mapdata": [1, 4, 9, 10, 15, 16, 18], "mape": 10, "mapkeyinfo": [3, 9, 16, 18], "mapmetr": [9, 15, 16], "maptorchmodelbridg": [4, 10], "mapunitx": [10, 16], "margin": [6, 10, 11, 18], "marginal_effect": [12, 18], "marginal_log_likelihood": [11, 16], "marginalize_dim": 11, "marginalloglikelihood": [11, 16, 18], "mark": [1, 3, 14, 15, 18], "mark_": 3, "mark_a": 3, "mark_abandon": 3, "mark_arm_abandon": [1, 3], "mark_complet": 3, "mark_early_stop": 3, "mark_fail": 3, "mark_run": 3, "mark_stag": 3, "markdown": 8, "markdown_analysi": 0, "markdown_messag": 15, "markdownanalysi": 0, "markdownanalysiscard": 0, "marker": 12, "marker_color": 12, "marshal": 16, "match": [1, 2, 3, 10, 11, 14, 15, 18], "match_ci_width": 10, "match_ci_width_trunc": 10, "matern": [11, 18], "matern_ard_num_dim": 11, "matric": [3, 11], "matrix": [3, 11, 15, 18], "matter": [11, 18], "max": [10, 15, 18], "max_cardin": 11, "max_concurr": 18, "max_draw": 11, "max_featur": 11, "max_gen_draws_for_dedupl": 10, "max_idx": 18, "max_initialization_tri": 10, "max_new_tri": 15, "max_num_param": 0, "max_parallel": [1, 3, 5, 10, 17], "max_parallelism_cap": 10, "max_parallelism_overrid": 10, "max_parallelism_set": 15, "max_pending_tri": [1, 2, 3, 15], "max_progress": 4, "max_training_s": 4, "max_trial": 15, "max_util": 11, "max_value_entropy_search": 16, "maxgenerationparallel": 16, "maxim": [1, 2, 3, 10, 11, 12, 15, 18], "maximum": [1, 2, 3, 5, 10, 11, 12, 15, 18], "maximum_parallel": 13, "maxit": 11, "maxparallelismreach": 10, "maxparallelismreachedexcept": 5, "maxtrial": [10, 16], "maybe_extract_baseline_comparison_valu": 15, "maybe_raise_deprecation_warning_on_class_method": 3, "mbm": [2, 11, 15, 18], "mc": [11, 18], "mc_sampl": 11, "mcacquisitionobject": 11, "md5": 3, "md5hash": [1, 3], "mean": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 15, 16, 18], "mean1": 3, "mean2": 3, "mean_c": 18, "mean_gradi": 18, "mean_gradients_btsp": 18, "mean_markers_scatt": 12, "mean_of_the_standardized_error": 18, "mean_sd": 9, "mean_t": 18, "mean_trace_scatt": 12, "mean_valu": 9, "meaning": 12, "means_dict": 3, "means_t": 18, "meant": [1, 3, 10, 11, 16, 18], "measur": [1, 3, 4, 8, 10, 11], "measurement_error": 12, "mediumtext": 16, "member": [1, 3, 10, 16], "memori": 16, "merg": [1, 3, 10, 12], "merge_model_predict": 3, "merge_repeated_measur": 16, "mergerepeatedmeasur": [10, 16], "messag": [0, 1, 3, 4, 5, 14, 15, 18], "met": [10, 15], "metaclass": [16, 18], "metadata": [0, 1, 3, 10, 11, 14, 15, 16, 18], "method": [0, 1, 3, 4, 5, 9, 10, 11, 12, 14, 15, 16, 18], "methodnam": 18, "metric": [0, 1, 4, 5, 8, 10, 11, 12, 15, 16], "metric1": [10, 12], "metric1_c1": [10, 12], "metric1_c2": [10, 12], "metric2": 10, "metric3": 10, "metric_1": [10, 12], "metric_2": [10, 12], "metric_aggreg": 10, "metric_cls_to_quant": 17, "metric_clss": 16, "metric_colnam": 12, "metric_config_summary_df": [1, 3], "metric_decomposit": 10, "metric_definit": 15, "metric_from_sqa": 16, "metric_i": 12, "metric_mean": 15, "metric_nam": [0, 1, 3, 4, 9, 10, 11, 12, 15, 18], "metric_name_1": 15, "metric_name_2": 15, "metric_registri": 16, "metric_sqa": 16, "metric_task_map": 10, "metric_threshold": 4, "metric_to_dict": 16, "metric_to_model_config": 11, "metric_to_sqa": 16, "metric_to_trial_typ": 3, "metric_weight": 3, "metric_x": 12, "metricdatanotreadyerror": 5, "metricfetch": [1, 2, 3, 9, 18], "metricfetchresult": [1, 2, 3], "metricint": 16, "metricobject": 15, "metrics_as_task": 16, "metrics_sqa": 16, "metrics_to_trial_typ": [3, 15], "metricsastask": [10, 16], "metrictyp": 16, "micromol": 9, "mid": 0, "middl": [3, 15], "might": [1, 2, 3, 4, 15], "milli": [1, 3], "millisecond": [1, 3, 18], "mimic": 11, "min": [10, 11, 18], "min_choic": 10, "min_curv": 4, "min_failed_trials_for_failure_rate_check": 15, "min_idx": 18, "min_num_valu": 12, "min_progress": 4, "min_progression_model": 4, "min_seconds_before_pol": 15, "min_sobol_trials_observ": 10, "min_trial": [6, 18], "min_trials_": 10, "min_trials_observ": 10, "min_weight": [10, 11], "mini_batch_s": 18, "minim": [1, 2, 3, 7, 9, 10, 11, 12, 15, 16, 18], "minima": 18, "minimum": [0, 1, 2, 3, 10, 12, 15, 18], "minimum_level": 0, "minimumpreferenceoccur": 16, "minimumtrialsinstatu": 16, "mintrial": [10, 16], "minut": 18, "miscellan": 0, "misconfigur": [1, 3, 5], "misconfiguredexperi": 5, "mismatch": [1, 3], "miss": [0, 1, 3, 4, 10, 12, 15], "missing_metr": 3, "missing_object": 3, "missing_outcome_constraint": 3, "missing_trial_index": 5, "missingdataerror": 5, "missingmetr": 3, "mix": 11, "mixed_integ": 2, "mixedsingletaskgp": 16, "mixin": [14, 15, 18], "mixtur": 11, "miyaura": 9, "mk_discrete_choic": 11, "mki": 16, "ml": 2, "mll": [11, 16], "mll_class": 11, "mll_kwarg": 11, "mll_option": 11, "mnist": 18, "mock_botorch_optim": 18, "mock_botorch_optimize_context_manag": 18, "mock_config_dict": 18, "mock_optimize_context_manag": 18, "mock_patch_method_origin": 18, "mock_path": 18, "mocked_import_path": 18, "mode": [12, 18], "model": [0, 1, 2, 3, 4, 8, 9, 15, 16], "model_best_point": 10, "model_bridg": [10, 18], "model_bridge_class": 10, "model_cl": 2, "model_class": [10, 16, 18], "model_config": 11, "model_constructor": [10, 11], "model_cv_kwarg": 10, "model_enum": 10, "model_fit_dict": 10, "model_fit_gener": 17, "model_fit_metric_nam": 15, "model_fit_qu": 17, "model_fit_stat": 18, "model_fit_threshold": 15, "model_gen_kwarg": [2, 10, 11], "model_gen_opt": [2, 10, 11], "model_kei": [0, 1, 3, 10], "model_key_overrid": 10, "model_key_to_model_setup": [1, 10], "model_kwarg": [1, 3, 10, 15], "model_list": 18, "model_list_gp_regress": 16, "model_nam": [5, 10], "model_opt": 11, "model_predict": [1, 3, 10], "model_predictions_by_arm": [1, 3], "model_predictor": [10, 11], "model_registri": 16, "model_spac": 10, "model_spec": [10, 16], "model_spec_from_json": 16, "model_spec_json": 16, "model_spec_to_dict": 16, "model_spec_to_gen_from": 10, "model_state_after_gen": [1, 3], "model_std_gener": 17, "model_std_qu": 17, "model_to_gen_from_nam": 10, "model_transit": [10, 12], "model_typ": 9, "modelbasedearlystoppingstrategi": 4, "modelbridg": [0, 1, 3, 4, 8, 11, 12, 15, 16, 18], "modelbridge_modul": [10, 18], "modelbridge_util": [3, 10], "modelconfig": [11, 16], "modelerror": 5, "modelfitmetricprotocol": [10, 18], "modeling_stub": 18, "modelistgp": 11, "modellist": 11, "modellistgp": [11, 16], "modelregistrybas": [10, 15, 16], "models_enum": [10, 15], "modelsetup": 10, "modelspec": [16, 18], "modelspecjsonencod": 10, "modif": [1, 3], "modifi": [2, 10, 11, 15, 18], "modified_bound": 2, "modul": [2, 8, 9, 10, 18], "modular": 11, "modular_botorch": 2, "modulelist": 11, "momentum": [2, 18], "monad": 18, "mont": [11, 18], "monte_carlo": [11, 16], "moo": [2, 6, 10, 11, 12], "moo_experi": 15, "more": [1, 2, 3, 4, 5, 7, 10, 11, 15, 16, 18], "most": [0, 1, 3, 7, 10, 11, 15, 16, 18], "mostli": [1, 3, 15], "move": [10, 15], "msg": 18, "mt": 10, "mt_experiment_trial_typ": 15, "mu_c": 18, "mu_hat": 18, "mu_hat_i": 18, "mu_ln": 10, "mu_ln_": 10, "mu_n": 10, "mu_n_": 10, "mu_t": 18, "much": [1, 3], "muller": 18, "multi": [1, 2, 3, 6, 10, 11, 15, 16], "multi_object": [11, 16, 18], "multi_objective_optimization_config": 16, "multi_objective_optimization_config_to_dict": 16, "multi_objective_to_dict": 16, "multi_objective_to_sqa": 16, "multi_type_experi": [3, 10, 16], "multi_type_experiment_from_json": 16, "multi_type_experiment_to_dict": 16, "multifidel": 3, "multiobject": [1, 3, 10, 12, 16, 18], "multiobjectivebotorchmodel": 11, "multiobjectiveoptimizationconfig": [1, 2, 3, 10, 15, 16, 18], "multipl": [1, 2, 3, 9, 10, 11, 12, 15, 16, 18], "multipli": [10, 11], "multitask": 16, "multitask_gp_rank": 11, "multitaskgp": 16, "multityp": 16, "multitypeexperi": [1, 10, 15, 16, 18], "multivari": 18, "multivariatenorm": 18, "must": [1, 2, 3, 5, 10, 11, 12, 15, 16, 18], "mutabl": [1, 3], "mutablemap": [1, 3, 10, 18], "mutat": [1, 3, 10], "mvn": 10, "my": 18, "my_object": 15, "my_output_nam": 18, "myexternalgenerationnod": 10, "mysql": 8, "n": [0, 3, 4, 9, 10, 11, 18], "n_best_point": 2, "n_choic": 10, "n_complet": 15, "n_continuous_range_paramet": 18, "n_denom": 18, "n_i": 11, "n_numer": 18, "n_object": 18, "n_ordinal_choice_paramet": 18, "n_point": 2, "n_tunable_featur": 11, "nadir": [10, 11, 12, 15], "name": [0, 1, 2, 3, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "name_or_short_signatur": [1, 3], "named_tuple_to_dict": 18, "namedparetofrontierresult": 12, "namedtupl": [3, 10, 12, 15, 16, 18], "nan": [2, 9, 10, 11, 18], "nanomol": 9, "natur": [9, 10], "ndarrai": [2, 3, 4, 9, 10, 11, 12, 18], "nearli": 3, "necessari": [3, 10, 15, 16, 18], "necessarili": [1, 2, 3], "necessit": [1, 3], "need": [1, 2, 3, 5, 10, 11, 12, 14, 15, 16, 18], "neg": [1, 3, 10, 11, 12, 15, 18], "negativebraninmetr": [9, 16], "nei": 11, "nest": [1, 3, 10, 15, 18], "network": 18, "neural": [2, 11], "neurip": 18, "never": [1, 3, 9, 10, 18], "new": [1, 2, 3, 5, 9, 10, 11, 12, 15, 16, 18], "new_batch_tri": [1, 3], "new_data": 10, "new_error": 18, "new_featur": 3, "new_statu": 3, "new_trial": [1, 3, 18], "new_valu": 16, "newer": [10, 18], "newli": [1, 3, 10, 11, 15], "next": [10, 15], "nie": 5, "nlast": 0, "nn": [9, 16, 18], "no_bayesian_optim": 10, "no_retry_except": 18, "no_retry_on_exception_typ": 18, "no_runner_requir": 3, "no_winsor": 10, "nodataerror": 5, "node": [3, 15, 16, 18], "node_nam": [5, 10], "node_that_generated_last_gr": 10, "nodeinputconstructor": [10, 16], "nodes_dict": 10, "nodevisitor": 18, "nois": [1, 2, 3, 4, 9, 10, 11, 15], "noise_sd": [9, 18], "noise_std": [2, 18], "noise_var": 9, "noiseless": [2, 9, 15], "noiselessli": [2, 18], "noisi": [2, 8, 10, 11, 15, 18], "noisy_funct": [9, 16], "noisy_function_map": 9, "noisyexpectedimprov": 16, "noisyfunctionmapmetr": [9, 18], "noisyfunctionmetr": [9, 16], "non": [0, 1, 2, 3, 10, 11, 12, 14, 15], "non_constraint_rel": 12, "none": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "nonneg": 11, "nonstationar": [1, 3, 15], "noreturn": 18, "norm": [8, 11], "norm_to_lognorm": 10, "normal": [1, 2, 3, 4, 9, 10, 11, 12, 16, 18], "normalize_indic": 11, "normalize_progress": 4, "normalized_arm_weight": [1, 3], "not_saved_model_kwarg": 10, "notabl": 10, "note": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 16, 18], "notebook": [8, 10, 12], "notebook_env": 18, "noth": [10, 11, 18], "notimplementederror": [2, 5, 15], "notion": 2, "noun": 12, "novel": 11, "now": [10, 11, 18], "np": [10, 18], "nreason": 0, "null": [1, 3, 11, 15], "num_": 10, "num_abandoned_arm": [1, 3], "num_abandoned_tri": 17, "num_arm": 18, "num_arms_cr": 16, "num_baseline_tri": 2, "num_batch_tri": 18, "num_bayesopt_tri": 17, "num_bins_per_tri": 15, "num_bootstrap_sampl": 18, "num_complet": 18, "num_completed_initialization_tri": 10, "num_completed_tri": 17, "num_constraint": 2, "num_continuous_range_paramet": 17, "num_custom_tri": 17, "num_early_stopped_tri": 17, "num_epoch": 18, "num_experimental_metr": 18, "num_experimental_tri": 18, "num_fail": 18, "num_failed_tri": 17, "num_fantasi": 18, "num_fetch": 18, "num_fixed_paramet": 17, "num_fold": 9, "num_gp_sampl": 18, "num_hidden_lay": 9, "num_initialization_tri": [10, 13, 17], "num_inner_restart": 18, "num_int_range_parameters_larg": 17, "num_int_range_parameters_medium": 17, "num_int_range_parameters_smal": 17, "num_iter": 12, "num_level": 18, "num_log_scale_range_paramet": 17, "num_map_metr": 17, "num_mc_sampl": 18, "num_metric_fetch_e_encount": 17, "num_non_sq_arm": 18, "num_object": [17, 18], "num_observ": 18, "num_ordered_paramet": 18, "num_other_tri": 17, "num_outcom": 18, "num_outcome_constraint": 17, "num_paramet": 18, "num_parameter_constraint": 17, "num_point": 12, "num_preference_tri": 18, "num_preference_trials_w_repeated_arm": 18, "num_queu": 18, "num_repeated_arm": 18, "num_requested_bayesopt_tri": 17, "num_requested_initialization_tri": 17, "num_requested_other_tri": 17, "num_restart": [11, 18], "num_run": [5, 18], "num_sampl": [3, 10, 11, 16, 18], "num_sobol_tri": [2, 18], "num_trace_observ": 18, "num_tracking_metr": 17, "num_tre": 11, "num_trial": [1, 2, 3, 4, 10, 13, 15, 18], "num_trials_bad_due_to_err": 17, "num_tunable_paramet": 10, "num_unordered_choic": 18, "num_unordered_choice_parameters_larg": 17, "num_unordered_choice_parameters_medium": 17, "num_unordered_choice_parameters_smal": 17, "num_work": 18, "number": [1, 2, 3, 4, 5, 9, 10, 11, 12, 15, 16, 17, 18], "numer": [1, 3, 10, 12, 18], "numpi": [3, 10, 11, 18], "numpy_type_to_python_typ": 18, "o": [10, 11], "ob": 10, "obj": [2, 3, 16, 18], "obj_t": 10, "obj_w": 10, "object": [0, 1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "object_attribute_dicts_equ": 18, "object_attribute_dicts_find_unequal_field": 18, "object_dict": 16, "object_from_json": 16, "object_json": 16, "object_to_json": 16, "objective_dict": 9, "objective_from_json": 16, "objective_mean": [1, 3], "objective_mean_valu": 15, "objective_metr": 3, "objective_nam": [1, 2, 15], "objective_optimum": 15, "objective_properti": 15, "objective_threshold": [1, 3, 10, 11, 12, 15, 16], "objective_threshold_constraint_from_str": 15, "objective_threshold_to_sqa": 16, "objective_thresholds_dict": [1, 3], "objective_to_dict": 16, "objective_to_sqa": 16, "objective_weight": [1, 3, 10, 11], "objectiveproperti": 15, "objectives_by_nam": 3, "objectivethreshold": [1, 3, 10, 12, 15, 16, 18], "objectnotfounderror": 5, "obs_featur": 16, "obsd": 10, "observ": [0, 1, 2, 4, 5, 9, 10, 11, 12, 15, 16, 18], "observatin": 3, "observation_data": [3, 10], "observation_data_to_arrai": 10, "observation_featur": [3, 10, 18], "observation_features_to_arrai": 10, "observation_features_to_dict": 16, "observationdata": [3, 10], "observationfeatur": [3, 10, 12, 15, 16, 18], "observations_from_data": 3, "observations_from_map_data": 3, "observe_noise_sd": [2, 18], "observed_hypervolum": 10, "observed_nois": 9, "observed_pareto_fronti": 10, "observed_sem": 0, "obsf": 10, "obtain": [1, 4, 6, 10, 11, 15, 16, 18], "obvious": 18, "oc": 3, "occur": [3, 4, 5, 10], "off": [10, 11, 12, 15], "offici": 5, "offlin": [10, 18], "offline_optim": 3, "offset": [10, 18], "often": [10, 11], "ok": 18, "old": [1, 3, 16], "old_experi": [1, 3], "old_experiment_nam": 3, "old_l": 18, "old_trial": 3, "old_valu": 16, "older": [10, 18], "omit": [0, 1, 3, 14, 15, 18], "omit_empty_column": 0, "onc": [0, 1, 2, 3, 9, 10, 15, 16, 18], "one": [0, 1, 2, 3, 4, 9, 10, 11, 12, 15, 16, 17, 18], "one_dict": 18, "one_hot": 16, "one_metric_nam": 15, "one_v": 18, "onehot": [10, 16], "onehotencod": 10, "ones": [1, 2, 3, 10, 11, 12, 18], "onli": [1, 2, 3, 4, 9, 10, 11, 12, 14, 15, 16, 17, 18], "onlin": [10, 18], "only_data_fram": 12, "onto": [10, 14, 15], "op": [1, 3, 11, 12, 18], "opac": 12, "oper": [0, 1, 3, 11, 15, 16, 18], "oppos": [10, 18], "opt": 10, "opt_config": 10, "opt_config_and_tracking_metrics_from_sqa": 16, "opt_config_metr": 11, "optim": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 15, 16, 18], "optimal_valu": 2, "optimization_complet": 10, "optimization_config": [1, 2, 3, 10, 11, 15, 16, 18], "optimization_config_from_object": 15, "optimization_config_to_dict": 16, "optimization_config_to_sqa": 16, "optimization_direct": 12, "optimization_tim": 12, "optimization_trac": 2, "optimization_trace_all_method": 12, "optimization_trace_single_method": 12, "optimization_trace_single_method_plotli": 12, "optimizationcomplet": 5, "optimizationcompletedrecord": 17, "optimizationconfig": [1, 2, 10, 11, 13, 15, 16, 18], "optimizationconfigrequir": 5, "optimizationcreatedrecord": 17, "optimizationloop": [1, 15], "optimizationresult": 15, "optimizationshouldstop": 5, "optimize_acqf": [2, 11], "optimize_acqf_discret": 11, "optimize_acqf_discrete_local_search": 11, "optimize_acqf_homotopi": 11, "optimize_acqf_mix": 11, "optimize_acqf_mixed_altern": 11, "optimize_for_pow": [1, 3, 16], "optimizer_kwarg": [2, 11, 18], "optimizer_opt": 11, "optimum": [2, 12], "optimum_color": 12, "optimum_objective_scatt": 12, "optimz": 6, "option": [0, 1, 2, 3, 4, 10, 11, 12, 14, 15, 16, 18], "oracl": 2, "oracle_trac": 2, "orang": 12, "orchestrationconfig": 13, "order": [1, 2, 3, 4, 5, 10, 11, 12, 15, 16, 17, 18], "order_parameter_constraint_to_dict": 16, "orderconstraint": [1, 3, 16, 18], "orderedchoiceencod": [10, 16], "orderedchoicetointegerrang": [10, 16], "ordereddict": [1, 3, 11, 16], "ordin": [3, 11], "ordinal_featur": [3, 10], "orearlystoppingstrategi": [4, 16, 18], "org": 18, "origin": [1, 2, 3, 4, 10, 18], "original_error_msg": 18, "original_error_typ": 18, "original_method": 18, "orign": [1, 3], "orm": 16, "osborn": 2, "other": [1, 3, 4, 6, 10, 11, 12, 14, 15, 16, 18], "other_dict": 18, "other_predict": 3, "other_v": 18, "otherwis": [1, 2, 3, 4, 9, 10, 11, 12, 15, 16, 18], "othweris": 10, "ought": 2, "ouput": 15, "our": [3, 18], "out": [0, 1, 3, 10, 11, 12, 15, 18], "out_of_design_arm": [1, 3], "out_of_sampl": 12, "outcom": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 15, 16, 18], "outcome_constraint": [0, 1, 3, 10, 11, 12, 15, 16, 18], "outcome_constraint_from_str": 15, "outcome_constraint_to_dict": 16, "outcome_constraint_to_sqa": 16, "outcome_index": 2, "outcome_nam": [2, 10, 11, 18], "outcome_transform": 18, "outcome_transform_class": 11, "outcome_transform_opt": 11, "outcome_transform_registri": 16, "outcome_transform_type_from_json": 16, "outcome_transforms_json": 16, "outcomeconstraint": [0, 1, 10, 12, 15, 16, 18], "outcometransform": [11, 16, 18], "outer": [3, 10, 18], "outlier": 10, "output": [2, 3, 10, 11, 13, 15, 18], "output_nam": 18, "outputscale_constraint": 11, "outputscale_prior": 11, "outsid": [1, 3, 11, 14], "over": [1, 2, 3, 6, 10, 11, 15, 18], "overal": [6, 15], "overarch": 16, "overload": 10, "overrid": [1, 3, 9, 10, 12, 15, 18], "overridden": [2, 10, 15, 18], "overse": [1, 15], "overwrit": [1, 3, 10, 15, 16], "overwrite_existing_data": [1, 3, 9, 15], "overwrite_existing_experi": 15, "overwritten": [1, 3, 10], "own": [0, 10, 12, 15, 16], "owner": [13, 15, 17], "p": [9, 10, 11, 12], "p1_c1": [10, 11], "p1_c2": [10, 11], "p2_c1": [10, 11], "p2_c2": [10, 11], "p_a": [1, 3], "p_b": [1, 3], "p_html": 18, "page": 8, "pair": [2, 3, 12], "pairwis": 18, "pairwise_pref_metric_ev": 18, "pairwise_pref_queri": 18, "pairwise_preference_queri": 18, "pairwisemodelbridg": 10, "panda": [1, 3, 4, 15, 18], "pandas_html": 18, "paragraph": [0, 18], "paralel": 15, "parallel": [2, 5, 8, 10, 11, 13, 15, 18], "parallel_coordin": [0, 12], "parallelcoordinatesplot": 0, "param": [1, 2, 3, 9, 10, 11, 12, 14, 15, 18], "param_df": [1, 3], "param_dict": 12, "param_i": [12, 15, 18], "param_nam": [9, 10, 12, 18], "param_valu": 3, "param_x": [12, 15, 18], "paramat": 7, "paramet": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "parameter": [0, 1, 2, 3, 7, 9, 10, 11, 12, 15, 18], "parameter1": 12, "parameter2": 12, "parameter_constraint": [1, 3, 10, 13, 15, 16], "parameter_constraint_from_sqa": 16, "parameter_constraint_json": 16, "parameter_constraint_sqa": 16, "parameter_constraint_sqa_list": 16, "parameter_constraint_to_dict": 16, "parameter_constraint_to_sqa": 16, "parameter_constraints_from_json": 16, "parameter_constraints_sqa": 16, "parameter_decomposit": 10, "parameter_dict": [1, 3], "parameter_distribut": [3, 16], "parameter_distribution_to_dict": 16, "parameter_distribution_to_sqa": 16, "parameter_distributions_from_sqa": 16, "parameter_from_json": 15, "parameter_from_sqa": 16, "parameter_nam": [0, 3, 10, 18], "parameter_name_1": 18, "parameter_name_2": 18, "parameter_names_onli": 3, "parameter_sqa": 16, "parameter_to_sqa": 16, "parameter_typ": [1, 3, 13], "parameter_valu": 11, "parameterconstraint": [1, 10, 15, 16, 18], "parameterconstrainttyp": 16, "parameterdistribut": [16, 18], "parameters_sqa": 16, "parameters_to_us": 12, "parameters_with_map_kei": 10, "parametersc": 13, "parametertyp": [1, 3, 10, 13, 16], "parametr": [1, 3, 7, 11], "parcoord": 0, "parego": 16, "parellel": 12, "parent": [3, 16, 18], "pareto": [0, 2, 10, 11, 15], "pareto_fronti": [10, 11, 12], "pareto_frontier_evalu": 11, "pareto_frontier_scatter_2d_plotli": 15, "pareto_util": 12, "paretofrontierresult": 12, "pars": [11, 12, 15], "parse_observation_featur": 10, "part": [1, 3, 10, 11, 12, 14, 15, 18], "partial": [4, 6, 10, 15, 18], "partial_data": 18, "partial_func": 18, "particular": [1, 3, 10, 11, 12, 15, 18], "partit": [11, 18], "pass": [0, 1, 2, 3, 4, 5, 10, 11, 12, 14, 15, 16, 18], "passthrough": 12, "password": 16, "past": [1, 3, 6], "patch": 18, "path": [11, 15, 16, 18], "path_to_runn": [1, 15], "pathlib": 16, "pathlib_from_json": 16, "pathlib_to_dict": 16, "paths_to_metr": [1, 15], "pathseg": 16, "pattern": 0, "pd": [1, 3, 15], "pdf": 10, "pearson": 10, "pend": [1, 2, 3, 10, 11, 15, 18], "pending_observ": [3, 10, 11, 18], "pending_observations_as_array_list": 10, "pending_paramet": 10, "pending_tri": 15, "per": [0, 1, 2, 3, 10, 11, 12, 15, 17, 18], "percent": [1, 3, 12, 18], "percentag": [10, 12, 18], "percentil": [4, 11, 15, 16], "percentile_early_stopping_strategy_to_dict": 16, "percentile_threshold": 4, "percentileearlystoppingstrategi": [16, 18], "perera": 9, "perera2018": 9, "perf_metr": 18, "perform": [0, 1, 2, 3, 4, 9, 10, 11, 12, 14, 15, 18], "perform_untransform": 10, "period": [1, 3, 11], "period_length_constraint": 11, "period_length_prior": 11, "period_of_new_data_after_trial_complet": [1, 3], "perman": 5, "permut": 11, "perturb": 3, "phi": 18, "phi_i": 18, "pick": [2, 10], "pick_best_out_of_sample_point_acqf_class": 11, "pink": 12, "pip": 18, "pipelin": [1, 3], "pivot": 15, "place": [1, 3, 10, 12, 15, 18], "placehold": 16, "plan": [1, 4, 15, 18], "platform": 9, "pleas": [1, 3, 10, 11], "plot": [1, 3, 5, 8, 10, 15], "plot_bandit_rollout": 12, "plot_config": [12, 18], "plot_config_to_html": 12, "plot_contour": 12, "plot_contour_plotli": 12, "plot_feature_import": 12, "plot_feature_importance_by_featur": [12, 18], "plot_feature_importance_by_feature_plotli": 12, "plot_feature_importance_by_metr": 12, "plot_feature_importance_by_metric_plotli": 12, "plot_feature_importance_plotli": 12, "plot_fit": [12, 18], "plot_fn": 15, "plot_html": 18, "plot_marginal_effect": 12, "plot_module_nam": 12, "plot_multiple_metr": 12, "plot_multiple_pareto_fronti": 12, "plot_objective_value_vs_trial_index": 12, "plot_objective_vs_constraint": 12, "plot_parallel_coordin": 12, "plot_parallel_coordinates_plotli": 12, "plot_pareto_fronti": 12, "plot_relative_feature_import": 12, "plot_relative_feature_importance_plotli": 12, "plot_resourc": 12, "plot_slic": [12, 15], "plot_slice_plotli": 12, "plot_stopping_mark": 12, "plot_trial_point": 12, "plot_typ": 12, "plotdata": 12, "plotinsamplearm": 12, "plotli": [8, 12, 15, 18], "plotly_analysi": 0, "plotly_color_scal": 12, "plotlyanalysi": 0, "plotlyanalysiscard": 0, "plotmetr": 12, "plotoutofsamplearm": 12, "plu": [2, 12], "plug": [10, 18], "plugin": 8, "point": [0, 1, 2, 3, 4, 5, 8, 10, 11, 12, 16, 18], "pointer": 2, "polici": 18, "poll": [1, 2, 3, 14, 15], "poll_all_trial_status": 15, "poll_and_process_result": 15, "poll_available_capac": [1, 3, 15], "poll_except": [1, 3], "poll_trial_statu": [1, 2, 3, 14, 15], "pool_recycl": 16, "poor": [0, 15], "poorli": [3, 10], "pop": 15, "popul": [1, 3, 10, 18], "port": 16, "portion": 10, "posit": [1, 3, 10, 11, 12, 15, 18], "positive_part_james_stein": 18, "posixpath": 16, "possibl": [1, 2, 3, 4, 10, 11, 15, 16, 18], "possibli": [1, 2, 3], "post": 11, "post_processing_func": 11, "posterior": [10, 11, 12, 15, 18], "posterior_deriv": 18, "posterior_objective_mean": 11, "posteriortransform": 11, "potenti": [10, 11, 18], "power": [1, 3, 10, 15], "power_transform_i": 16, "powertransformi": [10, 16], "pp": 18, "practic": [2, 18], "pre": [4, 10, 11, 15, 18], "preced": 10, "precis": 18, "pred": 12, "predict": [1, 2, 3, 8, 11, 12, 15, 18], "predict_append": 3, "predict_at_point": [0, 10], "predict_by_featur": 10, "predict_from_model": [10, 11], "predicted_effect": 0, "predicted_hypervolum": 10, "predicted_pareto_fronti": 10, "predicted_sem": 0, "predictedeffectsplot": 0, "prediction_util": 10, "predictor": 10, "pref_experi": 18, "prefer": [1, 2, 3, 16], "preference_data": 18, "preference_stub": 18, "preferenti": 18, "prefix": [1, 3], "pregener": 15, "prepar": 0, "prepare_arm_effects_plot": 0, "prepare_experiment_for_plot": 12, "prepend": [15, 18], "prescrib": 15, "presenc": [3, 7], "present": [1, 2, 3, 4, 10, 11, 12, 15, 16], "preserv": [1, 3, 10, 16], "prevent": [1, 3], "preview": 8, "previou": [1, 3, 10, 11, 15, 18], "previous": [1, 3, 5, 11, 15, 18], "previous_nod": 10, "previous_node_nam": 10, "primari": [10, 12, 15, 18], "primarili": [1, 3, 10, 11], "primary_metr": 12, "primary_object": 12, "print": [15, 18], "prior": [3, 10, 11, 16], "prior_failur": 18, "prior_success": 18, "prioriti": [3, 10, 18], "privat": [10, 18], "prob": 11, "probabilist": 2, "probability_threshold": 11, "probabl": [0, 1, 3, 10, 11], "probitlinkmean": 18, "problem": [8, 9, 10, 11, 12, 15], "problem_kei": 2, "problem_typ": 9, "proce": [10, 15], "procedur": 10, "proceed": 10, "process": [0, 1, 2, 3, 4, 5, 10, 11, 14, 15, 16, 18], "process_bind_param": 16, "process_contextual_dataset": 10, "process_result": 15, "process_result_valu": 16, "procud": 15, "produc": [0, 1, 2, 3, 9, 10, 11, 15, 18], "product": [2, 3, 11, 15], "product_surfac": 17, "profit": 15, "progr_kei": 4, "programat": 17, "programmat": 2, "progress": [2, 4, 10, 12, 15], "project": [2, 12, 18], "promis": 2, "propag": 10, "proper": [1, 3, 16, 18], "properli": [1, 3, 15, 16, 18], "properti": [0, 1, 2, 3, 5, 9, 10, 11, 14, 15, 16, 18], "proport": [7, 11, 18], "propos": [10, 15], "protect": 15, "protocol": [0, 11, 18], "provid": [0, 1, 2, 3, 4, 5, 10, 11, 12, 15, 16, 18], "proxi": [3, 15], "prune": 11, "prune_baselin": 11, "pseudo": 18, "pt": 18, "public": 18, "pull": [3, 5], "pure": [10, 18], "purepath": 16, "pureposixpath": 16, "purewindowspath": 16, "purpl": 12, "purpos": [1, 3, 10, 15, 16], "put": [10, 11, 15, 18], "py": [3, 10, 11, 16, 18], "pyro": 10, "python": [1, 3, 10, 16, 18], "python_typ": [1, 3], "pytorch": [10, 11, 18], "pytorchcnntorchvisionbenchmarktestfunct": 2, "q": 11, "qei": 11, "qexpectedhypervolumeimprov": [11, 16], "qexpectedimprov": [11, 16], "qknowledgegradi": 16, "qlogei": 11, "qlogexpectedhypervolumeimprov": [11, 16], "qlogexpectedimprov": 16, "qlognehvi": 11, "qlognei": 11, "qlognoisyexpectedhypervolumeimprov": [11, 16], "qlognoisyexpectedimprov": [2, 16], "qlognparego": 16, "qmaxvalueentropi": 16, "qmc": [11, 18], "qmultifidelityknowledgegradi": 16, "qmultifidelitymaxvalueentropi": 16, "qnei": 11, "qnoisyexpectedhypervolumeimprov": [11, 16], "qnoisyexpectedimprov": 16, "qualiti": 10, "quantifi": 18, "quantil": [10, 11], "quantiti": [3, 10, 11], "quasi": [10, 15], "quasirandom": 10, "queri": [5, 16], "query_opt": 16, "queu": [14, 18], "queue": [15, 18], "quit": 10, "quo": [1, 3, 10, 12, 15, 18], "r": [2, 12, 18], "r8": 2, "r9": 2, "rais": [1, 2, 3, 5, 10, 11, 12, 15, 16, 18], "raise_data_required_error": 10, "raise_error": [1, 3], "raise_generation_error": 10, "raise_on_non_finite_data": 10, "ran": [1, 2, 3, 15], "random": [1, 2, 3, 8, 9, 12, 15], "random_scalarization_distribut": 11, "random_se": [1, 10, 15], "random_split": 3, "randomize_objective_weight": 11, "randomized_onehot_round": 10, "randomized_round": 10, "randomized_round_paramet": 10, "randomli": [10, 18], "randommodel": [10, 11], "randommodelbridg": [1, 10], "rang": [1, 3, 6, 10, 11, 12, 15, 16, 18], "range_paramet": 3, "range_parameter_to_dict": 16, "rangeparamet": [1, 2, 3, 10, 12, 16, 18], "rangeparameterconfig": 13, "rank": [10, 18], "rare": 15, "rate": [9, 13, 15, 18], "rather": [2, 10, 11, 16, 18], "ratio": [10, 15, 18], "raw": [0, 2, 3, 4, 5, 10, 11, 12, 15], "raw_data": [1, 3, 15], "raw_data_to_evalu": 3, "raw_inner_sampl": 18, "raw_sampl": [11, 18], "raw_stat": 11, "rawdata": 12, "rbf": 18, "rbf_kernel": 16, "rbfkernel": 16, "re": [0, 1, 3, 10, 11, 15, 16], "reach": [4, 5, 15], "reaction": 9, "read": [2, 12, 16], "readabl": [1, 3, 7, 12, 18], "readi": [11, 12, 15], "real": [2, 12, 18], "realist": 2, "realiti": 2, "realli": 10, "reason": [0, 1, 2, 3, 4, 5, 6, 14, 15, 18], "reason_prefix": 0, "reassign": 10, "receiv": [10, 11, 15, 18], "recent": [0, 1, 3, 6, 10, 15], "recip": [2, 18], "recombine_observ": 3, "recommend": [2, 3, 6, 7, 11, 18], "recommend_best_observed_point": 11, "recommend_best_out_of_sample_point": 11, "reconsid": 10, "reconstruct": [1, 3, 16], "record": [1, 3, 10, 15, 17, 18], "recreat": [10, 15, 16], "rectangular": 3, "recurs": [16, 18], "recycl": 16, "red": 12, "redefin": [1, 3], "reduc": [1, 3, 10, 11, 12, 16], "reduce_state_generator_run": [15, 16], "reduced_st": 15, "reductioncriterion": [10, 16], "redund": 18, "ref_point": [2, 15], "refer": [1, 2, 3, 9, 10, 11, 12, 15, 18], "referenc": 18, "reference_point": [12, 15], "refetch": [1, 3], "refit": [11, 15], "refit_model": 11, "refit_on_cv": [10, 11], "reflect": [2, 3, 10], "reformat": 10, "regard": 10, "regardless": [2, 10, 12, 15, 18], "regex": 18, "region": [10, 12], "regist": [2, 10, 16, 18], "register_acquisit": 16, "register_acquisition_funct": 16, "register_kernel": 16, "register_metr": 16, "register_model": 16, "register_runn": 16, "registri": [1, 8, 15], "registry_bundl": 16, "registrybundl": 16, "registrybundlebas": 16, "regress": [9, 15], "regret": 2, "regular": [3, 15], "reinstanti": [10, 16], "reject": [10, 11], "rejection_sampl": 11, "rel": [1, 2, 3, 10, 12, 15, 18], "rel_hat": 18, "rel_i": 12, "rel_x": 12, "relat": [4, 5, 15, 16], "relationship": 0, "relativ": [11, 12, 16, 18], "relativize_data": [12, 18], "relativizewithconstantcontrol": [10, 16], "relax": 11, "releas": 15, "relev": [0, 1, 3, 14, 15, 18], "reli": [10, 11, 12, 18], "reload": [15, 18], "remain": [10, 11, 15, 16, 18], "remedi": 5, "remot": 3, "remov": [1, 3, 5, 10, 15, 16, 18], "remove_fix": 16, "remove_stale_candid": 15, "remove_tracking_metr": [1, 3, 15], "removefix": [10, 16], "render": [0, 8], "render_report_el": 18, "reoptim": 11, "reparameter": 2, "repeat": [10, 12, 15], "repeatedli": [5, 15], "replac": [1, 3, 5, 10], "replace_paramet": 3, "replic": [2, 15], "report": [1, 3, 8, 11, 14], "report_inference_valu": 2, "report_inference_value_as_trac": [2, 18], "report_result": [1, 3, 14, 15], "report_util": 15, "repres": [0, 1, 2, 3, 10, 11, 12, 14, 15, 16, 18], "represent": [0, 1, 3, 10, 11, 15, 16, 18], "reproduc": 15, "request": [1, 2, 3, 5, 11, 15], "requir": [1, 2, 3, 10, 11, 14, 15, 16, 18], "required_column": [1, 3], "required_dimension": 18, "requisit": 11, "rerun": 3, "rescal": 10, "reserv": 18, "reset": [3, 15, 18], "reset_runn": [1, 3], "resid": [15, 18], "resize_subtitl": 12, "resolv": [1, 3, 16], "resourc": [1, 3, 4, 15], "resource_sav": 4, "resp": 15, "respect": [1, 2, 3, 7, 10, 11, 12, 14, 15, 18], "respond": 18, "respons": [11, 15], "responsibli": 18, "rest": [1, 3, 14, 15], "restart": 15, "restor": [10, 11, 15, 16, 18], "restrict": [1, 2, 3, 10, 12, 18], "resuggest": [3, 10, 18], "result": [0, 1, 3, 4, 6, 9, 10, 11, 12, 14, 15, 17], "resum": [10, 15, 16], "resumed_from_storage_t": 18, "resumed_from_storage_timestamp": 18, "retain": [1, 3, 10], "retri": [15, 18], "retriev": [1, 2, 3, 10, 11, 15, 16, 18], "retry_except": 18, "retry_on_except": [15, 18], "retry_on_optimization_warn": 11, "retryabl": [3, 18], "return": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18], "reveal": 12, "revers": [10, 12, 16, 18], "reverse_metric_registri": 16, "reverse_outcome_transform_registri": 16, "reverse_runner_registri": 16, "revis": 10, "rf": 9, "rgb": 12, "rgb_tupl": 12, "rgba": 12, "rh": 11, "richardson": 9, "right": [1, 3, 4, 10, 18], "rise": [1, 3], "risk": [1, 3, 10, 11, 15], "risk_measur": [1, 3, 10, 11, 16, 18], "risk_measure_name_to_class": 3, "risk_measure_to_dict": 16, "risk_measure_to_sqa": 16, "riskmeasur": [1, 10, 16, 18], "riskmeasuremcobject": [10, 11], "robust": [3, 10, 11, 16], "robust_digest": 3, "robust_search_space_to_dict": 16, "robust_search_space_to_sqa": 16, "robustsearchspac": [3, 10, 12, 16, 18], "robustsearchspacedigest": [3, 10], "rohr": 18, "root": [3, 11, 16, 18], "rosenbrock": 2, "round": [1, 3, 11, 15, 16], "rounding_func": 11, "roundtrip": 10, "row": [0, 1, 3, 11, 15, 17, 18], "rss": 16, "rubric": 11, "rule": [1, 3, 10], "run": [0, 1, 2, 3, 5, 6, 9, 10, 12, 14, 15, 16, 18], "run_all_tri": 15, "run_async": [1, 15], "run_branin_experiment_with_generation_strategi": 18, "run_metadata": [1, 3, 15, 16], "run_metadata_field": 15, "run_metadata_report_kei": [0, 1, 3, 14, 15], "run_multipl": [1, 3], "run_n_trial": 15, "run_trial": [1, 3, 15, 18], "run_trials_and_yield_result": 15, "run_trials_in_batch": 15, "run_trials_with_g": 18, "runner": [0, 1, 8, 15, 16, 18], "runner_cl": [16, 17], "runner_clss": 16, "runner_for_tri": [1, 3], "runner_for_trial_typ": 3, "runner_from_sqa": 16, "runner_registri": 16, "runner_sqa": 16, "runner_to_dict": 16, "runner_to_sqa": 16, "running_tri": 15, "running_trial_indic": [1, 3, 15], "runtest": 18, "runtim": [3, 9, 14, 18], "runtimeerror": 15, "rust": 18, "rusti": 18, "rv_frozen": 3, "s2": 18, "s3": 14, "s_c": 18, "s_t": 18, "s_tc": 18, "saa": 10, "saas_mtgp": 10, "saasbo": 10, "saasfullybayesianmultitaskgp": 16, "saasfullybayesiansingletaskgp": 16, "sacbo": 11, "sacgp": 11, "sach": 9, "safe": [10, 15], "safeti": 18, "said": 0, "salt": 16, "same": [1, 2, 3, 4, 10, 11, 12, 13, 15, 16, 18], "same_el": 18, "sampl": [0, 1, 3, 4, 5, 10, 11, 12, 14, 15, 16, 18], "sample_discrete_paramet": 18, "sample_environment": [3, 10], "sample_param_perturb": [3, 10], "sample_runtime_func": 14, "sample_runtime_unif": 14, "sample_s": [1, 3, 15, 18], "sampler": [10, 18], "samples_gradi": 18, "samples_gradients_btsp": 18, "sanit": 3, "saniti": 3, "sarah": 18, "satisfi": [1, 3, 6, 10, 11, 18], "save": [3, 4, 5, 10, 11, 15, 18], "save_analysis_card": 16, "save_experi": 16, "save_generation_strategi": 16, "save_or_update_data_for_tri": 16, "save_or_update_tri": 16, "save_to_json_fil": 15, "scalar": [2, 3, 4, 10, 11, 12, 15, 16, 18], "scalarized_metric_config": [10, 12], "scalarized_object": 16, "scalarized_objective_children_metr": 16, "scalarized_objective_to_dict": 16, "scalarized_objective_to_sqa": 16, "scalarized_outcome_constraint": 16, "scalarized_outcome_constraint_children_metr": 16, "scalarized_outcome_constraint_to_sqa": 16, "scalarizedobject": [1, 3, 16], "scalarizedoutcomeconstraint": [3, 16, 18], "scale": [1, 2, 3, 9, 10, 11, 12, 13, 18], "scalekernel": 11, "scalematernkernel": [11, 16], "scatter": 8, "scatter_plot_with_hypervolume_trace_plotli": 12, "scatter_plot_with_pareto_fronti": 12, "scatter_plot_with_pareto_frontier_plotli": 12, "scatterplot": 0, "schedul": [1, 2, 3, 8, 14], "scheduler_max_pending_tri": 17, "scheduler_opt": [2, 15, 16], "scheduler_total_tri": 17, "schedulercompletedrecord": 17, "schedulercreatedrecord": 17, "schedulerinternalerror": 15, "scheduleropt": [1, 2, 3, 15, 16, 18], "scheme": 12, "scienc": 9, "scipi": [3, 11, 18], "scipy_optim": [10, 11], "scipy_optimizer_list": 11, "scope": 16, "score": [2, 9], "score_trac": 2, "scrambl": [1, 10, 11], "scratch": [10, 11], "screen": 9, "sd": 12, "sd_prior": 11, "se": [9, 12, 18], "se_hat": 12, "se_pr": 18, "search": [0, 1, 2, 3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 18], "search_spac": [1, 2, 3, 7, 10, 12, 16, 18], "search_space_check_membership_raise_error": [1, 3], "search_space_digest": 11, "search_space_from_json": 16, "search_space_from_sqa": 16, "search_space_json": 16, "search_space_to_choic": 16, "search_space_to_dict": 16, "search_space_to_sqa": 16, "search_space_update_recommend": 7, "searchspac": [1, 2, 7, 10, 12, 13, 15, 16, 18], "searchspacedigest": [3, 10, 11], "searchspaceexhaust": 5, "searchspacetochoic": [10, 16], "searh": 10, "sebastian": 18, "sebo": 16, "seboacquisit": [11, 16, 18], "second": [1, 3, 12, 15, 16, 18], "second_metric_nam": 18, "second_ord": 18, "second_order_indic": 18, "secondari": [4, 12], "secondary_metr": 12, "secondary_object": 12, "seconds_between_pol": [4, 13], "seconds_between_polls_backoff_factor": 15, "section": 5, "see": [0, 1, 2, 3, 4, 9, 10, 11, 15, 16, 18], "seed": [2, 10, 11, 15, 18], "seed_inn": [11, 18], "seeger": 2, "seek": [3, 10], "seem": [5, 10], "seen": [6, 10], "select": [0, 2, 3, 11, 12, 15, 18], "select_baseline_arm": 15, "select_metr": 0, "selected_metr": 10, "selector": 2, "self": [3, 4, 10, 11, 15, 18], "sem": [0, 1, 2, 3, 4, 9, 10, 12, 15, 18], "sem_c": [12, 18], "sem_hat": 18, "sem_i": 18, "sem_range_scatt": 12, "sem_t": 12, "sem_valu": 9, "sems_t": 18, "sens": [10, 15, 18], "sensibl": [2, 16], "sensit": [8, 10, 12, 15], "sensitivity_valu": [12, 18], "sent": 10, "separ": [1, 2, 3, 10, 11, 12, 16], "separate_observ": 3, "sequenc": [1, 3, 4, 10, 11, 15], "sequenti": [2, 11, 15, 18], "seri": [2, 3, 4, 12, 16, 18], "serial": [2, 3, 10, 11, 15, 16, 17], "serializ": [10, 16], "serializationmixin": [2, 3, 10, 18], "serialize_init_arg": [2, 3, 18], "serialize_st": 11, "serialized_st": 11, "serv": 18, "servic": [3, 8, 16], "session": [5, 16], "session_factori": 16, "session_scop": 16, "set": [0, 1, 2, 3, 4, 5, 10, 11, 12, 14, 15, 16, 17, 18], "set_digit": 3, "set_log_scal": 3, "set_logit_scal": 3, "set_optimization_config": 15, "set_parameter_constraint": 3, "set_rng_se": 18, "set_search_spac": 15, "set_single_tri": 3, "set_status_quo": 15, "set_status_quo_and_optimize_pow": [1, 3], "set_status_quo_with_weight": 3, "set_stderr_log_level": 18, "set_surrogate_and_dataset": 2, "set_valu": [1, 3], "setlevel": 18, "setup": [2, 5, 10, 15, 18], "setup_import_mock": 18, "setx": 12, "sever": 2, "shallow": 16, "shape": [2, 3, 11, 18], "share": [11, 15], "shell": 14, "shield": 9, "shields2021": 9, "short": [12, 16], "short_nam": 12, "short_run": [10, 18], "shortcut": 15, "shorten": 12, "should": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "should_abort_optim": 15, "should_check": 18, "should_consider_optimization_complet": 15, "should_dedupl": 10, "should_gener": 0, "should_generate_candid": 0, "should_skip": 10, "should_stop_optim": 6, "should_stop_trials_earli": [4, 15, 18], "should_transition_to_next_nod": 10, "shouldgeneratecandid": 0, "shouldn": 4, "show": [3, 10, 11, 12, 15, 18], "show_arm_details_on_hov": 12, "show_ci": 12, "show_context": 12, "show_parameterization_on_hov": 12, "show_pareto_fronti": 0, "show_relative_metr": 15, "show_until_latest_end_plus_timedelta": 12, "shown": [0, 12, 18], "shrink": 18, "shrinkag": 18, "shrunk": 18, "sigma2_i": 18, "sigma_c": 18, "sigma_i": 18, "sigma_t": 18, "sigma_tc": 18, "sign": [1, 2, 3, 10, 11, 12, 18], "signal": [15, 18], "signatur": [1, 3, 10, 11, 14, 18], "signific": [2, 6, 15], "significance_level": 10, "significantli": [15, 18], "silenc": 18, "silence_stderr": 18, "silent": [1, 2, 3, 18], "sim": 18, "sim_completed_tim": 18, "sim_queued_tim": 18, "sim_runtim": 18, "sim_start_tim": 18, "similar": [3, 5, 10, 11, 15, 18], "simpl": [2, 11, 14, 17, 18], "simplest": 3, "simplex": 11, "simpli": [1, 2, 3, 10], "simplifi": 10, "simstatu": 18, "simtrial": 18, "simul": [3, 8, 10, 11], "simulated_backend": 14, "simulatedbackendrunn": 14, "simultan": [1, 3, 10, 11], "simulten": 15, "sinc": [1, 2, 3, 4, 10, 14, 15, 16, 18], "singl": [0, 1, 2, 3, 4, 6, 10, 11, 12, 14, 15, 18], "single_running_trial_mixin": 14, "singlediagnosticbestmodelselector": [10, 16], "singlerunningtrialmixin": 8, "singletaskgp": [2, 16], "singletaskmultifidelitygp": 16, "singleton": [10, 11], "site": 16, "situat": [4, 18], "size": [0, 1, 2, 3, 11, 12, 13, 15, 16, 18], "size_column": 0, "skeleton": 11, "skip": [3, 4, 10, 15, 16], "skip_db_id_check": 18, "skip_fit_gpytorch_ml": 18, "skip_fit_gpytorch_mll_context_manag": 18, "skip_runners_and_metr": 16, "skipkei": 10, "sklearn": [8, 16], "sklearndataset": [9, 16], "sklearnmetr": [9, 16], "sklearnmodeltyp": [9, 16], "slice_config_to_trac": 12, "slice_valu": 12, "slightli": 16, "slinear": 4, "sloppi": [1, 3], "slow": 18, "small": 18, "smaller": [1, 3, 11, 15], "smallest": [10, 15], "smooth": 9, "snapshot": [10, 15], "so": [0, 1, 2, 3, 6, 10, 11, 12, 15, 16, 17, 18], "sobol": [1, 10, 15], "sobol_botorch_modular": 2, "sobol_gpei_generation_node_g": 18, "sobol_kwarg": 18, "sobol_measur": 18, "sobol_step": 18, "sobolengin": 11, "sobolgener": [1, 10, 11], "sobolqmcnormalsampl": 16, "sobolsensit": 18, "sobolsensitivitygpmean": 18, "sobolsensitivitygpsampl": 18, "solut": [4, 16], "solv": 11, "solvent": 9, "some": [0, 1, 2, 3, 4, 7, 10, 11, 12, 14, 15, 18], "some_state_dict": 11, "someth": [15, 18], "sometim": [1, 3], "somewhat": 18, "soo": [2, 11], "soon": [3, 15, 18], "sort": [1, 3, 12], "sort_kei": 10, "sort_valu": [1, 3], "sortablebas": [3, 10, 18], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "space": [0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 18], "sparsiti": 11, "spawn": 15, "spearman": 10, "spec": [10, 12, 14, 16], "special": [2, 5, 10, 16, 18], "specialgenerationstrategi": 18, "specif": [0, 1, 3, 4, 10, 11, 15, 18], "specifi": [0, 1, 2, 3, 4, 7, 9, 10, 11, 12, 13, 15, 16, 18], "sped": 10, "speed": [3, 10, 11, 18], "spent": [2, 3, 10], "sphinx": 18, "split": [0, 3, 10, 11, 18], "split_dataset": 18, "sq": 10, "sq_val": 10, "sqa": [5, 16, 18], "sqa_stor": 15, "sqaabandonedarm": 16, "sqaanalysiscard": 16, "sqaarm": 16, "sqabas": 16, "sqaconfig": 16, "sqadata": 16, "sqadecodeerror": [5, 16], "sqaencodeerror": 5, "sqaexperi": 16, "sqagenerationstrategi": 16, "sqageneratorrun": 16, "sqalchemi": 16, "sqametr": 16, "sqaparamet": 16, "sqaparameterconstraint": 16, "sqarunn": 16, "sqatrial": 16, "sql": [15, 16], "sqlalchemi": [8, 15], "sqlite": 8, "sqrt": 11, "squar": 18, "src": 18, "ssd": 11, "st_mtgp": 10, "stabil": 18, "stabl": 18, "stable_hash": 16, "stack": [12, 18], "stage": [1, 3, 15, 18], "staging_requir": [1, 3], "stall": 12, "stand": 11, "standalon": [10, 18], "standard": [2, 3, 10, 11, 12, 15, 16, 18], "standard_bridge_kwarg": 10, "standard_generation_strategi": 15, "standard_plot": 15, "standardize_i": [10, 16], "standardizei": [10, 16], "star": 12, "start": [1, 3, 10, 11, 14, 15, 18], "start_dat": [1, 3], "start_tim": [3, 18], "stat": [8, 10], "state": [1, 3, 10, 11, 15, 16, 18], "state_dict": [11, 18], "statedict": 11, "stateless": 15, "statement": [11, 15], "static": [1, 3, 15, 18], "staticmethod": 18, "stationar": 10, "statist": [2, 10, 12], "statistician": 18, "statstool": 10, "statu": [0, 1, 2, 3, 4, 10, 12, 14, 15, 16, 18], "status": [1, 3, 10, 14, 15, 18], "status_quo": [1, 3, 10, 12, 15, 16, 18], "status_quo_data_by_tri": 10, "status_quo_defin": 15, "status_quo_featur": 10, "status_quo_metric_valu": [1, 3], "status_quo_nam": [10, 12, 18], "status_quo_weight": 15, "status_quo_weight_overrid": 16, "statuses_to_fit": 10, "statuses_to_fit_map_metr": 10, "statuses_to_includ": 3, "statuses_to_include_map_metr": 3, "std": [10, 18], "std_of_the_standardized_error": 18, "stderr": 18, "stderr_gp": 18, "stderr_mc": 18, "stdout": 15, "steelblu": 12, "stein": [11, 18], "step": [1, 3, 4, 5, 10, 15, 16], "step_based_gs_onli": 10, "step_index": 5, "step_siz": [2, 13], "steven": 9, "still": [1, 3, 10, 11, 15, 16, 18], "stop": [1, 2, 3, 4, 5, 6, 12, 14, 15, 16, 18], "stop_ev": 15, "stop_metadata": [3, 16], "stop_trial": 18, "stop_trial_earli": 15, "stop_trial_run": 15, "stopper": 18, "stopping_markers_by_metr": 12, "storag": [1, 3, 8, 10, 11, 15, 18], "store": [1, 3, 5, 10, 11, 12, 15, 16, 18], "str": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "strategi": [2, 3, 8, 11, 15, 16, 18], "strategy_opt": 16, "stratif": 10, "stratifi": 10, "stratified_standardize_i": 16, "stratifiedstandardizei": [10, 16], "stream": 18, "streamhandl": 18, "strict": 10, "strict_onehot_round": 10, "strictli": [1, 3], "string": [0, 1, 2, 3, 4, 7, 10, 11, 12, 13, 15, 16, 17, 18], "stringenum": 16, "stringifi": 12, "strip": [1, 3, 12], "strongli": 10, "struct": [1, 3, 12, 15], "structur": [0, 2, 3, 10, 11, 15, 16, 18], "structuraladditivecontextualgp": 11, "style": 18, "sub": 16, "subclass": [0, 1, 2, 3, 9, 10, 11, 14, 15, 16, 18], "subcompon": 11, "subfield": 16, "subhead": 18, "subject": [1, 3], "submiss": 14, "submit": [11, 14], "submodel": 11, "submodel_index": 11, "subprocess": 18, "subsampl": [3, 4], "subsect": 18, "subsequ": [10, 15], "subset": [1, 3, 10, 11, 12, 18], "subset_idc": 11, "subset_metr": [1, 3, 12], "subset_model": [11, 18], "subset_outcome_nam": 11, "subset_output": 11, "subset_state_dict": 11, "subsetmodeldata": 11, "subsubhead": 18, "subtitl": 0, "subtyp": 18, "succe": 10, "succed": 0, "success": [15, 18], "success_metr": 18, "successfulli": [1, 3, 10], "suffici": 10, "suggest": [0, 1, 3, 4, 5, 7, 10, 15, 18], "suggested_model_overrid": 10, "suitabl": 12, "sum": [1, 3, 11, 16, 18], "sum_i": [1, 3, 10, 11], "sum_j": 10, "sum_marginal_log_likelihood": 16, "sum_parameter_constraint_to_dict": 16, "sum_trial_s": [1, 3], "sum_util": 18, "sumconstraint": [1, 3, 16, 18], "sume": 9, "summar": [1, 3], "summarginalloglikelihood": 16, "summari": [8, 15], "summarize_final_result": 15, "summary_df": [1, 3], "summary_dict": [1, 3], "superclass": [1, 3], "supertyp": 18, "superviseddataset": [2, 10, 11, 18], "suppli": [3, 11, 12, 15, 18], "support": [1, 2, 3, 5, 7, 9, 10, 11, 14, 15, 18], "support_intermediate_data": 15, "support_ti": 17, "supported_column": 3, "supports_trial_typ": [1, 3], "suppos": 4, "suppress": [11, 15, 18], "suppress_all_error": [15, 18], "suppress_error": 18, "suppress_storage_error": 15, "suppress_storage_errors_after_retri": 15, "sure": 18, "surfac": [2, 10, 15], "surpass": 4, "surrog": [10, 16, 18], "surrogate_from_list_surrogate_json": 16, "surrogate_spec": 11, "surrogate_to_dict": 16, "surrogatemetr": 16, "surrogatespec": [11, 16, 18], "surrogatetestfunct": [2, 18], "suzuki": 9, "sweep": 15, "switch": 15, "sympi": 13, "synchron": [1, 15], "syntact": 18, "synthesi": 9, "synthet": [8, 16], "synthetic_funct": 18, "syntheticfunct": 18, "syntheticrunn": [14, 16, 18], "synthetictestfunct": 18, "system": [1, 2, 3, 10, 11, 15, 18], "t": [1, 2, 3, 4, 5, 10, 11, 12, 15, 16, 18], "tabl": [1, 3, 16, 18], "table_cel": 18, "table_cell_html": 18, "table_heading_cell_html": 18, "table_html": 18, "table_row": 18, "table_row_html": 18, "table_view": 12, "table_view_plot": 12, "tabul": 9, "tabular": 17, "tacqfconstructor": [10, 11], "tactic": 18, "tag": [9, 18], "take": [1, 2, 3, 10, 11, 12, 15, 16, 18], "taken": [1, 2, 3, 10, 11, 12], "target": [1, 2, 3, 10, 11, 16], "target_fidel": 11, "target_fidelity_and_task": 2, "target_lb": 10, "target_point": 11, "target_rang": 10, "target_tri": 10, "target_valu": [1, 3, 10, 15, 16], "task": [1, 2, 3, 9, 10, 11, 15, 18], "task_1": 4, "task_2": 4, "task_covar_prior": 11, "task_encod": 16, "task_featur": [3, 10, 11, 18], "taskchoicetointtaskchoic": [10, 16], "taskencod": [10, 16], "taylor": 18, "tb_str": [3, 18], "tbasedata": 3, "tconfig": [10, 18], "tconfig_from_mt_experi": 10, "teal": 12, "telemetri": 8, "tell": [2, 10], "temperatur": 9, "templat": 18, "tempor": 11, "temporal_featur": 11, "temporal_lengthscale_constraint": 11, "temporal_lengthscale_prior": 11, "temporalkernel": 11, "tendenc": 0, "tensor": [2, 10, 11, 12, 15, 16, 18], "tensor_callable_to_array_cal": 11, "tensor_from_json": 16, "tensor_func": 11, "tensor_or_size_from_json": 16, "tensor_to_dict": 16, "tensorboard": 8, "tensorboardmetr": 9, "tensorize_param": 2, "term": [2, 10, 16, 18], "termin": [1, 2, 3, 10, 14, 15, 18], "test": [0, 1, 3, 8, 9, 10, 11, 12, 15, 16], "test_attribut": 18, "test_funct": [2, 18], "test_init_fil": 18, "test_initfil": 18, "test_load": 2, "test_problem_class": [2, 18], "test_problem_kwarg": [2, 18], "test_selector": 10, "test_set": 18, "testcas": 18, "testdataset": 18, "testtrial": 18, "text": [0, 12, 16, 18], "th": [11, 12, 15], "than": [1, 2, 3, 4, 7, 10, 11, 15, 16, 18], "thei": [1, 2, 3, 10, 11, 12, 14, 15, 18], "them": [1, 2, 3, 4, 7, 10, 11, 15, 18], "therebi": [1, 3], "therefor": [1, 2, 3, 10, 18], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "thin": 0, "thing": [12, 18], "third": 18, "thompson": [10, 18], "thompsonsampl": [10, 11], "thoroughli": 0, "those": [1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 18], "though": [4, 11, 15, 16], "thread": [15, 18], "three": [3, 11], "threshold": [1, 3, 4, 10, 11, 12, 15, 16], "threshold_early_stopping_strategy_to_dict": 16, "thresholdearlystoppingstrategi": [16, 18], "through": [1, 3, 10, 11, 12, 15, 16, 18], "throughout": [10, 15], "throw": [1, 3, 12, 15, 16, 18], "thu": [1, 3, 10, 18], "thumb": [1, 3], "ti": [3, 10, 16], "tie": 3, "tier": 16, "tier_or_path": 16, "tightli": 18, "tile": 12, "tile_cross_valid": 12, "tile_fit": 12, "tile_observ": 12, "time": [0, 1, 2, 3, 4, 10, 11, 12, 14, 15, 18], "time_abandon": 16, "time_as_featur": 16, "time_column": 3, "time_complet": [3, 16], "time_cr": [1, 3, 16], "time_remain": 18, "time_run_start": [3, 16], "time_sc": 18, "time_stag": [3, 16], "timeasfeatur": [10, 16], "timedelta": [1, 3, 12, 18], "timeout": [2, 15, 16, 18], "timeout_hour": [2, 15], "timestamp": [1, 3, 4, 9, 18], "timestamps_in_rang": 18, "timestep": 15, "titl": [0, 12, 18], "tkwarg": 18, "tmaptrialevalu": 3, "tmodelfactori": 10, "tmodelpredict": 3, "tmodelpredictarm": 15, "to_d": 18, "to_json_snapshot": 15, "to_nonrobust_search_spac": 12, "to_t": 18, "todo": [0, 5, 7, 10, 11, 15, 16], "togeth": [1, 3, 4, 10, 11, 12, 15, 18], "tol": [1, 3, 7], "toler": [1, 3, 7, 11, 15, 18], "tolerated_trial_failure_r": [13, 15], "too": [10, 18], "tool": 9, "tooltip": 0, "top": [10, 11], "torch": [2, 4, 8, 12, 15, 16], "torch_devic": [10, 15], "torch_dtyp": 10, "torch_opt_config": 11, "torch_prior": 16, "torch_stub": 18, "torch_type_from_str": 18, "torch_type_to_str": 18, "torchgenresult": 11, "torchmodel": [10, 11], "torchmodelbridg": [2, 4, 10, 12, 18], "torchmodellik": 11, "torchoptconfig": [10, 11], "torchx": 8, "torchxmetr": 9, "torchxrunn": 14, "total": [1, 2, 3, 4, 10, 15, 18], "total_concurrent_arm": 18, "total_dimension": 2, "total_fit_tim": 17, "total_gen_tim": 17, "total_order_indic": 18, "total_requested_tri": 15, "total_tri": [1, 2, 15], "total_vari": 18, "toward": [1, 3, 15], "tparameter": 15, "tparamvalu": [9, 15], "tproblem": 2, "trace": [2, 15, 18], "trace_color": 12, "track": [1, 2, 3, 4, 9, 15, 16, 18], "tracker": [9, 14], "tracker_bas": [9, 14], "tracking_metr": [1, 3], "tracking_metric_nam": [15, 18], "trade": 12, "tradeoff": [0, 12, 15], "trail": [4, 15], "train": [0, 1, 3, 4, 9, 10, 11, 18], "train_and_evalu": 2, "train_embed": 11, "train_ev": 9, "train_i": 11, "train_load": [2, 18], "train_pct": 18, "train_valid_set": 18, "train_x": 11, "train_yvar": 11, "trainer_compon": 14, "training_data": 11, "training_in_design": 10, "transact": 16, "transfer": [1, 3, 11, 15], "transform": [1, 3, 4, 8, 11, 12, 13, 15, 16, 18], "transform_": 10, "transform_1": 18, "transform_2": 18, "transform_callback": 10, "transform_choice_valu": 10, "transform_config": 10, "transform_fun": 18, "transform_observ": 10, "transform_observation_featur": [10, 18], "transform_optimization_config": [10, 18], "transform_paramet": 10, "transform_registri": 16, "transform_search_spac": [3, 10, 18], "transform_to_new_sq": 16, "transform_typ": 16, "transform_type_from_json": 16, "transform_type_to_dict": 16, "transformed_dimension": 17, "transformed_paramet": [1, 3], "transformtonewsq": [10, 16, 18], "transient": 3, "transit": [3, 10, 15, 16], "transition_criteria": 10, "transition_criteria_json": 16, "transition_criterion": [10, 16], "transition_criterion_to_dict": 16, "transition_edg": 10, "transitioncriteria": 10, "transitioncriterion": [10, 16, 18], "transorm": 10, "treat": [1, 3, 10, 11, 15, 18], "treatment": [1, 3], "tree": [2, 3, 11, 18], "trefpoint": 10, "tri": [15, 18], "trial": [0, 1, 2, 4, 5, 6, 9, 10, 12, 14, 15, 16, 18], "trial_as_task": 16, "trial_attribute_field": 15, "trial_completion_timestamp": 18, "trial_evaluation_identifi": 17, "trial_from_json": 16, "trial_from_sqa": 16, "trial_idx": 14, "trial_index": [0, 1, 3, 4, 9, 10, 12, 15, 16, 18], "trial_indic": [1, 3, 4, 15, 18], "trial_indices_by_statu": [1, 3], "trial_indices_expecting_data": [1, 3], "trial_indices_to_ignor": 4, "trial_level_map": 10, "trial_list": 18, "trial_param1": 10, "trial_points_color": 12, "trial_properties_": 15, "trial_properties_field": 15, "trial_sqa": 16, "trial_statu": [12, 15], "trial_statuses_to_copi": [1, 3], "trial_to_dict": 16, "trial_to_sqa": 16, "trial_to_stop": 18, "trial_typ": [1, 3, 10, 15, 16, 18], "trial_type_to_runn": 3, "trial_with_updated_properti": 16, "trial_with_updated_statu": 16, "trialastask": [10, 16], "trialbasedcriterion": [10, 16, 18], "trials_as_df": 10, "trials_by_statu": [1, 3], "trials_dict": 15, "trials_expecting_data": [1, 3, 15], "trials_from_json": 16, "trials_from_nod": 10, "trials_info": 15, "trials_json": 16, "trials_per_model": 10, "trialstatu": [1, 2, 3, 10, 14, 15, 16, 18], "trialtyp": [15, 16], "tricki": 2, "trigger": 15, "trimp": 18, "trip": [10, 11], "true": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 15, 16, 18], "true_df": 3, "true_objective_metric_nam": 15, "trunc_digit": [1, 3], "truncat": [2, 12], "truth": [2, 3], "try": [1, 3, 5, 10, 12, 15], "try_load_generation_strategi": 15, "tslib": 3, "ttl": [1, 3, 15], "ttl_second": [1, 3, 15, 16, 18], "ttl_seconds_for_tri": 15, "ttrialevalu": 3, "tucker": 9, "tunabl": [10, 11], "tunable_feature_indic": 11, "tunable_paramet": 3, "tunable_point": 11, "tune": [3, 9], "tupl": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18], "turn": [0, 10], "tutori": [3, 8, 15], "twice": [10, 11, 15], "two": [0, 1, 2, 3, 4, 9, 10, 11, 12, 15, 16, 18], "ty": 3, "typ": 18, "type": [1, 2, 4, 5, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18], "type_nam": 18, "typecheck": 18, "typedecor": 16, "typeerror": 10, "typeutils_nonn": 18, "typeutils_torch": 18, "typic": [2, 3, 4, 9, 10, 11, 14, 15, 18], "u": [2, 3, 7, 10, 16, 18], "u_0": 3, "u_d": 3, "u_i": [3, 10], "ub": 18, "ultim": [2, 18], "umn": 10, "un": [11, 12], "unaffect": 11, "unavail": 3, "unbounded_search_spac": 18, "uncertainti": [11, 18], "unchang": [11, 18], "unconstrain": 11, "unconvert": 16, "und": 11, "under": [3, 10, 11, 12, 15, 18], "undergo": 10, "underli": [1, 2, 3, 5, 10, 11, 15, 18], "understand": [0, 4, 12], "undoc": 10, "unequ": 18, "unexpect": [11, 18], "uniform": [10, 14, 18], "uniform_weight": [10, 11], "uniformgener": [10, 11], "uniformli": 18, "unimport": 18, "union": [11, 15, 18], "uniqu": [0, 1, 3, 10, 15, 17], "unique_identifi": 17, "unit": [1, 3, 10, 16, 18], "unit_x": 16, "unittest": 18, "unitx": [10, 16], "unixtim": 18, "unixtime_to_pandas_t": 18, "unknown": [1, 3, 9, 15], "unless": [1, 3, 10, 12, 15], "unlik": [1, 3, 16, 18], "unlimit": [1, 3, 10, 15], "unmarshal": 16, "unobserv": [2, 11], "unord": [10, 18], "unordered_list_html": 18, "unpack": [16, 18], "unpack_transition_criteria_from_json": 16, "unpredict": 15, "unpromis": 3, "unrelativ": [10, 18], "unrestrict": 18, "unsaf": [1, 3, 18], "unset": [10, 15], "unset_status_quo": [1, 3], "unspecifi": [1, 3, 10, 18], "unsupport": [2, 5, 10, 18], "unsupportederror": 5, "unsupportedploterror": 5, "until": [5, 10, 15], "untouch": 18, "untransform": [0, 4, 10, 18], "untransform_": 10, "untransform_observ": 10, "untransform_observation_featur": [10, 18], "untransform_outcome_constraint": 10, "unus": 18, "unwrap": 18, "unwrap_err": 18, "unwrap_observation_data": 10, "unwrap_or": 18, "unwrap_or_default": 18, "unwrap_or_els": 18, "unwraperror": 18, "up": [1, 2, 3, 5, 10, 11, 14, 15, 16, 18], "updat": [1, 3, 4, 5, 7, 10, 11, 15, 16, 18], "update_featur": 3, "update_generation_strategi": 16, "update_generator_st": 10, "update_outcome_constraint_on_experi": 16, "update_paramet": 3, "update_properties_on_experi": 16, "update_properties_on_tri": 16, "update_rang": [1, 3], "update_run_metadata": 3, "update_runn": 3, "update_runner_on_experi": 16, "update_running_trial_with_intermediate_data": 15, "update_stop_metadata": 3, "update_tracking_metr": [1, 3], "update_trial_data": [1, 3, 15], "update_trial_statu": 16, "update_trial_status": 16, "upon": [1, 3, 5, 9], "upper": [1, 3, 7, 11, 12, 14, 15, 18], "upper_bound": 10, "upper_boundari": [10, 11], "upper_paramet": [1, 3], "upper_quantile_margin": [10, 11], "url": [13, 14, 16], "us": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "usag": [4, 15, 16], "use_batch_tri": 10, "use_discret": 18, "use_empirical_bay": 12, "use_input_warp": 11, "use_internal_clock": 18, "use_loocv_pseudo_likelihood": 11, "use_model_list": 11, "use_model_predict": [10, 15], "use_model_predictions_for_best_point": 2, "use_modeled_effect": 0, "use_ord": 10, "use_posterior_predict": [10, 11], "use_random_dummy_valu": 3, "use_raw_status_quo": 10, "use_saasbo": 10, "use_upd": 10, "use_update_as_start_tim": 18, "user": [0, 1, 3, 5, 10, 12, 13, 15, 16, 18], "userinputerror": 5, "usernam": 16, "uses_non_registered_model": 10, "usual": [1, 3, 4, 10, 15, 18], "utc": 18, "util": [1, 2, 8], "utility_baselin": 11, "utility_func": 18, "v": [1, 3, 10, 11, 12, 15, 18], "v_i": [1, 3], "val": [12, 16, 18], "valid": [1, 3, 5, 8, 11, 12, 13, 15, 18], "validate_and_apply_final_transform": 10, "validate_bound": 11, "validate_constraint_paramet": 3, "validate_data_for_tri": [1, 3], "validate_evaluation_outcom": 3, "validate_experiment_metadata": 16, "validate_fidelity_trial_evalu": 3, "validate_floatlik": 3, "validate_map_dict": 3, "validate_map_trial_evalu": 3, "validate_membership": 3, "validate_metr": 15, "validate_optimization_config": 10, "validate_param_valu": 3, "validate_parameter": 3, "validate_single_metric_data": 3, "validate_tri": [1, 3], "validate_trial_evalu": 3, "valu": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18], "valuabl": [0, 15], "value1": 12, "value2": 12, "value_typ": [3, 14, 15, 18], "valueerror": [1, 3, 5, 10, 11, 15], "var": [12, 18], "var1": 3, "var2": 3, "var_gp": 18, "var_mc": 18, "varchar": 16, "vari": [11, 15], "variabl": [1, 3, 10, 12, 16, 18], "varianc": [10, 11, 15, 18], "variou": [2, 3, 18], "vector": [1, 3, 10, 15, 18], "verbos": [10, 16, 18], "verbose_log": [15, 18], "veri": [3, 18], "verify_trial_parameter": 15, "versa": 2, "version": [1, 3, 5, 10, 11, 12, 18], "versu": [15, 18], "via": [1, 2, 3, 4, 9, 10, 11, 12, 14, 15, 16, 18], "vice": 2, "view": [0, 2, 10, 18], "view_default": 10, "view_kwarg": 10, "violat": [0, 1, 3, 11, 16], "viridi": 12, "visibl": 12, "visit_asyncfunctiondef": 18, "visit_classdef": 18, "visit_functiondef": 18, "visual": 15, "vol": 18, "volum": 15, "von": 18, "w": [1, 3, 9, 10, 12, 18], "w_i": [1, 3, 10], "w_j": 10, "wa": [1, 3, 5, 10, 11, 14, 15, 16, 18], "wai": [1, 2, 3, 5, 15, 16, 18], "wait": [1, 2, 3, 5, 14, 15, 18], "wait_for_completed_trials_and_report_result": 15, "wait_for_running_tri": 15, "wait_tim": [1, 15], "wall": 12, "wan": 2, "want": [1, 3, 6, 10, 12, 18], "warm": [1, 3, 10, 11], "warm_start_from_old_experi": [1, 3], "warm_start_refit": [11, 18], "warm_started_from": 17, "warn": [0, 5, 10, 11, 15, 18], "warn_if_unpredictable_metr": 15, "warn_on_kwarg": 18, "warp": [11, 16], "we": [0, 1, 2, 3, 4, 6, 7, 10, 11, 12, 15, 16, 18], "weight": [1, 3, 9, 10, 11, 12, 15, 16, 18], "weight_decai": [2, 18], "weightedmcmultioutputobject": 11, "well": [0, 2, 3, 9, 11, 15, 16, 18], "went": 2, "were": [1, 3, 10, 12, 15, 18], "what": [0, 2, 10, 11, 15, 16, 18], "when": [0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 14, 15, 16, 18], "whenev": [1, 3, 9, 15], "where": [0, 1, 2, 3, 4, 7, 10, 11, 12, 15, 16, 17, 18], "wherea": [10, 16, 18], "whether": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 15, 16, 18], "whetner": [1, 3], "which": [0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 18], "whichev": 15, "while": [1, 2, 3, 9, 10, 11, 14, 15, 18], "whole": [2, 15], "whose": [0, 1, 2, 3, 10, 11, 12, 15, 16], "why": [1, 3, 14, 15], "width": [10, 12, 18], "wil": 15, "window_s": 6, "windowspath": 16, "winner": 11, "winsor": [11, 16], "winsorization_config": [10, 16], "winsorization_config_to_dict": 16, "winsorizationconfig": [10, 11, 16, 18], "wish": 12, "with_absolute_constraint": 18, "with_auto_transit": 18, "with_batch": 18, "with_callable_model_kwarg": 18, "with_choice_paramet": 18, "with_completed_batch": 18, "with_completed_tri": 18, "with_completion_criteria": 18, "with_db_settings_bas": 15, "with_evaluation_funct": [1, 15], "with_experi": 18, "with_fidelity_paramet": 18, "with_fixed_paramet": 18, "with_generation_nod": 18, "with_input_constructors_all_n": 18, "with_input_constructors_remaining_n": 18, "with_input_constructors_repeat_n": 18, "with_input_constructors_sq_featur": 18, "with_input_constructors_target_tri": 18, "with_is_soo_transit": 18, "with_legacy_input_transform": 18, "with_model_select": 18, "with_multi_object": 18, "with_parameter_constraint": 18, "with_previous_nod": 18, "with_relative_constraint": 18, "with_rng_se": 18, "with_runners_and_metr": [1, 15], "with_status_quo": 18, "with_str_choice_param": 18, "with_tracking_metr": 18, "with_trial": 18, "with_trial_typ": 18, "with_unlimited_gen_mbm": 18, "withdbsettingsbas": 8, "within": [1, 2, 3, 10, 11, 12, 15, 18], "without": [1, 3, 4, 10, 11, 15, 16, 18], "wmape": 10, "won": [2, 10, 15], "word": [3, 10], "work": [3, 10, 12, 14, 15, 18], "worker": 18, "world": [2, 18], "worth": 15, "would": [1, 2, 3, 4, 10, 15, 16, 18], "wrap": [11, 18], "wrap_error_message_in": 18, "wrapper": [0, 11, 12, 15, 18], "write": [15, 16, 18], "write_n_tri": 15, "written": [1, 3], "wrong": [3, 5, 18], "wrt": 12, "wtl": 10, "wtx": 10, "www": [10, 18], "x": [0, 2, 3, 4, 9, 10, 11, 12, 15, 18], "x0": [2, 18], "x1": [2, 14, 18], "x2": [2, 14], "x3": [2, 14, 15], "x4": [2, 14, 15], "x5": [2, 15], "x6": 2, "x7": 2, "x_baselin": 18, "x_i": 10, "x_label": 12, "x_metric_nam": 0, "x_observ": 11, "x_pareto": 11, "x_pend": 11, "x_test": 11, "x_tilde_i": 10, "xlabel": 12, "xlabels_by_metr": 12, "xs_by_metr": 12, "xs_train": 11, "y": [0, 2, 4, 10, 11, 12, 15, 18], "y0": 18, "y1": 18, "y_dict": 12, "y_hat": 12, "y_i": [10, 18], "y_j": 10, "y_label": 12, "y_metric_nam": 0, "y_ob": 18, "y_pareto": 12, "y_pred": 18, "y_scale": 18, "ybar": 18, "ybar1": 10, "ybar2": 10, "yeo": 10, "yet": [1, 3, 10, 11, 15], "yield": [2, 9, 10], "yjpower": 10, "ylabel": 12, "you": [1, 3, 5, 10, 15, 16, 18], "your": [0, 1, 3, 18], "ys_by_metr": 12, "ys_train": 11, "ystd": 2, "yvar": [4, 11, 18], "yvars_train": 11, "zero": [10, 15, 18]}, "titles": ["ax.analysis", "ax", "ax.benchmark", "ax.core", "ax.early_stopping", "ax.exceptions", "ax.global_stopping", "ax.health_check", "API Reference", "ax.metrics", "ax.modelbridge", "ax.models", "ax.plot", "ax.preview", "ax.runners", "ax.service", "ax.storage", "ax.telemetry", "ax.utils"], "titleterms": {"A": 13, "acquisit": 11, "analysi": 0, "api": [8, 13], "arm": [0, 3], "auxiliaryexperi": 3, "ax": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "axclient": 17, "backend": [14, 18], "bandit": 12, "base": [4, 6, 10, 11, 12, 18], "base_decod": 16, "base_encod": 16, "basetri": 3, "batchtrial": 3, "benchmark": [2, 18], "best": 15, "botorch": [2, 11, 14], "botorch_default": 11, "botorch_modular": 11, "botorch_moo": 11, "botorch_moo_default": 11, "branin": [9, 18], "bridg": 10, "can": 0, "candid": 0, "cast": 10, "cbo_lcea": 11, "cbo_lcem": 11, "cbo_sac": 11, "check": 7, "checker": 18, "chemistri": 9, "choice_encod": 10, "class": 3, "client": 15, "common": [17, 18], "config": 13, "constant": [5, 18], "contour": 12, "convert_metric_nam": 10, "coordin": [0, 12], "core": [3, 5, 18], "covar_modul": 11, "cross": [0, 10], "curv": 9, "data": [3, 5], "db": 16, "decod": 16, "decor": 18, "delet": 16, "deprec": 18, "deprecated_transform_mixin": 10, "derelativ": 10, "deriv": 18, "diagnost": 12, "dimension": 2, "discret": [10, 11], "discrete_bas": 11, "dispatch": 10, "docstr": 18, "docutil": 18, "early_stop": 4, "earlystop": 15, "eb_thompson": 11, "effect": [0, 12], "embed": 2, "encod": 16, "equal": 18, "except": 5, "executil": 18, "experi": [3, 7, 17], "extern": 10, "factori": [9, 10], "featur": 12, "file": 18, "fill_missing_paramet": 10, "fit": 18, "flake8": 18, "format": 3, "full_factori": 11, "fully_bayesian": 11, "fully_bayesian_model_util": 11, "funcenum": 18, "function": [2, 9, 18], "futur": 13, "gener": [0, 5, 10, 17], "generationstrategyinterfac": 3, "generatorrun": 3, "global_stop": 6, "gp": 18, "hartmann6": 9, "health": 7, "health_check": 7, "healthcheck": 0, "high": 2, "identif": 15, "import": 12, "improvementglobalstoppingstrategi": 6, "indic": 8, "init": 18, "input_constructor": 11, "input_transform": 11, "insampl": 0, "instanti": 15, "int_range_to_choic": 10, "int_to_float": 10, "integ": 2, "interact": 15, "ivw": 10, "jenatton": 2, "json": 16, "json_stor": 16, "kernel": 11, "kwarg": 18, "l2": 9, "load": 16, "log": 10, "log_i": 10, "logger": 18, "logic": 4, "logit": 10, "loop": 15, "manag": 15, "map": [9, 10, 18], "map_unit_x": 10, "mapdata": 3, "mapmetr": 3, "margin": 12, "markdown": 0, "measur": 18, "merge_repeated_measur": 10, "method": 2, "metric": [2, 3, 9, 18], "metrics_as_task": 10, "mix": 2, "mock": 18, "model": [5, 10, 11, 12, 18], "model_util": 11, "modelbridg": 10, "modelspec": 10, "modul": [11, 16], "modular": 2, "multi_fidel": 11, "multitypeexperi": 3, "mysql": 16, "nativ": 18, "net": 18, "neural": 18, "node": 10, "noisi": 9, "non": 18, "norm": 9, "notebook": 18, "object": 3, "observ": 3, "one_hot": 10, "optim": 17, "optimizationconfig": 3, "optimizer_argpars": 11, "outcome_transform": 11, "outcomeconstraint": 3, "pairwis": 10, "parallel": [0, 12], "paramet": 3, "parameterconstraint": 3, "parameterdistribut": 3, "pareto": 12, "percentileearlystoppingstrategi": 4, "plot": [0, 12, 18], "plotli": 0, "plugin": 18, "point": 15, "power_transform_i": 10, "predict": [0, 10], "prefer": 18, "preview": 13, "problem": [2, 14], "pytorchcnn": 2, "random": [10, 11, 18], "randomforest": 11, "reduced_st": 16, "refer": 8, "registri": [2, 10, 16], "relativ": 10, "remove_fix": 10, "render": [12, 18], "report": [15, 18], "result": [2, 18], "riskmeasur": 3, "rollout": 12, "round": 10, "runner": [2, 3, 14], "save": 16, "scatter": [0, 12], "schedul": [15, 17, 18], "search": 7, "search_space_to_choic": 10, "search_space_to_float": 10, "searchspac": 3, "sebo": 11, "select": 10, "sensit": 18, "serial": 18, "servic": 15, "should": 0, "simul": [14, 18], "singlerunningtrialmixin": 14, "sklearn": 9, "slice": 12, "sobol": [2, 11, 18], "space": 7, "sqa_class": 16, "sqa_config": 16, "sqa_enum": 16, "sqa_stor": 16, "sqlalchemi": 16, "sqlite": 16, "stat": 18, "statstool": 18, "storag": [5, 16], "strategi": [4, 5, 6, 10, 17], "stratified_standardize_i": 10, "struct": 16, "stub": 18, "summari": 0, "surrog": [2, 11], "synthet": [2, 14, 18], "tabl": [8, 12], "task_encod": 10, "telemetri": 17, "tensorboard": 9, "test": [2, 14, 18], "testutil": 18, "thompson": 11, "thresholdearlystoppingstrategi": 4, "time_as_featur": 10, "timestamp": 16, "timeutil": 18, "torch": [10, 11, 18], "torch_bas": 11, "torchvis": 2, "torchx": [9, 14], "trace": 12, "transform": 10, "transform_to_new_sq": 10, "trial": 3, "trial_as_task": 10, "tutori": 18, "type": [3, 11], "typeutil": 18, "uniform": 11, "unit_x": 10, "util": [0, 3, 4, 10, 11, 12, 15, 16, 18], "valid": [0, 10, 16], "winsor": 10, "winsorization_config": 11, "withdbsettingsbas": 15}})